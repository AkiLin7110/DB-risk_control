Most people pronounce it Fanook but when you call Fanuc directly and they answer the phone they always say Fannik.Then that's the right way to say it. Has to be. I mean they make the dang controlI‚Äôve always liked fan-uck, compromise between the two...‚ÄòFannik‚Äô. Weird fkn names/pronunciation for all of them.It‚Äôs fannik but I still say mother fanuc-ersIt is short for Fuji Automation NUmerical Controls, so it will be FuhnookIf you call FANUC support. The first thing the lady says is thank you for calling FANNIKThis is the best explanation I can give you:https://www.youtube.com/watch?v=_nnFp7Z9wGsIs Mazak, maaazaaak or mauzauk ?MAWZOKYou have to drawl it outChange the input channel from 4 to 2. Make sure baud rate matches on both endsEthernet!It has one.https://www.fanucamerica.com/products/cnc/cnc-software/programming-simulation-software/program-transfer-toolIt only costs about $30And if you don't have a switch or hub, you can use a crossover cable and connect directly from machine to PC.You can set up folders for the machine to read from... Or dripfeed from.Or manage files from your desk. Literally drag and dropI have done it with an IT guy. We checked in manual what parameters needed to change, he made sure the IP adress of PC for the machine stayed stationary and made sure the network folder worked.Fanuc: Fucked(over) ANother Unsuspecting CustomerOut of curiosity, why would you want to go back to rs-232?Our rs network has always seemed a little buggy and the file transfer is significantly slower.Tired of walking a memory card back and fourth when I could just transfer from my computer and my programs never usually get bigger than 50k lines so i can't imagine it would be to slowCouldn't you use the network connection? Transfer stuff instantlyChange parameter from 0 to 1 I think on MDI. Then change channel using MDI from 4 to 1 I believe. Then change back parameter from 1 to 0 then press reset.Not sure what you need for settings for your pc to read the connection but I might be able to help on Monday if it's not solved stillI think you'd need to change parameter 20 to 0/1/2 depending on which channel the rs232 is onDoes the NC unit have an Ethernet port (in the electrical cabinet with the 7-segment and rotaries)? You can use Fanuc Focas to transfer programs that wayyou must have got a manual with the machine.imgI use it to engrave occasionally. The only pain with it is that the serial number won't incrementally increase by itself so I have to edit each one manuallyCheck youtube.comI did. All the tutorials I could I find on engraving are on mills. Not lathes.Manual guide i?Fanuc ‚Äúconversational‚Äù programmingEzguid I. Manual guide I, whatever you want to call it. The button on my machine says ‚ÄúEZG-I‚Äù.You have made any sub programs for every alphabets?. Damn Haas has made it so easy to engrave parts.Haas is just a Fanuc with bad mazatrol canned cycles.AccurateThat's what CAM is for.They (Haas) have a great YouTube channel with a lot of good information on basics and how to navigate their controls.Just go to YouTube and type "how to use Haas controller." Dozens of great videos to choose from. Pretty similar to a Fanuc. Much easier than Mazatrol's 20 softkeys to load a program user interface.Props to haas for actually having an up to date YouTube page with relevant tutorials and explanations.You can figure out everything you need to learn about a haas through their YouTube page.Haas does a ‚Äútip of the day series‚Äù that has a ton of useful info as wellHere is Haas‚Äô programming workbook. It has gotten me out of many jams.You'll pick it up quicklyI found this video last night while trying to learn about mills myself. Hopefully it helps!!HAAS tip of the day is a good place to start.You aren't gonna have many issues coming from a Fanuc.NGC Haas is a little laggy, but nothing you don't get used to quickly.Haas is not much different from Fanuc. You'll be fine.Good news, Haas uses FANUC syntax by default (there‚Äôs also a setting that can change it to YASNAC)I had a Tormach them bought a HAAS. A week on YouTube and I learned a ton. The NGC looked intimidating at first but it‚Äôs fairly simple.I‚Äôve programmed Makino HMC‚Äôs and a lot of different Haas. Which Makino controller were you on? I‚Äôve found I much prefer the Pro6 of the Makino to either of the Haas controllers we have, which includes the NGC.As for the programming, they‚Äôre very similar. If you‚Äôre doing macro-b it‚Äôs almost the same syntax across the board, with a few quirks. Sometimes Haas doesn‚Äôt like ‚Äú1.‚Äù inside brackets, but instead it‚Äôs just ‚Äú1‚Äù which I think is dumb. Haas has more canned cycles for counterbores and engraving and things of that nature, but if you‚Äôre on CAM that stuff doesn‚Äôt matter too much. Good luck! It really shouldn‚Äôt scare you. I‚Äôm sure you‚Äôll do great with all that experience.Basic principles are mostly same. Canned cycles may have different letters but it should not be an issueAfter a few weeks you should be good. Our shop has fanuc , yaskawa, siemens machines and i learned on a haas. Lathes usually are shorter programs that i hand type sometimes but milling i use mastercam.I dont usually use the machine to actually write programs because they are not very intuitive . I mean i learned to use them for the heck of it but it is so much easier with mastercam and autocad.HAAS YouTube channel. Between the crappy conversational controls and mastercam you don‚Äôt need to learn Gcode. This is how I do it. I can‚Äôt look myself in the mirror without feeling like a hack but I make chips. üòÇIt‚Äôs like 1/3 the button pushes as a fanuc. From a user interface it runs circles around the fanuc, and has a bazillion quality of life features that are handy. From a motion control or speed standpoint it‚Äôs a turd strapped to a turd of a machine. That being said, because of how fast it is to use, it‚Äôs still my go to choice if the part isn‚Äôt super fussy. I also happen to think the enclosures are pretty decent too. Big windows, easy maintenance, good light, just wish they had better motion and a more rigid design. lol you lean on the spindle or pull a wrench on the table and the indicator moves.I have used pcmia to CF adapters for a FANUC robot. Never had a problem, everything we plugged into it worked just fine.Did you know how old the robot was?Watch the size of the flash card. Don't go over 1GB in size.You can use the laptop PCMCIA to Flash card adapter. It just sticks out of the control panel.The FANUC PCMCIA adapter allows the CF card to fit into the control, lock in place, and the little door to close.Use M198 to call programs off of the card.Must be Fanuc i series to work.I have a small VMC that uses PCMCIA cards.I'm not really sure what you're asking though. The controls memory doesn't have much to do with the device you plug into it.There should be a way to run DNC, directly off the card for larger programs. I've only ever done that a few times though, and not on my machine actually. DNC is kind of annoying and I usually just try to reduce the program size to avoid it.If you're programming in Mastercam, are you using the 'Arc Filter' Settings?If you get desperate, remove comments, spaces, line numbers, change your G00/G01/G02 to G0/G1/G2 etc.250K is enough to do some work. Hell, I have an old Mazak at work that only takes 40k.That's a new enough control model you should be able to get a CF (Compact flash) to PCMCIA Adaptor and use the CF card for bigger storage. I personally run a 512mb, and a 4Gb CF Card for my adaptor (some models won't recognize the card if it's too large, that's why i have the 512mb)It's only the super old model-18 era stuff that requires the actual PCMCIA card, with the internal battery etc. Those are very expensive and you don't need it unless you're dealing in those super old controls from the 80'sDon't overthink it. Dont listen to people talking about dataserver or fanuc PC program.1x pcmcia to cf card adaptor1x CF card. Sometimes they can be a bit picky, but they're so cheap just keep going until you find one that works. Odds are it'll be the first one you buy.Put program on card.Mode selector MDIEnable parameter writechange IO channel to 9disable parameter writeMode selector editPROG hardkeyOPRT softkeyChange device softkeyMem card softkeyScroll to the program you want"DNC Set"Mode selector REMSingle block, 0% rapid, cycle start.Thats it.Can drip feed it?We use the RS232 port and DNC4U software.We run programs from our cf cards using the pcmcia slot on the machine using an adapter. Our machines are 2010 with crap memory. A way around this lack of memory is using a fanuc pc program that creates a special file on the cf card. You drag and drop your NC files on to that file.When the control sees that file, it sees the card as if it is internal memory.Google fanuc pc tool for memory card operation and editing. Check out practical machinist forumYou will need:The fanuc PC TOOL ‚Ç¨20We needed a Fanuc option turned on in the control. Fanuc themselves might have to activate this. ‚Ç¨600CF card and cf to pcmcia adapterWorth mentioning the r/retrocomputing crowd have adapters and emulators for stuff like this that lets you use modern stuff like SD cards or USB sticks on old machines.If I recall correctly those controllers don't use work or tool offsetsYou'll also be pretty hard pressed to find folks with experience on anything that old. I would suggest getting the manuals and starting there and take it slow while you figure everything out.I'm sure there's thousands and thousands of dollars you can make with that machine once you have it mastered (or at least the basics down lol) and it should be easy to pick up similar machines for next to nothing if you want to scale upI‚Äôve used 2 3ts, been a long time though. they had wear offsets, but no work or tool offsets Had to call g50 after each tool change and use a gauge block to essentially create the offset by hand.I'd like to know your opinions on this, reliability, ease of use etc. No I know you're not a Dinosaur just a well mannered senior citizenAFAIK parts are still available for the 0T series direct from Fanuc, I don‚Äôt see why they wouldn‚Äôt be for this. I‚Äôve never had a control issue on a Fanuc that couldn‚Äôt be fixed, usually the iron around the control craps the bed before the electrical, and I‚Äôve seen machines retrofitted with 6Ts running non air conditioned for like 25 years.My $.02. Don‚Äôt know much about integrations with a citizen brand machine thoughSearch fanuc 3T and you will wind some pdf manuals...I did but would like first hand experience from someone instead of the PDFGot that one with fanuc 3t. New screen is not retrofit. It is just PC with touth screen for uploading gcode to lathe. Ask me my lord, mayby I can help ;)Buttons look satisfying. If the price drops I might be the owner of 2 of these, granted it passes some other checksLearned on a 5T. They're a different beastYes I worked on fanuc 3t I have 11 years experience Now I'm currently working on oi tfI just want my Fanuc to stop flipping to the Alarm page every time the head flips out of a 5-axis position... Tired of seeing "B axis blocked" when it's not actually an issue.Para 3111 bit 7 (NPA), change to 1. That will stop the screen changing to the alarm screen and stay on current screenHold the delete, P and R keys wile powering the machine up. It will give you a great list.You sure about that if I wipe the programs out I will be living in my carI'd love a copy! Been fighting with an old 0m!Shoot me your Gmail and I'll share the link with youHa! I have still printed paper manuals of ours 0m.We took almost dead Leadwell VMC - still fighting with some bugs (e.g. sometimwes when powering up the PSU yells with red light, push the mains switch few times - or leave it without pushing front poweron btn and it would boot, still didn't find the issue). Merry xmas to 0m user :-)What fancy controllers?I believe it was up through 21.I‚Äôd be very appreciative if I had these.A man of the people.This would be most epicIf you don't mind, may I get a copy also?I'd love to have a look. Bound to be lots of useful stuff theredoes it work on makinos?I'd be more than happy looking into these! :-)Hey homie can I get a peak at these?hello can i have the copy?That depends on how you program it.Every shop I have worked in has always been the difference between ideal and real goes in cutter comp. Precisely to prevent the above issue. Should only ever have a couple thou in cutter comp unless running regrinds.I guess you could do it another way, but it would be a pain in the butt to correct during production. I didn't write the program anyways, just kinda tried to wing it.Who's letting you run a CNC without knowing what cutter comp is? This is totally their fault, not yours.Literally day 1 or 2 of entry level operator.Distance to go distance to go always check your distance to go!!!!Or run it above the job in fresh air "just to check"Yes, if you're using cutter comp the machine needs to know the size of the cutter.Depends on if you are running cutter comp and part edge or centerline codeI have the luxury of using machines with tool setters built in, and I use them. For our other machines in the shop, we use a tool cataloging system that already has runout sorted, as well as all of our tool data and tool holder data sorted. Rather than signing out tools to employees who might work on different machines, we just sign them out to the machines. Everything is accessable by our phones and it makes all of the sorting much easier since we don't need PC's for all of our machines.I doesn't matter how basic of a setup always air cut/dry run above the part.It'd be a bit of a nuisance on the 100hour cycle time jobs I do lolWhat does Fanuc have to do with it?Your CAM method determines whether your control needs to know the dia of the tool. And that goes for all controls, not just Fanuc.Depends on how it's programmed. It's usually better to compensate in the program itself, that way your offset is just the difference between nominal and actual...but it means your code won't directly match the geometry on your drawing. Some folks find that confusing, and would rather stick the entire cutter radius into your offset page.The surface on your Part Looks very shitty.. try a lathe for better quality.Crazy thing about machines they only know what you tell them.Nice random unlabeled sectioned iso viewZero comp or nothing. I can't stand a programmer that uses radius comp.UNLESS standardized in a shop with a comparator to get the TIR and diameter values perfect.Always program to spindle center, and you don‚Äôt have to worry about it.Fanuc is not magician :)Had to look the alarm up.An illegal G code is specified. This alarm also occurs if a G code corresponding to a non-additional option was specified.Which begs the question, does it even have that cycle?A G81 spot drill isn't a big deal, the canned cycle is probably more trouble than its worth anyway, Just G1 Z-.07 F13. and you're out of there. Peck drilling might be more problematic. I don't know Fusion, but Mastercam has an option to post code long hand. I start by looking for something like that.EditMight want to make sure that feed rate is right. I feel like a lathe is going to default to feed/rev, 13" a rev will be exciting.Thanks. Replaced the g81/g80 lines with that and atleast the spot drill is working now. Now time to figure out the peck drilling. This lathe probably doesn‚Äôt have the cycles, but I‚Äôm really not sure.Just saw the edit about the feedrate, I was a bit worried about that too so I changed the g99 to g98. I just did a dry run and all seems good.Material is ptfe so wouldn‚Äôt be the end of the world if it rammed it .07deep lolDoes your lathe even have a canned drilling cycle?I have a machine with this exact control in my shop. I learned on it.You cannot use canned drilling cycles, also this machine will not tap. Hell you can't even use workshifts. You're better off using G01 for the spot, and for drilling we made a custom macro program with peck depth and retract amounts because we are a production shop but if its just a one-off you can just hand code your pecks and rapid ins/outs. Cumbersome but not that bad.Remove x from this block and put it in next block.Late to the party, but here it goes:Have you used peck canned cycles on this machine before? Some old machines didn't have the option for them.Your program has a line with G99 G18, G99 tells the machine your feed is programmed at Inches per Rev.Try replacing the G99 to G98 (IPM) and add a G99 at the line down the bottom with the G80, since you will want to go back to IPR for the rest of your program.Another option is replacing your feed (F13.3 IPM) to the equivalent in IPR= 13.3 IPM √∑ 1500 RPM = .0088 IPR.I would start by trying op #2 a chance first, since it's easier for manual editing at the machine.Try replacing your g81 with this ( N114 G83 Z-.0687 Q.19 F13.3 ) it would also be advisable to replace your g99 with a g98 on line 108 or change your feed to IPR .You are using G99 which is feed per revolution and your machine cannot do 13.3 inches per revolution. Convert that feed to IPR which comes close to .009 IPR which in my opinion is way to fast. I would do .004 feed.And use G83, not G81 for the peck drilling cycle.I‚Äôd download a pdf of the programming manual for it. It will tell you exactly what it can and can‚Äôt do. Keep in mind there are single and two line formats for Fanuc canned cycles. If your machine can‚Äôt do canned drill cycles then ya, macro is the answer.IF [ [ #550 NE 1] AND [ #550 NE -1] ] THEN GOTO 990Do you know how to do user generated alarms?I also forgot to say thank you. This community is one of my favorites and has helped me grow my career just by hanging out. Not many communities like this on Reddit.You can have multiple comments underneath alarm for the operator to read.They would switch back to the program page to see it.Also, you can change the value, #3000 = 2001-255 rangeAnd the alarm would actually add 3,000 to the value.Then you can have an instruction book on how to recover.What would the purpose of using anything other than #3000=1 be? Call it as its own labeled alarm number I‚Äôm assuming?You can use the first one but not the second. Each side of the OR or AND has to resolve to a true or false, or the OR/AND don't work.You're missing brackets though.It's an option that needs to be enabled iirc. When editing, use the arrow soft keys under the screen and look for 'C EXT'. If you can't find it, the option isn't enabled. You can always dump the program out to a PC, add the bracketed text manually then dump it back in though.You hit ‚Äúshift‚Äù and it‚Äôs the alternate function of the 4 and 5. They look like brackets on the key but it will show up as ( and ).That‚Äôs square brackets for macro programming. I‚Äôm after the round brackets normally on old lathes without brackets on the keyboard I can find it by pressing program on the keyboard then (oprt) soft key on the screen and arrow across to ext edit soft key but on this lathe it‚Äôs not there?Yellow caps are the OLD DC servos.They were damned reliable.Guess so cause its still in use!I havent seen one of those in a long time!Don't think so. Pop-up windows are part of the operating system. Not something you can add as an operator. I run Doosan Puma 2600YII and know exactly what you're saying. Just gotta pay attention to what you're doing.We‚Äôve had this happen on our Okuma‚Äôs a number of times, I ended up having to write a macro that checks offsets and tool heights against the original values and alarms if it‚Äôs off by more than a certain amount.It runs every tool change which is at the start of each number block. It‚Äôs saved a few crashes that I‚Äôve been told about so far.You may need to store #183252 in another variable #500 for example, then use #500 in the if statement.Just throwing it out there, might be easier to check C axis position instead of spindle speed.I don't have much contribute, but may I ask, why is your alarm code "#3000=333 (note)"? I've never seen a user generated code equal anything other than 1. Is this something you've done before? If so, may I ask the reason? (I'm intrigued here, not criticizing)I've also never seen a 6-digit system variable, but I've never programmed a mill-turn before haha.The #3000 variable allows you to create any alarm # you would like. My example uses 333 creating a 3333 alarmIt could just as easily be #3000=1 creating an alarm 3001. In my case, the end result is the same. PS0115Not op but you can put almost whatever value you want after the #3000= the number is added to 3000 and displayed on screen. Usually handy just personally keeping track of usage #3000=1 (situation 1) #3000=2 (situation 2) Can also be used externally #3000=96(refer to setup manual) would display ‚Äúp/s 3096 refer to setup manual‚Äù where you could have written instructions detailing how to remedy a situationThere's a range of values you can set it to and it will make the alarm number MC 3000+value you set in #3000. However, I'm pretty sure that 333 is outside the acceptable range of values- look at a programming manual. Using a value of 1 is a good way to troubleshoot, looks like OP already did thatIt's also possible that the system variable he's trying to use is not supported by the version of the control he has.That was supposed to be a pound sign "#1 ="Then it might not be the correct register for S2.Have you been in contact with Tsugami USA? (If you are in their coverage)You most likely just need to open up the P code read variable. Also, the way your logic is written might cause an issue. Transfer the system variable to a macro variable and then do your IF statement. Try to write as follows. #8570=1;#999=#183252; #8570=0; IF[#999GT1.]GOTO100;Which line does it alarm on?It alarms on the "IF" LINEI have a much older machine (2000 Robodrill, 16i-m). I run off a PCMCIA + compact flash card, and in order to do so I have to run a small program in main memory who‚Äôs purpose is just to call a sub program. The only way to access the memory card is through a sub call, I cant run directly off of it.It may be a similar situation - there are a few parameters that have to be set which tell it where to look for remote (memory card vs. DNC, for example) and another that changes the directory where subs are located (main mem vs. flash), plus a couple others that I cant rememberIm not at the machine so I don‚Äôt have my notes in front of me, but do some googling - maybe its a similar scenario. And remember that parameters on those read right to left, if you have to change anything. Also write down every change you make and where its at now.I may not be of much use. But, i ran into the same thing, Haas to Fanuc. From what im realizing its the way it is. In fact i accidentally erased a program from one of the machines i was running and then had a bitch of a good time retrieving it because it was only accesible thru a specific file the programmer had made and was only on his computer. Had to be transferred via Card or wifi. And even then it had to be adjusted once in the machineDoes your control support Fanuc program transfer tool software?I heard it is cheap (20-30 euros) software straight from fanuc and with it you can send programs for something like 250 fanuc machines via ethernet connection.I will get it soon to my workplace for 31b fanuc (Doosan HM1250)Depends on what year the fanuc is.If it‚Äôs 2015 or newer you change the IO channel to 17 if before that you likely cannot use a usb drive at all. Welcome to fanuc.You‚Äôre going to use T followed by the group number and then 99‚Ä¶ So if you are to call up group 1, you would programs T0199SweetAny reason when I try to renter my tools into the group it says write protect?You need to contact the oem. Or post the machine model number. Different oem use different timers.od kdaj obstaja fanuc v sloven≈°ƒçini ???Od 2017.Should be just M98 P(program #) ; I can't imagine you would need to turn on a parameter to do that.Was thinking the same thing. There shouldn't be anything special about calling a sub with Fanuc controls.We have 10 robodrills in our shop and I have never been able to do subroutines. All of our Doosans with the Fanuc 0i controls allow subs. But not the robo control..If the sub programs are in a different folder than the main program AND parameter 3457.0-3457.3 are all set to 1 you the machine won't find them.If the programs are in a user created folder, the machine won't find them unless the parent program is in there as well.It shouldn't be a problem. There are a couple things to keep in mind when you are doing this.One is to make sure Paramert 3457 bit 7 is a 1 and bit 6-0 are all 0. This turns the search function on and makes the other standard folders (mtb1 mtb2 library system) accessible.The folder system will allow you to have multiple programs of the same number as long as they are in different folders. This WILL confuse the machine if you try and call them with a subprogram.If you create a folder, that folder is not searchable. Meaning if your main program does not reside in that folder you created that contains your sub programs, it will no find them.make sure that you have program numbers and not program names. A fanuc control will allow you to use program names and it is very easy to input a name instead of a number. If you accidently P Set to O1000.NC instead of F set the top of your program will show<O1000.NC> (Dopest sub program) Shit to cut M99 %Edit:Seeing that the OP wants to emulate M97 Px on a Haas, I have a solution that I've tested on 0i and 31i controls, that I can loosely cover and if interested can dig up the info.Fanuc controls have a select set of 6000 series parameters that allow for custom G and M codes. Some can only be the code, some allow variables.I have customers who wanted to do just this so I created M97 in the parameters.When the machine reads the M97 P it calls a sub program and Passes the P to that sub which uses machine variable #4000 (main O; program) and simply readM98 P#4000 Q#16 (I have to look this up the P variable exists but isn't published as far as I can tell)What you are left with is something that operates as close to an M97 as you can get outside of a haas.I'm not familiar with HAAS controls but this sounds like what M99 Pxxxx does in main program in the Fanuc control. It will jump to a line beginning with Nxxxx. There is no return with a simple M99 so it would have to be done with logical programming to go back up or anywhere else if needed. I mainly use it to skip a reamer I didn't need because the drill made it to size but the reamer is there just in case.N10 M99 P1000N20 ...cutting stuff skipped...N30 M99 PxxxxN40 ...cutting stuff skipped...N1000...more cutting stuff...That's what "Edit" is for unless I'm misunderstanding this question.if you mean editing the program ur not misunderstanding but i don't know where is the edit button.Is this a joke?yes, im asking fanuc commands for fun.Use shift key for parenthesesGood luck with that one.It is not just a parameter toggle off, it's written into the ladder and protected.Both DN/Doosan and Hyundai removed any ability to toggle these off with the bit somewhere around 2016.Edit the ladder logic. It‚Äôs only realistic way to remove it.That'd be in the ladder and maybe the dcs. You ain't disabling that unless you edit those out.This is by design. It's written into the PLC, which you won't be able to edit.Good luck getting an ER on it, too.The good news is, newer door locks are using integrated RFID chips to prevent people like you from putting their coworkers in danger.Were 3 people in a prototype shop. All 3 of us want it off. Its a group decision. Im not hear to argue. Im here for information that WE feel helps us.We already do that. It's just annoying because the machine still requires the key out in some cases.Yeah take interlock off the door and stick it straight into the mating part. Our interlocks are only on the door when Health and safety come around. We have two SMEC 2600 here.No, I dont think so on the smec. You may be able to bypass the interlock in maintenance mode, but the newer fanuc controls are pretty locked down when it comes to preventing someone from getting hurt.but I have to ask why you actually need this as a feature?Ah, that's unfortunate. It would be a nice feature to have mostly for deburring parts if needed but we also run a lot of oilfield threads so it would help to be able to run the spindle at low speed when we clean the thread prior to gauging.Somewhere in the ladder. Where? No idea. Will Fanuc tell you? 99% chance not.Our smecs have an oi-tf plus control , and its keep relay 3.0 to bypass the door switches , then u can turn the key on the top of interlock to keep it unlocked forever, its like a lil triangle key , interlock looks correct but door is always unlockedThese older machines need to be further away from the zero positions before you zero return. There is a deceleration switch to count 1 rotation of the ball screws as you zero return. Last thing at night after M33, move all the axes approx 50mm away from zero and then zero return. Watch the axes slow down as they approach home.The homing is done properly. Problem is when I turn it off and on the position changes by 70mm. It used to stay previously within 1mm at the very least when doing this, every time.I reloaded the backup parameters and now it only shifts less than 1mm. Still imo it shouldn't move at all since this apparently has absolute pulse coders (it gives error message that says something like absolute pulse coder needs zeroed after reloading parameters, not normally showing that at startup)Sorry, went into milling mode there, you won't be using M33 at the end of a shift. The same principles apply though. Powering off too close to the zero return switch causes your issues. The machine doesn't have absolute pulse coders, so doesn't know where it is after power off, hence zero return. Move the axes away from zero at the end of the shift and zero return in the morning. You shouldn't get an over travel.This is the issue, it does this at any location within the travel and it's always about positive 70mm off the true home position after a power cycle. I have reloaded the parameters from a backup that but that shouldn't cause it either as it didn't do that when I took that backup...Also it has red servos with pulse coders, don't know if they're absolute thoughHad the same issue with a Haas lathe. Encoder back up battery needed to be replaced. Not sure if a machine that age has an absolute encoder.Is there back lash in the ball screw you are working with?It's used in mass production for 30 years and there's about half a thou of backlash (doesn't affect this issue)I would recommend a service call there is a issue In with the axis encoder and or motor fanuc does have a call center for over the phone support but I. Not sure how much help they can be with a machine that old.You likely need a PLC edit or a new firmware of some sort. That likely involves buying a licence for the PLC or firmware software from fanuc. The price will have a lot of zeroes in it.So it‚Äôs not possible. Got it!The machine demands a blood sacrifice.This is the correct answer.The message is mostly cut off in your picture, but as a wild guess- if the machine got e-stopped, you have to hit the power button again on some machines after clearing the estop button.You need to do a blood sacrifice, it helps keep the machine tolerance. /sI apologize I mean the red oil symbol. Edit: centered up in the the photo next to the axis symbols.Most cncs will stop the hydraulic system when in an Estop state. This can cause "low hydraulic pressure" alarms in addition to the general Estop alarm. To be sure, check the sight glass on your oil tank.Apart from oil/grease level low, have had similar for low air pressure on some machines. If it's grease it could be an air lock (should be a bleeding nut under the grease unit) if it's oil check the pot for anything loose in there that could trigger the lube low switch. That's everything I've come across sorry if no help.We have a dvf5000 but it's heidenhain. I haven't touched a fanuc control in ages and don't miss it lmaoIs your way lube low?Don't worry about the Haas. They are basically fanuc for dummies.Mazak is different; you won't instantly figure it out without some guidance. Not complicated, but not generic like a haas.Fanuc fucking sucks dick for a modern control.It's like their business model is "let's do the same fucking thing because we're too cheap to make a useful UI."Mazaks are not very user friendly in my opinion. That being said there is no reason an experienced person couldn't mostly learn them in a couple days. Might need a couple things pointed out to them.I'm a fan of Mazak controls.Haas are super user friendly. A person could probably self teach Haas control in a day.I've taught the haas control to people in a matter of hours.Mazak took about a day and a half with the tech on site to become well versed in what we need.We only have HAAS in our shop.My coworker never worked on a HAAS before when he was hired here, and even he could figure out the controller.His first few weeks he was a little slow and had to take extra time to hunt down buttons, but it didn‚Äôt take him long at all.It really shouldn‚Äôt matter.In my experience, it shouldn't matter if you show interest in wanting to learn them and following through with it. I run a 7-axis Haas and a 5-axis Mazak (both lathes) with no real training at all. The Mazak I find to be great for simple turning operations, but some of the more complex features with live tooling I end up writing out in G-Code instead.In short, I'd say it probably comes down to the shop and what they're looking for. They may have had someone quit or retire without warning and they need to fill that spot, so training may not be an option. But I'd say if they put in some patience, a well rounded machinist should be able to do figure out the basics on their own with or without a brief run-down.It was a short notice deal, guy never came back from vacation. But again it was a Haas, idk.Some signs say the guy might not have been worth working for in long run. But damn that pay would've been nice.It literally doesn't matter what machine or cam software you use. Some machines and controls are better than others and same goes for software but at the end of the day all that matters is you can make parts in tolerance.I got snubbed hard in my job search because I don't know mastercam. Oh well, I see the same place (small 3 man shop) with job postings going up every few months for almost 2 years now. They missed out on me because I didn't know mastercam and looks like it really did them well. On the other hand, I found a shop that taught me enough to be making parts in Mastercam within my first day.This exactly. I've self taught myself Fusion360 for shits causey shop does mostly 2+d work where we the draw tool paths out. Figuring this shit out is a passion, not just a job to me. I was a damn short order cook and came in to a small father son shop and mixed shit up cause I was making improvements in setups, programming efficiency, tool life by running proper speeds and feeds, more efficient fixtures. It's been great learning wise. I may even come across cocky at interviews, but it's because I know this is my shit. I completely accept and acknowledge ignorance and look at it as a way to improve and learn. That last part they don't want to understand.I make less than 20 and I'm programming/ runningy job while setting up and teach the two newest guys what to do. The son deals with all the paperwork bs and some shop work. Father has pretty much retired. The son has no family so I have been told on many occasions that the shop will be mine once he retires. My 14yr old son is on board to get into the shop and learn, and that has immense value, but that's still some years off and again, my wage is shit for all Im capable of.I love this career but I feel incredibly stuck running in place getting nowhere.If you can run a calculator, you can figure out how to operate a machine. Programming, diagnostics are an entirely different can of worms, which can be wildly different based on brand.Tl:dr; brand specfic requirements are retarded. A good machinist doesn't care what fancy name is on his control. A service guy cares a little.It is not your fault, but it is the shop's prerogative as they might not have time for indirect labour & overhead cost associated with training... they want a plug & play crew...In saying that, in my own experience, I've made recommedations resulting in positive staffing outcome even for applicants or candidates with little but relevant experience.After the interview, we walk them trough the shop & let them ask the best & most intelligent questions.. From there you'll know pretty much who is switched-on & interested even without experience...Implementation KSA metrics follows thereafter...once hired as probationaries..It's good to be exposed to as many different controllers as possible, but not necessary. The more you've seen, the easier it gets to learn them.My only prior experience to running a HAAS was operating a CNC wood router, which was pretty much a load and hit go kind of operating.That being said I learned the HAAS machine controller in about a week to the point where I could set-up jobs in about an hour or two and by the first month I was going job to job without supervision. After a couple months I started to be taught on a HURCO 5-axis and that sucker took a good couple weeks before I could press go without someone checking over my offset changes and dry running the program. The Brother and Kittamura at my job scare the daylights out of me, too many buttons.I don‚Äôt get the whole control thing. I only work on my own shit and I‚Äôve been able to figure out the three different controls I‚Äôve had. It just seems stupid to me for shops to pass on people for that. If I owned a shop, that‚Äôs the last thing I‚Äôd care about. I‚Äôd just want someone that knows what they are doing. Who cares if they are a little slow for a few weeks to learn a control‚Ä¶Who gives a shit, haas control panel or McDonald‚Äôs pay till same shit a paycheck is a paycheckThey‚Äôre all similar. At my job, we have Doosan lathes with Fanuc, a Haas lathe, a Haas mill, a Fagor controlled lathe, a fadal with a NXGEN control, and a boring mill with a Heidenhain control. Only one that gives me trouble is the Heidenhain, and that‚Äôs only because I haven‚Äôt had time to play around with it and figure it out. If you show interest and a basic understanding of how to navigate and run the control, you should be fine.Just learned a Heller with a Siemens, my first Siemens control. Definitely wouldnt be able to jump on that without guidance. Heck even the SMX with fanuc control tool some figuring out because of the dual channels and lower and upper turret.I‚Äôve never had too much trouble switching to different controls although I‚Äôve never worked on a Mazak. I do hate how specific some job ads are on what they want for experience, but I think more often than not it‚Äôs just their wish list for the perfect candidate and at the end of the day they‚Äôll take what they can get.Haas and Mazak are both relatively simple to me, started on Okuma and then fanuc. A good machinist is a good machinist once you learn the basics of the controller. I don't see a ton of places that bother with Mazatrol or IGF when Cam software exists at this point.I mean for the most part a good machinist should be able to to adapt rather quickly. Every machine has certain M and g codes that are machine specific but definitely watch out if you get out on an okuma mill or lathe. That G15 and g56 could cause some trouble if you don‚Äôt know what your looking for and we‚Äôre used to running fanuc/haas for a while.no , never could figure it out , seems easier to just manually type the program and use sub programs if neededYup, it's the bomb. Once you get used to it it's very good. Made some very interesting parts with it.Old hardinge elite 8/51.Use it for bolt circles a lotNo, only the simulation.We ‚Äòalmost‚Äô only use the dialog for lathe, it happens we need to use SolidCAM for advance stuff though :)I used similar on simens ui for really complicated profiles or if client gave us shitty blueprints (i didnt use pc cams for lathe). It cut down programming time because i could do both roughing/finishing cycles at same time, and ad them as subprogram. Only shitty part was that siemens didint post it own code as g-codes, it was something else, no one was able to read and edit it. so fine tunig had to be done it own editor, but it was easy.For complicated geometries, yes. For simple shit, no. It's another tool in the box, but it's a little cumbersome to use exclusively.It should be but could dependant and the model and builder options. We have monitoring on out tornos with Fanuc control and a Doosan puma 2000y. Two other doosan lathes but no monitoring option on them.I only use the tool life monitor on Citizens for the cutoff toolThere‚Äôs a job that runs a small drill and a small tap that I‚Äôd like to set up a pair of alternates to, after C amount of parts have it quit using set #1 and start using set #2Ignore the "/". It's just there to get around reddit not liking G code./ #5223= Z value for new bar. (Resets G54 Z)/ #100=0. (Sets counter to 0.)/ N1/ ~TOOLPATH~/ #5223=[#5223-.65] (This line increments your G54 Z by -.65)/ #100=[#100+1.] (This line adds 1 part to your makeshift part counter)/ IF[#100LT12.]GOTO1 (This line sends you back to N1 if the number of parts machined is less than 12.)/ #100=0. (Once you have 12 parts, the program continues on to this line, and resets the makeshift counter to 0.)/ M30You can use a G10 line or play around with different variables to find out if you want to use #5223 to increment G54Z or not. You should also choose a variable that isn't being used for anything as your counter. #100 gets used by probes and tool eyes a lot, so you may need to find a different variable.This is your simplest answer. You can leave your gcode untouched and write increments to your existing work offset without any operator interference. The only thing I would add is to write your 1st part zero to G54. Write G54 to G55, increment that and run on G55.I mean I think you can set the geometry for each tool to the first length, and then use G54 Z=0, G55 Z=-1*(part length+part off+facing stock), G56 Z=-2*(part length+part off+facing stock) etcThere should also be a Gcode (G10? Or something) that can be used to shift the offset every cycle as wellIf you skim one of the faces of all the blanks on a different work center first and hold them all to the same overall length, you can just set your initial G54 to the same spot every time. And let her eat with the first set up method. Depends on if you have a G50 type machine or a geometry page though.I have G54 to G59 total 6 WCS. Is there a way to add more like 54.1, 54.2 if not, 6 wcs wont solve my problem for 12 parts.I like your idea if there's shift offset code in fanuc that I can use to run same program with incremental z value for G54.Hi guys, thanks all for your input. G52 is the easiest way for work shift. Works absolutely nice.use a main program that runs 12 times. at the end of your sub program do a Z zero shift the length of your part plus cut off plus facing. make sure to shift back the entire length at the end of the mainBut how thats gonna shift G54 in Z value? If I am not wrong, once your subprogram has G54 in the begining, it will always run with G54 value.Share programUse a macro or just make a program for 12 parts.Add this line just before M30G10 L2 P1 W-0.75G10 is programmable parametersL2 is for changing a work offsetP1 is G54. (p2-G55, P3-G56 etc)W-0.75 move Z work offset incrementally, .75" in this example.Then after every 12 parts the operator needs to set a new G54 Z zero again.Use a square set up for a little longer then said lengthYou need to have a dnc program to send files usually. Depending on your controller age.Make sure your io is set to 4 in the parameters. Honestly I prefer to get a flash card or flash thumb and just load programs manuallyWe use this thing called "smart cable". Should be first result on google.Laptop with a 9 port serial, or a USB to serial, plugs into it. Then it plugs into the 25 pin on the machine.Programs get sent with a program called terra term.I have mastercam, do I still need to send via tera term or I read somewhere that mastercam has built in dnc capabilities? And then I just have to make sure both machines are thinking in ISO vs EIA? I watched a video from TIE industrial about it and barely understood what was going on..That's what they're for. Never heard them called that before.I guess I should‚Äôve explained this machine was bought as a floor model and had no fixed forms in it when it was purchased.. currently just the ones I‚Äôve been creating as I‚Äôve gone along.. maybe I‚Äôm referring to this incorrectly.?I also have never heard them called this ( I am a machinist)They are part of the Manual guide OI on newer Fanuc controllers. That being said it has been tough to find anyone that has put them online. they are small sections of programs that help with the conversational programming settings on the machine.They are called ‚Äúsnippets‚Äù on the DMG-MORI I have the pleasure of having to deal with occasionally. I don‚Äôt use them though. I can usually just write it out faster than hunting through the ‚Äúsnippets‚Äù and making those work. But the more programs you have to write or fix yourself, the easier it will get. Copy and paste!I've glanced over manual guide for a long time not knowing that it was the setting ive been looking for. did you ever find any online that are able to copy? its been a pain trying to create them and make them work with the machine. ive used conversational controllers before but these new fanuc have a lot more manual interaction and there are many detailed videos on what codes to use. I just took apart a proven program and basically copy-pasted the tool starts with some others but havent had luck getting it to work with the conversational for OD :/Tried rounding down the feedrate? While programming, I never use decimals in feedrates.I use decimal fr all the time, but that‚Äôs worth a try- also, try commanding G98 before G1 z-1.1‚Ä¶.. also might want to command what plane you are cutting in : g18‚Ä¶and for the fuck of it, pop a g40 prior to all of that make sure comp is canceledI will try that. Output is from mastercam so feed rates are calculated.Had this issue on a lathe earlier, make sure you have an M3/M4 with your speedDoes Z-1.1 violate a soft stop?Why do you say you should drop out??Also, what does your position say you are at for program and machine coordinates at that positionI have entirely self taught mastercam to myself. The instructor can‚Äôt figure out a lot of simple mastercam issues that I had to call the rep to get answers to. 90% of the class comes to just play games on their phones all day. Me and another guy make up the last 10% and we keep running into roadblocks that no one in the school know how to solve. Shall I go on?Can you post picture of screen with machine position and active G and M codes?What was your previous x/y move before this line? If you are running cutter comp, the control could have some issues figuring the math. Have had this problem before with tight lead in and outs.OfsetIt should be F6.42 not F6. 42 kill the space.I run a fanuc 21i controller. That F6. 42 will confuse it. Just rewrite that part via direct interface and remove that space. Some programs have an issue with encoding the correct block spacing for Gcode on Fanuc controllers. You can download notepad ++ and use it for checking them. There is even a language identifier for Gcode as well. I keep a copy on my smart fone, just incase...Ist "Y1" a code fromm Fanuc or should it be "G1 Y..."?Edit: nevermind G1 is active. But from Z2 to Z-1.1 with a feedrate of over 6 per rotation...isn't there a collision in the simulation?The part is in a trunnion. Z0. Is in the center of the trunion. Can the machine not go past z0. Into the negative?Is G94 active (feed per minute)?Or G95 (feed per rev)?I thought that too but then the tool would have to be not spinning for there to be no movement. RPM of 1069 and a feed per rev of 6.42IPR...that would be going real fast.can you share the whole program?I would try to move Z1. To another line, away from your G43 command.And did you select the proper post processor, for machine with an A axis?Try to put a X0.0 in before your G3. Also you can single block each line to see exactly where it is stopping. The controller looks ahead when in auto.Which line is it alarming out?Rerun the program in single block so the machine will not read ahead. This way you'll know which line is giving you the alarm.Can you move it at all? If not it probably tripped the e-stop and you just need to hit that "emergency alarm reset" button to free it up. If it can move it sounds like it just needs zero returned.Edit: if neither of those things work I found an incredibly detailed document from Doosan about fixing this error, this should help. One of the best things Doosan has going for it is how good the documentation online is, always start by just googling the error, you'll almost always find good reference material, even some youtube videos from Doosan.https://www.cnczone.com/forums/attachments/2/8/4/2/0/9/542748.attachThat documentation is incredible thank you very much. I can move the machine with handle jog but going to x0 z0 manually doesn‚Äôt make the alarm go awayShould just go to the next N12. I don't think FANUC supports directional goto statements. I've rarely felt the need to have multiple labels of the same number though. Not sure why you would do that.It will go to the next N12 in the program. Fanuc says N numbers should be unique in a program. It‚Äôs been a while but I think it searches down the program for the N number of your goto and then jumps to the beginning and searches to the current line. If you have repeated N numbers then the position in the program of the line calling the goto will change which line the goto jumps to, which is much more hazardous than having unique N numbers.Exactly. Fanuc only has two things going for it: widespread familiarity and dead reliability. Other than that they are have stayed in the 70s while other brands have surpassed them as technology evolves. For many shops, that is ok. For our shop, fanuc controls are weighing us down.Another vote for Heidenhain. We have a shop full of them. Could never go back to FANUC!Heiden fan boy here.Heidenhain IMHO the best control made. They are actually the old Phillips control. Heidenhain bought Phillips in the 90's if my memory serves me. Siemens is my least favorite control.Heidenhain but I‚Äôve only ran heidenhain, on a mill with universal head so the rotational ability of it makes things so simple. Siemens on a 3+c lathe and it‚Äôs certainly got its quirks. Might just be how it‚Äôs setup but I find the Siemens rather limited from a conversational standpoint with the milling. The heidenhain is easy to make it do whatever the fuck you want but the Siemens is still newish so still a lot of learning to doI've only ever used Heidenhain and love it! Easy and quick to program.We have a Siemens in a shop full of fanuc, it‚Äôs weird‚Ä¶ Only one guy knows how to run it and it took a few months to figure out.I hate all things fanuc with a fiery passion. I use heidenhain TNC640 and i absolutely love it to death. We had another machine with a Siemens 840 that i fooled around with and it didn't really tickle my fancy, but i do believe it is a solid choice. I would choose heidenhain over all the rest.Fanuc.For me, the heidenhien control isn't worth it. On a 4 axis capable Doosan it's a 20k option, and the service is significantly more expensive.If a Fanuc machine doesn't come up in the morning, I know it's not going to cost more than 5k to get it fixed.Fanuc service is expensive, but next level. You call them up, tell them you want the full beans. The next day, a pallet turns up with every component in your machine. The day after, a tech turns up, and unless it's a motor or a MTB part, your machine WILL be running.And it'll be that way for the next 15 years. If you can tell me that's true of siemens or heidenhein, I'll eat my hat.definitely Heidenhain, i have programmed on a lot of different control systems ( fanuc , mazatrol, Haas, Heidenhain and Hurcos programming system ) and can honestly say that without any doubt that Heidenhain is by far the best and easiest to use . if i was starting my own shop all vmcs would have Heidenhain.I only use heidenhain so the answer is easy for meI cant help youFanucAvoid Siemens. We have several Siemens controls. Not a fan üëéüèøI run Siemens and Fanuc. Of the two I prefer Fanuc. Ive run the Siemens on and off for probably 10 years and I just don‚Äôt find it as good. Saying that it probably worth saying that the Fanuc is my daily.Have experience on all three but the most with fanuc but I do like their controls more alsoWe have all three and the Heidenhain is the best controller hands down. Siemens second, Fanuc third. The Fanuc control is slow, antiquated, and has non-existent memory compared to the other two.A Fadal is just a jazzed up fanucI‚Äôve run a lot of Siemens lathes (Hyundai) Hands down my favorite Big learning curve but worth it. Grooving cycles the best there is. Now non existant- obsoleteI dont like fanuc. Haas is betterI'll have any of them. Boss is obcessed with Mazatrol, but we do not use any conversational, so I don't see the point.I think it needs to be fat16 which would be fat on the computer. No idea why it's not working.Ok, maybe it's just a cheapo card and I just need to pick up a higher quality one.Its funny how these machines are so expensive but my company bought cheap memory cardI think it needs to be a smaller size than 128GB.Sorry, I meant 128MB. I know I want to stay below 2 GB. I'm going to edit my postSomeone told me that this happens to non fanuc cards. There are a few brands that will work but not every brand will. I found what I'm looking for online but the bad thing is I want to just go pick it up in store somewhere close to meüòêhttps://cnc-specialty-store.com/flash-sram-cards/compact-flash-card-256mbSomething like this apparentlyOnly some brands work, and even then only some sizes, we use Transcend brand 2GB cards at work (the 4GB will not work), they work fairly well, sometimes if you just unplug it from the PC without ejecting it seems to create an issue and needs to formatted, idk what kind of format, just right click on the drive name and then click format seems to work fine for me.Hmm ok.I know when I first put this card in, it's name was transcend on my PC.But I think the card adapter is transcend because the card was really cheap looking and is a BR & TD from Amazon.Maybe I will try to get Transcend as well.I'm just a millwright trying to get things going hahaCall fanuc and buy the kit its like 60 bucks. 2gb card and the needed cf adapter. Fyi if memory serves the doosan control has to be in tape mode to run off the card, and/or you have to call the program via an external sub call M198.Thank you,I read about changing parameter 6030 to 198 to allow external sub call. I will wait for my memory card to arrive and test it out.for now, I had to add 2 sketch boxes covering half the part as machining boundary and run each half lmaoCheck if the PCMCIA port doesn't have damage on the connector pins.what is parameter #20?might just be a bad card or a wrong parameter somewhere.It's probably going to be 90% 3+2 programming. what software is it? mastercam?Mastercam. I‚Äôm assuming I can do most everything with tilted center plane (G68.2). My question is when do you start using G43.4 / G43.5? as I don‚Äôt know how Mastercam‚Äôs posts handle that.If the probe is run with OKK macros, the system is called T0-II software. Or if you're lucky someone added Renishaws Inspection plus.I still have a copy of the T0-II software manual.5-Axis Fanuc is either tilted work plane or TCP.Tilted work plane (G68.2) is based on Eulerian angle.TCP is G43.4Cool. I‚Äôll do more research on TCP / tilted work plane now that i know what they‚Äôre using.How is the T0-II software to work with? Unfortunately I don‚Äôt know what bells and whistles they got for Mastercam. If they don‚Äôt have the Renishaw plugin I will try to get them to buy that.I don't program OKK but I program mcam 5 axis for Fanuc's newest 31i.Depending on how the company you're going to operates there are a handful of ways the post will manage offsetting and executing g43.4.What I do is set up a template based on a work offset, based off the top WCS as my picked up work offset. So top is the top of stock and that is g54, in that template I also have g59 saved as the face of the pallet the workholding rests on. I use g59 to rough in all my probing positions.All 3+2 will be programmed using top as WCS and c and t planes as your tool axis plane. This shouldn't change for an OKK, with a Fanuc or Mitsubishi controller.For TCP, you will be doing all the work in top, WCS, tool and c planes. Unified is really really good. I generally use it as either to point, to chain or 3 axis with a named plane if I don't need the 5 axis motion. 5 axis can become an absolute mess drawing vectors and chains to follow so I recommend getting very good at organizing your levels manager, commenting what level stuff is driven from in the toolpath manager.Do you use G54.4? Fancy talks a lot about their work offset error compensation in their webinar videos.Using G54 and G59 like you do seems like a good system. I‚Äôve seen crashes because people use too many work offsets and get them confused.I‚Äôm a fan of programming as much as you can off off the top-center of the pallet. ( Then offsetting up with dynamic work offsets). Saves a lot of fuckery with setting Z-depth off of the stock and maybe milling into vice jaws. Granted if you have a 6‚Äù vice in the machine that might not work as well as top of the part because of alignment issues.Unified looks like a great tool path. Same with multi-axis deburr. And yeah, it seems like matter what you do Mastercam wants to become a mess of levels. I have an OK system to keep them organized.Get a Postability post and call it goodAre those better than the Mastercam posts? I‚Äôve never heard of that company.I wanna get away from setting G54 zero off the top of the part.DMG Mori application engineers will tell you not to zero off of the top of the part. and to zero off the fixture instead. If the material is inconsistent that‚Äôs a material problem and not a problem with your program. Add a few passes to account for variations in material.I‚Äôm pretty sure the idea of G54.4 is so you can set G54 off the fixture and then just probe the material to make any minor adjustments. Kind of like what you‚Äôre doing with G54 / G59.Fanuc will do it for a couple of grand. Bastards.There's a few cheat sheets floating around out there that have the parameters sometimes those controllers have the option to unlock more memory with just a bit change. We had a tungtia topper vmc that I was able to double the memory on with just a bit change.Might look into getting the Fanuc Memory Tool. Look it up on YouTube. We use it on some of our robodrills, it allows us to store and run much larger programs then what the Fanuc control will hold.Those left covers look like a flash card slot. You can dnc from the flash at almost the same speed as on board. Compact flash card is way cheaper and more memory than a new fanuc board.Neat, didn't know FANUC had one, I'll have to study up on this!I use a Siemens trace function for process monitoring. But what it's really capable of depends on the creativity of the data consumer.I've seen this used to identify poor 5ax tool path (ie. unwanted axis reversals and inconsistent velocity).You can maintain a constant spindle load by driving your feedrate as a function of the parameter. Heidenhain has a version of this already.You can use historical data to drive whether or not your real-time process is going to produce a good part.As service guy I use it quite alot to find information. You can see where the position error is, how much. For instance a customer had a table on table machine with tool marks on specific moves. I showed the customer which axis is bouncing around. We adjusted preload, slightly better. Swapped encoder on/off, went away, change the encoder, issue solved.Waveform can also be used if you have the software to 3d map the tool path and use the servo data to see where the heavy cuts are and how out of position, torque is required, etc. You can adjust programs based on real data instead of running it through vericut to simulate it.Just my opinion it's not a one time use if you want to fully optimize your machine.parameter change to send variables. look through your parameter book and/or call machine oem. there's likely a charge to turn on.Can you use something as simple as DPRINT? I have done something similar with Haas machines, but I'm fairly certain it'll work on your Makinos. I don't know where it'll output that info -on my Haas machines it'd just output to a thumb drive- but I'm sure you could figure it out!Ive seen people talk about it, but im clueless on how to use it. Would you know of any good sources?I do this all the time to output inspection reports.Try this:POPENDPRNT[SAVEDVALUE1IS#500[34]]DPRNT[]DPRNT[SAVEDVALUE2IS#501[34]]PCLOSIt will save a DPRNT.txt file to you I/O channel.Edit: reddit screwed up the formatting. You can make a space between characters in the DPRNT statement using a star.Depends on the machine builder, but probably it switches off the lights in the machine during production and after x amount of time that the machine has been standing still it powers down the drives. The machine manual should have an explanation about what it does exactlyAaaalright. It's a hyundai wia L300MC. My coworker said he tried it once and he thought it acted weird and so he turned the eco mode off. Will have to try it for myself. ThanksI work with homag cnc routers and they have thus eco mode too. Strictly power saving when idlehttps://parts-provider.com/fanuc-series-16-18-backup-and-restore-procedure/So the major problem I had And I swear to you, this is not out there easy to find InformationSomehow, the Internet Frustrates me more now and solves fewer problemsAnyways, what had to be done was to hold the reset and the delete key when it was powered onThat is the only way that the read function will become availableAfter the power is on, you still have to change the parameters for communication you have the ability to read your back up file once you get your stop bits and baud rate adjustedIf your parameters are truly goneThe machine still has to Be started with the reset and delete key pressed when you turn it onI feel like Fanuc had special functions with every new seriesI can‚Äôt remember all of them along with the Yasnak and the Fadal and the Haas and Siemens and Okuma and the 20 other controls I‚Äôm not even listeningNormally M31M32 on our YCI and YCM lathes. Easy enough to try each and see what works.So do I put the M31 on every line that rapids around or feeds aroundDoes it cover both errors I getThe error for the Chuck over clamping And the error I get for trying to run when the truck is actually unclampedYeah, they can be used with G65. Here's the chart:https://www.machinetoolhelp.com/Applications/macro/arguments.htmlWish I could kiss you right now. Trying to debate in my mind if I wanna write the logic as a single alternate tool number or bite the bullet and find a way to have multiple (as many as the machine will physically hold) alternates, knowing one spare set of tools will buy us overnight lights out time between night and day shift.Why would you set G54 in X? Usually 0 and then all your tools are set ?When I first learned I did it the same way you do then I learned how tool eyes work.??Many many many machines out there do not have tool setters.Hence the question from someone who's machine presumably does not have oneI touch off all my tools in z from the chuck+.5. I just use a half inch end mill shank to touch off with.I‚Äôm programming full parts from cut off stock, do you also offset your g54 Z-.010 or whatever you‚Äôre comfortable with to make sure your cutting away all the material in case the saw guy is having a bad day?Why not touch everything off on the chuck itselfAfter rough turning, I touch off any other tools with a .25" gauge block, it doesn't save a whole lot of time though. I've been playing around with the idea of using my CNMG holder as a datum of sorts and working out the difference of my other common tools. Then once it is touched off, I could input that height and +input the difference rather than touch off the others.Also, unless I really have to, I keep my CNMG, VNMG, Top Notch and grooving/partoff holders in the turret at all times. Never touch the X values unless I'm changing to a 431 from a 432, then I'll put in a .01" X offset to be on the safe side. I've heard of people using the back plate as a Z reference but, never met anyone who stuck to it.I guess this is just a very long winded way of saying, I wish I had a better answer lol.Use a sticky note instead they are typically .0045I usually turned a known surface with T01 and set base tool offsets on that, and then touched off the rest with paper on the known surfaces.Tool changes could get pretty fast if you never swapped out T01 and tried to places tools so they would have almost the same offsets as T01.The X of your G54 should be 0.0, and each tool set individually on the geometry page by lightly scratching a few tenths off a known diameter. For Z just set zero with tool 1 by cleaning up the face of the part at Z 0.020 and then set all tools on the geometry page by scratching a few tenths off that surface. Smaller chucks you can just spin by hand while you move it closer and closer. Big lathes you can just turn it on a slow RPM and use your eagle eyes. You don't come up with faster ways of doing this, you just get it down to a one minute routine of muscle memory.Some lathes will have toolsetters, and that is faster. Some will not. Get used to touching off parts. Using paper or shim stock is fine if you don't want to scratch the part, just know it's not as accurate as being .0001 closer than your last click and suddenly making a very tiny chip.The most accurate way is cut and measure, even a tool eye unless it is a laser can be off. Tool eye plus cut and measure is great too.Idk but I have a Fanuc USB that came with one of our Doosan and it has all the manuals on it. When I get back to work on Monday I can see if I can upload it somewhere if no one else can help sooner.we got a DN as well (Lynx 2600SY) so that'd be shweet. how old is your machine?Find the books that came with it. Fanuc still ships a cd rom with the controls.Find fanuc program folder and search for *.chm files and copy them to flash drive. You can open them in another pc without any additional software. I extracted manuals from FAGOR CNC this wayAlso you can Google "chm to pdf converter online" to convert to pdf if you wanti'll have a look, thanksThread depth should be subtracted from both sides to get het minor diameter. The 0.625 comes from 5/8To do the proper calculation: H=pitch * (sqrt(3)/2) Minor diameter = major diameter - 2 * 5/8 * HIs 5/8 and 0.625 was supposed to be inches ? I'm working with mm. I used the formula but it was off by like 60 decimals for the threads to be good.Are you using inserts that match the pitch of your thread? Or are you using general inserts that work for a wide range? If the latter, you will need to cut deeper than calculated because those inserts are sharp and need to cut below the true root of the thread where the minor diameter is measured.You will have to calculate the depth based on the "flat" in the root of the thread.I was using an 3x3 insert. The minor diameter was calculated at 25.55mm. I dropped it to 24.90. And they are sharper almost perfect while still maintaining a 30mm on the outer diameter. But the formula was off by 65 decimals. Maybe i need that manual. Or maybe the insert was too small.One pitch is 75% of total depthThis is it. Thanks a lot.I use .866 because it's the sine of the 30 degree angle and it's gets your straight depth. It's out of the machinist handbook. Also the machinist handbook will give you all those dimensions. If you don't have one you can download an old version off the Internet somewhereBeen searching for information for threads all day. It seems i have to dig deeper.Where's my G92 crew?You would need to change the ladderI think on a job interview you wear a suit and tie. Yes on the job they wear khaki's and polo's but that would not be appropriate for the interview. It sounds like you have a good background for the job with the skills you have listed. I think a knowledge of Fanuc controls, parameter structure, setting up of servo motors would be helpful as wellSo before maintenance I have worked predominantly on a couple of OKK 800's (horizontal mill). Now over that last 1.5 years I have gained a ton of experience on three phase motors/servos, drives, power supplies, controls, inputs/outputs. Basically anything between the CNC and the inputs. Use multi meter on daily basis. No challenge with hydraulics. Can read electrical and mechanical prints (need to brush up). Have done everything to replace spindles and ball screws to correcting a grid shift. I dont know if any of this will help, as its just me typing thoughts as they come to me, but i was just hoping someone out there could point me in the right direction.I just took a similar test not long ago and got the job.The stuff I was rusty on or had never seen before was stuff that I rarely ever had to use. Stuff like hardly used diagram symbols, manufacturer specific nomenclature, ANCIENT tech from legacy stuff, that kind of thing. Depending on the manufacturer They might try and base pay on your result.Good mechanics/techs are hard to come by right now for some reason. Don't let them push you around in negotiation if you get that far.The fanuc guys that come out to where I work tend to be wearing polo shirts if not just a logo company shirt. Their pants tended to be some short of khaki colored work pants.Thank you!The job may require some knowledge of PLC interfacing with the Fanuc controls.It couldn't hurt to watch as many youtube videos you can find for robot repair (if you can find them), familiarize yourself with their range of models, Google harmonic drives, and learn some terminology. I've worked with a few techs from Fanuc. Their skill levels...uhhh...vary. I'd say your experience would be more than adequate.Sounds like a cutter comp issue. Check radius in tool table or disable G40Thats the milling fix I don't run latheTried entering the radius in the tool wear and geometry and also added g40 to program. Still getting the error.Both are excellent. I would go fanuc just for the 100% fanuc control, if i was getting 5ax id go brother for the mx series.Just to be clear, the Brother has 5 axis, but are not simultaneous. The Fanuc is capable of full 5.The shop I work for has a couple Robodrills and they‚Äôve been very reliableBrother is one reliable mf, had a tc2 since 2004 running 40 hours per week and had never had single error or fault on anything dispite none existent maintainance.As others have said both are great. We have 10 Brothers now, mostly R450 and R650 pallet changers. For high production they are simply amazing. Spindle only stops for 3-6sec for the pallet change. The previous shop I ran had 25+ Brothers. Some were 15 year old machines that ran 20hrs a day x 6 days a week and rarely needed anything but coolant and grease.Fanuc. bought ours from Methods so fairly local support.We have a Speedio where I work and it is fast but personally I can‚Äôt stand it. I can put an indicator on the spindle and push it with my hand and move it .003. The rigidity is trash and the machine is less than a year old for context. Plus their control is proprietary and very annoying similar to an old Mitsubishi.I gotta ask are robodrills (just cnc mills as far as I can tell?) common in America? The only reason I knew about it was because of their Roboguide cam software for their robotic arms Edit:UK based hereThey are fairly common in production shops.+1 for Fanuc as long as you keep the way covers clear and don't let the chips pile up to the table.The key presses are awkward and unintuitive,Yup it's a Fanuc.I'm working with a 0T still .. isn't the 21T an upgraded version? It's pretty easy, but then again everything is when you've known it for a while . Do you have something like discord or something? Because I can walk with you if you like? If you're in the Netherlands or within reasonable distance i can drive over even..I‚Äôm located in Canada, but do have a discord. I‚Äôll pm you, but time zones might be difficult as I‚Äôm only in the shop evenings and weekends. Thank you - still hoping to find a true 21T userNot sure if it helps, but a quick Google search on how to set the work shift on a Fanuc 21t turns up some helpful sites.Show pictures of the tool geometry offset screen and the workshift screen.Wtf? Was this dude a friend? What a POS‚Ä¶indeed - if you have any ideas, I made a video covering what I'm dealing with here. https://youtu.be/worYXP0848wCan you G50 the origin off the tool? Old machines like that I've always set the program origin directly from the tool, run path, repeat for next tool.21t is not that old. Started in the mid to late 90s.Ok bud, don't panic. I run lathes and I basically only use work shift. PM me, ill walk you though it.I watched the video again when I got home and I am telling you that whatever you did on the video will not work for you, ever. You need to start from the beginning.I can guide you through it. It would be better to do through live video with you being at the machine and going through the steps that I tell you to.tter to do through live video with you being at the machine and going through the steps that I tell you to.sending you a DM, im at the machine now.Not a very good lathe guy. That‚Äôs some odd code though. Programming it through the control somehow?yeah picture 3, 4, 5 show the dialogue for the G1122 cycle for instance and the G1450 denotes the starting point of a contour and G1456 denotes the end of the contour. all the letters behind the G1122 command relate to the parameters that are configured in the dialogueIt's called manual guide, it's fanucs version of conversational programmingDo you have your Z origin set correctly?yeah the z depth is correct to what it's reporting (it says Z-2.3 in the control) so something's fishyi've got something in mind to try, if that doesn't work i'll just contact the supplier of the machine lolHave your purchasing dept order "B-63947EN/01" from Fanuc, and use it like your bible. Parameters, variables, common g/m codes, alarms are all in there. We ordered ours from fanuc Japan because they were half the price of fanuc America, but they took 3 months to get here.One of the most annoying things with Fanuc is that very few things are set in stone, and MTBs can do nearly whatever they want. For example, one builder I work with uses the data table for all of their machine options (no keep relays), and another uses the data table only for the tool table and keep relays for machine options. Everyone is different. The best advice I can give you is to beg borrow or steal the machine manuals for a week and copy them to your laptop. Once you have a list of the keep relays, alarms, and the ladder password you can save yourself hours of frustrated troubleshooting by searching through the ladder. Googling the answer is something that you will have to do every now and again no matter what, though. https://imgur.com/GDttdYe.jpgThanks for your reply. I will definitely get that book that seems like it would be a lifesaver. And yes I understand what you're saying about the variation. I have worked with PLCs a lot like Allen Bradley, Omron, Mistibishi, and Yaskawa. I always thought that FANUC controls were a lot more structured as to how the programs and parameters are defined but it seems like they can be different from machine to machine just like a PLC controlled assembly line machine. I have a lot to learn about CNC machines it seems.Don't know if it pertains to my question or not, but our FANUC are old and new. We have 16i, 18i, 30i, and 0i-md. I think theres probably more I havent seen yet.Sounds like the aicc2 setting have not been configured correctly. We had a similar issue with ours. Our service provider sorted it outOur shop had the exact same issue of it not being configured right and then we spent about a month getting onto the techs to get it figured out. Granted we were impatient with them because this year alone we bought 8 doosans from them with two more on the wayJust put a G04 between the M08 and the next block to preload the coolant. It will take some trial and error. Arc feedrate is probably a parameter. Look in the Fanuc parameter manual. It would probably be a percentage of the program feedrate.G49 isn‚Äôt typically used on the same line as g05.1. - that is cancel tool length. Make sure aicc2 is flashing when running on the bottom of the control.None of my three do this, some parameter isn‚Äôt right. Make sure that there isn‚Äôt adaptive feed turned on.No clue on your blinking preference.Do you have the default coolant or upgraded? I have two machines with high pressure and one without. None take more than half a secondChip conveyor is annoying, this I‚Äôm pretty sure can be changed just never cares enough.Is it possible to code throwbacks in FANUC code? Not like, rolling code lines. But I‚Äôd love to quit editing programs within the body of them.Like‚Ä¶ at the top of the programN4 = T0606And instead of needing To update your lower code for your new setup, it‚Äôs justG0 N4???Why not use a sub?Hey I run C machines at my job! 100's and 200's, they're awesome machines.Fuck, I love this console. Every function available without 1000 sub menus. Lol.Right? One click to boost the bass!Like running the tree command in Linux ü§åI would really like to see the rest of this vehicle.. please help me.Another thread said it's a 90s Cadillac allante.Goddamn, what car is it?FanucarTape reader's in the trunk..Cool, more shit posting.....I miss buttonsI think you may need to hold down two buttons, and simultaneously jog/rapid the machine back in whatever axis is overtraveled. Those two buttons are emergency release/reset and machine ready or something. I can't remember exactly what they are called right now.The 2 buttons on some fanuc lathes was p and cancel...you hold them both down while turning on the power for the control panel....but it might be different for yours and there is another combo that wipes the whole O.S.....so be careful lolHad a guy at work do it....came in the next day to fire it up and on the screen was a blinking cursorP+cancel on start up will allow you to jog back past the over travels. Restart the machine after and home it out. Remember to jog the machine back well inside the work area before homing out. If you try to home from just inside the work area you will rapid past the soft limits and on to the hard limits so you will have to repeat the process.So it's a straight line, got it.If anyone is curiousIt's 0.7mm from a straight line at the furthest pointThis is a legend, so I can't swear to any factual basis, but....I was told of a farm machinery manufacturer that patented a seed distribution system that used air blowing against a 'flat' plate. A competitor specified a plate that had a curvature that was roughly that of Earth's surface to avoid the patent.I wonder if something like that is actually happening here.Had to mill it. Initial idea was G18 G03 but had to cut it and do it with segments of 50mm and G01.Excuse my ignorance, but what unit is the radius in?Erm boss, we're going to to need a bigger rotary table.;-)Uhhhhh,Metrology tools have a rate of error proportional ‚Äòusually‚Äô to Mpe+L/#Also, these tools have an exponential increase in that error rate for partial circular arcs, as the arc degrees approach a range of around 45 degreesThis is something to test with a custom made go-no-go imoMost importantly, clean your monitor.Asshole move to make that a radius and not a parametric functionJust make it straight, there is no way to propperly measure a radius that big on a segment that small. I have quite some experience with CMM's once the segment part of a total radius is less than ~ 10¬∞ the measurement is gonna be unreliable as hell. And I'm guessing you have about 0.001¬∞ of the complete circle...I work with my dad and he f my brains out about it needing to have a radius (at least program it that way)Max delta between curve and straight line is 0.7mmYou said I couldn't get repeatable numbers and I beg to differ. Save for the size of the part being to large for the comparator (missing info on the drawing) or the profile tolerance being too tight you can't allow for small ditches(that the comparator can miss), I can agree with you on the overlay being much more efficientWhen making it with G18 G03 Rxxxxxx 6 digits before coma is too much for it best it can do is XXXXX. XXXI guess you could just make it a straight lineIs this in inches?MmIs your mdi like a blank programs page or two columnsYou likely need to turn on the hydraulics there should be a power on/startup/standby button all the fanuc machines I've used from different builders label it differently.You need to home the axis, Jog mode then zero return.After the above you'll be able to use MDI to change tool on mill just type in T(number) M06; insert, cycle startStart the controlStart any hydraulic unit(s)Go to reference, either automatic or in jog, jognit to the reference points (z-x-y usually in that order)Jog off these points and you should be able to do stuff in either MDI or manual, or load up a program on EDIT or run it with AUTOEdit: what kind of control is it? 0m, 0i, 31i, etc? Or in case of lathe 0t or something...Because on the older milling systems, they need this code in front:G91 G28 Z0T1M6G90So in MDI, G91 G28 Z0RunT1RunM6RunG90RunAlso, keep in check which coordinate system you're in.. G54 is standard...Also, make sure that your jog/rapid feedknob is NOT 0%, and that your spindle speed adjust is at 100%.. those got me the first couple times...Another edit:Mind you that in MDI you use the INPUT and not INSERT button... The latter is for editing inside a program....Another edit:Also, and I forgot this earlier, keep the machine at Z-ref point. This is on my machine the tool change position, but you can verify by checking the diagnostic/parameter list. I'm out camping at the moment, can't tell you which one they are, but you should contact the manufacturer (yam/yang in America has great support, ask for Andy) and get the electric diagrams and technical drawings, operator manual etc... Whatever you can.I run a MV-40 and SV-50 with Fanuc MSC 516 and 518. Put the machine in MDI mode, type your program, press insert. Keep the machine in MDI mode, press cycle start.On an MV-Jr you have to go into zero return, and press the axis jog key for each axis. There will be a light on the button that when it is homed out properly, it will be lit. Be aware, if your axis is close to the home position, you will need to press the jog button that is away from home and hold it, it will go in the opposite direction of home, and then return home, if the button is released in the middle of homing, it will have to be re-homed.Our two Kits have M90 as a warmup program.Some fanuc controls have a cold start as an m code, on my doosan it was like m112 or something.But cold start and warm up are not the same thingDid you release e stop, hit power on again and close and open the door?I know you can run program from flash but I do not do it. Can‚Äôt remember.I would also like to know how, there is only one company I know that does this(Tornos). It is possible. Check out titans Swiss academy. Also would like to know this‚Ä¶You can you a g10 for setting tool offsets. I use it for setting g54. See link https://tormach.com/set-tool-offsets-g10-l1?srsltid=AfmBOoqUMX9560ewq_5enRKMCa8rAJeZBGrPRLqIZf7www6Mn6hY2oknGoing off memory so may be wrong, but I believe you have to set the IO channel to 4 to run programs off the card with M198.Make sure the USB drive is good (ran into that problem before)Open the controller and see if there is essentially a USB extension cable going from a board to the outside of the controller. Sometimes these cables go bad over time (couldn't tell you why). If you have room try to plug the USB right into the board or purchase a new USB extension cable. You can get them on Amazon for a few bucks, just make sure it will do power and data.Depending on how old the controller is, you need to set a particular IO channel to tell the control that you want to use a USB. Doosan/DN has a video on YouTube about setting the IO channel.Make sure your subprograms are in the same folder as your main program. I had to deal with that problem a week ago.I hope this helps!I would not run programs off a USB, they tend to get corrupted and the FANUC will read the gibberish code and crash. Ask me how I know.You have to set the machine I/O to USB. I have a MAPPSIV control so it's probably different than yours so I can't really give you directions on where to do this.We used network to DNC programs for a while, before we figured out how to set up the data server in the machine correctly and just use that now.Just to make sure, you're trying to plug in a USB drive with programs on it? It might need to be formatted with an old format like FAT32.I would recommend just connecting with ethernet.We have it connected to Ethernet as well. Just wanting to test the USB function, our USB is FAT32.The other issue we are having is calling a sub-program from DNC, when the main program is in NC memory. The bible that came with the machine says M198 is the I/O sub program call. But it just comes up with an error.On the machine, check your settings and make sure that the I/O device is set to the USB. This is under Settings and option 64 IIRC. For the USB, make sure the program you are calling with the M198 is named Onnnn and nothing else. For example, if you are calling subroutine 10 using M198 P10, the file on the USB needs to be named O0010. with leading zeros and no file extension.You might have better luck using the high memory area on the machine, if you have the option. You can get to that area by pushing DNC or TAPE and setting the I/O on Settings Option 64. HMA is more reliable than USB in general.I have two possibly silly questions.Have you tried just using M98 instead of the M198?Are you sure the USB is fully engaged? I've had this issue with the Celos control a lot. The pocket where the port is located is too thin to get good contact with the port often. I had to eventually go to super slim USB drives to get around this.I thought m198 was to pull programs from a data server Also if your usb is too fast it might not work. I have "slower" usb that work fine in machines that are formatted the same as my fast ones. Fast one doesn't work on some controllers.You need to make sure your parameters 20-23 are 17My company does customs macros, including Fanuc and Tosnuc (T600m~T999).Drop me a line at planterary-engineering.net if you need help.This is almost definitely a battery-on-board issue. Battery died and all the parameters were lost.That, or it's a cabling or board failure.If turning off and back on again doesn't fix it, and if you aren't technically inclined, call a reputable cnc service company and get on the list... It'll be expensive, but it's the only good option.Does this machine have 4x D LR20 batteries?I can't remember the alarm exactly, but whenever we get an APC alarm it's 8/10 those 4 batteries that are on the outside of the cabinet door.1/10 times it has been someone accidentally pressing the emergency stop on the barfeeder.It does not appear it has batteries on the outside of the door. Only batteries it has are on the drives which they have thrown an APC error before but not on the whole axis setBut why is parameter write enabled?This machine has a program written into it with adjustable parameters that are changed frequently. At least when this machine was rebuilt, that‚Äôs what was told to us by Fanuc & the technician.Look in cabinet for little yellow fanuc battery they use those before the 4d cell setup.That‚Äôs weird I‚Äôve never seen a fanuc run with parameter write enabled.Direct from the Fanuc 0i-F Maintenance manual: Since the absolute-position detector caused a communication error, the correct machine position could not be obtained. The absolute-position detector, cable or SEPARATE DETECTOR INTERFACE UNIT is thought to be defective.My thoughts: Since you are getting this on more than one axis, check the separate detector unit for power. This is assuming that the machine has more than just the motor encoders. It will be in the electrical cabinet, small yellow box with multiple encoder cables plugged into it.There is a key stroke history in all newer Fanuc controls but it only tracks so many then drops them off. If I remember it's only 3 pages of key strokes. In my experience if you don't look at the history right away it will be gone. It depends how the machine builder sets it up but the Geometry offsets may be locked out by the memory input key. That's the way our swiss machines are.Not on any machine I've personally ran. However there should be a way to lock it out. Should be an edit key on your controller that you can take out. I've never actually used these as I dont run production unsure if it locks tool wear offsets as well or just geo.In my experience you buddy made a bad offset and is now lieing about it.To prevent future issues best advice I can give is use your smart phone and take pictures of your geo screen so you always have something to reference. This is honestly a great tip for any kind of work. Easy to delete geo accidently and if you have a picture can save yourself some trouble.Sinha‚Äôs Computer Aided Manufacturing, CNC Lathe, Probing and FMS. Get it on Amazon.You need to turn on exact stop check mode G61.G112/G113 may help you as well.It sounds like something to do with the Fanuc control on the DN not having a good enough look-ahead to parse the small lines of code quickly enough and keep a smooth contour.Look into FANUC‚Äôs Program Transfer Tool software. Cheap, easy to setup, does exactly what you are trying to do. Just drag and drop.If you want free, you‚Äôll need to setup an FTP server and configure the control to log into it to download programs. This could accomplish your stated goals, but setup is considerably more complicated unless you‚Äôre familiar with everything involved in configuring an FTP server.We use DNC4U for our old RS232 machines. It‚Äôs incredibly user friendly and versatile. Never tried ethernet but it does have the capability.Speaking as a nerd...... If you're talking about twisted pair Ethernet, to connect them directly to each other, you'll need what's called a cross over cable (wired TIA-568A on one end, TIA-568B on the other.) As far as I'm concerned, the easiest way to do this is with a cheap Ethernet switch between them, and standard cables.Once you have link lights, look at what else has been mentioned here.It's almost the same, just a little... dumber? It's Mitsubishi behind the control instead of Fanuc, and Meldas is almost the same but the one that got me a couple times was IF [condition] THEN variable = value isn't supported. That may have changed by now, but I wouldn't count on it. Using GOTO for simple conditional variable assignment is cumbersome after you're used to the better way with Fanuc, lol.There is a really interesting thing on Mazak that you might be interested in, which is basically conversational Mazatrol using G codes. Your best resource for that is the manuals that came with it.Best source of information is the manuels if you have them.  You can buy macros ready made from Mazak, they are not that expensive.   Macro programming is pretty much the same as fanuc, so get a copy of the fanuc macro book from Peter Smid    Company I work for bought the macro for 4th axis rotation calculations (640M and matrix control)  It just runs from an manual unit and is easy to use.   I can share an excel sheet that does the 4th rotation calculations if you want it? https://drive.google.com/drive/folders/1ZFnhLnkB_fiLpElnuQyIVDBr6Ne1WjrF?usp=share_linkYou may not have the macro enabled on your control. It is an option. Fanuc can sell it to you. Macro B is $1,700.00 plus installation. Ah‚Ä¶ that didn‚Äôt even occur to me. Thanks.I used to have a cheat sheet to enable macros in Fanuc O machines. I probably still have it somewhere. I'll see if I can find it. In the mean time, check out the macro section of my web app and let me know what you think: https://cncmachinistcalculatorultra.com/customMacroIt's the V0. That's triggering the alarm, you don't have a Y axis on that machine by the looks of it.Makes sense! I'll remove that line tomorrow and test and then have a look at the post if that works.I wrote a quick macro for our Makino when we first got it.. it is only really for 4 axis parts, where you set G54 as the front face, G55 as left, g56 as right.It takes your offsets from G54, then does the correct calculations based off of the position and the stroke of the machine to generate the G55 / G56 offsets.To be honest, it's much better to just set up your cam software to have your parts in a known location in space, and program from Centerline of pallet out. Everything turns out perfect.Or, you can program from centerline out, and then set one or two quick offsets (Y or Z usually) if the part is further down / up in either axis. You just probe the part, offset it the correct amount and you're good to go.its been a while but I've always thought G54.2 is used more for tracking than "finding the other faces of the part".Example: You have a point you want to track on a 4 axis horizontal. X1. Y0. Z5.You rotate 90 degrees on B and if you have G54.2 activated then The machine will know the new value of the point is X5.Y0.Z1.G54.2 doesn't allow for dimensions only offsets. So the machine still wouldn't know the "other" faces.I haven't used either machine enough to have an answer, but I do have a question. Is this not something you would deal with in some CAM software? How much of this is being done using the machine interface?I can't tell you for sure how to do it but we typically use a machine specific gauge to get lined up then just reset the g54 and viola. My question to you once you solve this conundrum is what type of gauge or positioning you use to ensure geometric alignment is inspec while doing so.Ya the rapids are pretty insaneOn 1 to 10 its at the brown undies statusI ran on those so many times. Honestly it is mostly great, though if it runs long enough it tend to have problems with toolchanger. That and lights usually break is only problems I know of.I use a robodrill from time to time. If you are a true rookie keep the rapid turned all the way down till you know things are good. 100% rapid on the one that I run is crazy fast. Learn G and M code. Check out the tech schools in the area. Never stop learning and be safe.Yeah the rapids are pretty intimidating to me. Talk about something could go bad in the blink of an eye.We're doing that at college - I think it might be the same model too. Last Tuesday the instructor deliberately sabotaged the Z- feedrate in the code (the code that he promised us was fine and would work) to show us what can happen when a machine crashesThe 1" aluminum cube looks like it got shot‚ÄúDeliberately‚ÄùI bet everyone jumped pretty goodHoly shit, what excellent timing. My boss wants me to take on a second machine, and this is it. I might learn something from this thread.I‚Äôd say great first machine to learn on. BT30 is pretty weak but as long as you take gentle cuts it‚Äôs great. But ya crazy rapid speeds, just turn the rapid down for a while.Just make sure to always change the batteries yearly.We have three in my shop. When it boils down, it's just a mill. As others have said, the rapid is crazy fast, so keep it low for test runs. Use the dry run speed very low when testing to keep from crashing when approaching the part. Keep an eye on your offsets, and measure twice. But once you prove your program, they are amazing for fast production. Fast and accurate.G10001010100010100101010001010101010101010101110111010000001101110101010101010I used to run one of these for almost 2 years at the medical device company. Those were almost 15yr old machines back then, but I liked running it.I suggest you slow down the speed of G00.Remember to adjust the tool before each automatic machining. Also, before starting automatic machining, run the program in single block mode to ensure the correct tool positioning.Learn about G-codes, M-codes, CAM, and macro programming-related knowledge.I know g code m code and cad/cam macros though are confusing to me.Make sure to watch your CAM programs all the way through as your learning to program. Properly modeled tools and holders in your CAM software simulation can save you so many crashes.Step through programs and use the offset shift to set Z several inches above for first run on anything. I set these up for automotive production facilities and know a decent amount about their capabilities.I need to know tooHere‚Äôs my tip to you as someone who also learned on a robodrill. There‚Äôs an easy mistake to be made that can end with dumping every single tool out of the carousel. This happens when you add a tool holder into the machine but it doesn‚Äôt completely snap in place, if this happens the next tool change will just lead to all of your tools raining down into the machine, its a really easy mistake to make if you‚Äôre unaware, but it‚Äôs also really easy to avoid with a simple trick. When you snap a tool into the carousel give you tool holder a light twist and it‚Äôll orient itself correctly if it wasn‚Äôt already. Also (position depends on the model) there is a correct position for inserting tools where the protective backing has a cut out so inserting tools is easier. Ive seen it be two positions left of the spindle, as well as 3 positions right of the spindle on a model that looks more similar to yours there. That means if i want to change tool number 8, I should call up tool 5 first and that will pit tool 8 in the correct position to make it easiest to remove and replace that tool. I‚Äôve seen some guys brute force it and just snap a tool out when its in the wrong position but then your fighting with the protective cover on the back and its just making things mire difficult and increases the risk that you wont insert your tool holder properly and then dump the carousel.Overall I think they‚Äôre great machines, very fast. But no one taught me about this issue and I learned the hard way on my first week so I hope I can help you avoid making that same mistake.I‚Äôll never forget the sound it made and the looks on all my coworkers faces‚Ä¶ yikesI remember my grandfather sitting me down as a young boy and reading to me from the good book. The mcmaster carr catalog. It truly contained the answers to all life's questions.That was my favorite kids book!I‚Äôd always ask my dad to reread the part about Socket Head Cap Screws, Very corrosion resistant ASTM 316L (ISO A2), 5/16‚Äù - 18 TPI.Such a harrowing tale of internationally recognized austenitic chrome nickel steel alloys pitted against all odds to come together in a pack of 100.Overnighted of course.When he starts school he'll be able to tell the teacher to take and endmill, sit on it and G00 in z while doing a G02Eh. Easier to call a G87 in this case.Oi Model F that sounds like a milling machine manual. If i was a Father and I saw this, I would definitely approve!!! lolI‚Äôd honestly disown my kid if they came home with a turning manual.God, could you image the embarrassment of your own child only wanting 2 axes?I mean, no judgements to people that like XY, but we have 3 dimensions now, kid.At least it's the DVD manual and not the encyclopedia-thick manuals for the 1iC, oiA, wire edm machines.My 0i manual for the lathe is 5 volumes.Break out the ladder diagram for bed time, he will be asleep in notimeOr if you're trying to wake up, "Fanuc CNC Custom Macros" by Peter Smid. That one always gets my blood pumping.Ironic that they're all books except the fanuc manual; that is a dvd.i worked at a shop once where they used me as a helping hand as a rookie, and there were times I didn't have anything else to do so they let me read the manuals on the FANUC-controlled machines. The instructions were indecipherable translations from JapaneseTrust me, I feel you. Take a look at a Mori manual (pre DMG) and you will find a Japanese to German-English nightmare. One word that always gets a laugh out of me is "Forkardt"Good thing it's not an old 6M manual... your kid would only learn Jenglish from that.Fanuc is Fanuc. It all pretty much behaves the same since the 80s.What is your question?I think I got it, seems the first shifter is playing some funny pranks, good thing the parts that are run on the machine only weigh 1300-2000 lbs‚Ä¶ I‚Äôll be discussing with our safety guy at some point in the near futureI've never seen a machine index without user inputDon‚Äôt call up the tool change? Mill is M6 and lathe is a T block. Avoid programming those and you succeeded at not indexingI'm loading a big tool that will interfere with the sheet metal behind the chuck and the z axis castingWhat I'm looking to do is inhibit the tool change while the boring bar is installed. It's easy for an operator to click past a n M00 comment during production.My mx330 allows me to Inhibit tool changes on specific tools, for example if I have a drill that is too big for the magazine, I can inhibit tool change and it will know if there is a tool clamped or not and not allow me to call the next tool unless the spindle is empty.You don‚Äôt want a W in your first G73 line, that‚Äôs your depth of cut and retract amount. You‚Äôre telling it one too many axes and I think W is the culprit - but I could be mistaken and it‚Äôs the U that‚Äôs the culprit! LolEdit - and you want to add a G01 somewhere in that code or it‚Äôs gonna try to rapid through it all. I usually have my first canned line as a rapid so it rapids to each depth faster but the safest is to put a G01 at the first line and let it go a little slower on the in rapids in betweenLine 1 for G71 doc is U, G72 doc is W, G73 is U and W.He said he already faced and turned it down to 40mm so it wouldn't be the worst thing rapiding to x0 z0 and he does have G3 F.2 so it won't rapid through the part. I do put a .1" G1 lead in, personally. But in mazatrol, some operations do full rapid up to the part which gave some concern but hasn't actually ever caused issue.I don't have edgecam but in mastercam you can just select the type of tool nose radius comp you want to use. Normally we just hardcode the TNR into the toolpath on lathes instead of using G41/G42. If you don't use the same tool radius that it's programmed for, the part will come out wrong so you'd have to repost code if you want to use a different tnr. As it is, you've done just that and the radius you've programmed for is 0 radius (aka sharp corner)If you're writing this by hand, you'd just changeN15 G0 X-1.6 Z0.N25 G3 X40. Z-20.8 R20.8G73 would be if your raw material is already close to the right shape to cut down on air cutting. If you're using hex bar, G71 would be better. You said you tried G71 going from back to front with G2, but that cutting direction would be for facing with G72. You got an alarm so did you post that with edgecam or just change it at the machine?I'd do something likeG0 X50. Z25.G0 Z2.G71 U1. R1.G71 P15 Q25 U.4 W.1 F.2N15 G0 X-1.6G1 Z0.G3 X40. Z-20.8 R20.8N25 G1 X50.Do you have all the tool geometry in ? Tool nose radius etc ? Send me a DM I have a pdfSent you a dm. Do you know what the issue is?Any success? I'm trying to use conversational programming on a doosan fanuc I series controller and get the same error. This is for turning an id.Do you have to set a length for your boring bar in the tool data? Seems like there is an error checking element tripping you up.Show us the programNot sure why nobody has set it yet, but why are you doing anything setup related at 100% rapid. You asked for trouble and you got itYou commanded a tool change for a tool that has no known tool length offset and then activated that unknown tool offset with G43 H6.Don't ever activate a tool offset if you are not sure that the tool hasn't been touched off yet. No wonder the machine took a nose down straight towards the table.A G43 code is a Z motion to a non relative position in this case. You are telling your car to back out of your neighbors driveway as fast as it can the same distance you back out of your driveway, without knowing if your neighbors driveway is the same length as yours. In this case you're neighbors driveway is shorter. You need to change tools without a G43 until you set your H of this tool.I'm curious why it would do a rapids move with out being told an axis to move. Unless G43 H6 does strange things without anything after it. I'm new at this to, and want to learn what caused this to happen.Why are you bothering with tool comp calls while your trying to change tools?My guess is that you type in the code, left the line active on G43 H6. It reads that code to activate offset for that and with whatever you have in the offset, it rams right into the table.I never do a G43 after tool change to check a new tool, idk why you did nor do I know if it actualy cause the tool to runs to Z0 without commanding Z0 behind the H, but its a guessAre you sending the tool to a clearance position before making the tool change?Maybe missing g28?100% the value in H6 isn‚Äôt the correct length for that toolAlways handle jog z up several inches before changing tools after touch off with probe. I have bought a probe or two.Am I crazy or should it be something like G43 H6 Z.5 or something?What's the Z.5 do? Give the Z extra clearance?Not sure about your robo mine has a newer controller but normally I'd do that tool chance as M06T06; no other lines of code needed. Should go straight up from wherever it's at without a issue. Also if you are changing out tool holders M606TX; will bring X to the change position on your umbrella.I have seen robot arms setup for milling wood and foam with the spindle mounted on the end of the arm. I think your success in metals will depend on the specifics of the operation- in other words the exact material, type of tool/cutting operation and HP required relative to the rigidity of your specific arm + spindle setup.Also, someone correct me if I am wrong but I don't believe most basic cam packages would output code for this right out of the box. You'd probably be looking at one of the higher end CAM systems and possibly a custom postprocessor.I've seen it done to first mill then polish large lenses for the telescope industry. If I remember correctly it was just rough polish and couldn't achieve the proper finish so they had to finish it another way.The closest thing I've seen to this was essentially a die grinder used for deburring after removing from the machine, kind of like this, but it was one robot holding the part with a second robot doing the deburring work.Used to work at an aerospace firm that uses FANUC arms to grind down ECM flow ditches and do edge deburring with what is essentially a custom dynabride tool and Dremel with deburring brushes. I wouldn't say it was very accurate in terms of positioning but it got the job done by engaging a spring mechanism on the grinding arm to exert pressure. Varied the feed rate of the tool paths to remove more or less material.I can't speak to any tolerances that are achievable. But i had wondered this in the past and in one of my YouTube adventures found this. Hopefully this will at least give you some ideas.https://youtu.be/3o1waj2fxgYYour question made me think of this https://youtu.be/quN37YskoaMAlmost everything about a robotic arm's design is incompatible to rigidity. They're long, thin, noodly appendages with several joints, because people buy them for speed, accuracy, and flexibility.Machines and robotic arms are wonderful compliments to each other -- the size and simple structure reduces vibrations cheaply, while the arm extends the machines capabilities almost infinitely.Trying to replace one with another is only going to be more expensive in the long run. More expensive setups, more frequent and costlier maintenance, more expensive to fix after a mistake, etc.I've seen them used for deburring parts at one of the fanuc facilities.I've seen varying tolerances, some claiming .01mm at best. Still, it is typically in aluminum at best.A robot could probably drill and tap just fine. Perhaps do high-speed roughing too, but then for finishing I'm guessing you would out of luck.No m code, you'll have to use the m code to bring the tool setter down(should be easy), then feed onto it(should be super easy), then a short macro of some sort to alarm out if it doesnt touch(super not easy)The macro part is the Problem..need to check some variables Like toollenght of current Tool, Tool currently in use and some Others and there is no list of which variable is which. Fanuc Manual has 800+ Pages ü´° And could use a Reverse G31(Alarm Out with incoming Signal) for an Alarm Out for NOT touching the Probe (gonna create a workaround for that probably).Are you perhaps using the wrong work offset? We use z axial dials on g58 to set lengths of our tools.What machine and probe are we talking about? What's the max number of tools on the machine(pockets) and the control?Fanuc oi-mf control. Renishaw tool hight probe in a microcut vmcYou could use USB or memory card and call the program directly from the card with M198. I don't bother with RS232 or ethernet.Some machines have separate DNC functions using Tape mode.Can you send programs from machine to computer?YesWhat problems are you having?Program is too big so I want the machine to read it from the computer instead of its memoryI used a ‚Äúshop floor automations‚Äù box to plug a usb in that then that allows u to set baud/etc. then yeahttps://www.youtube.com/watch?v=DOL9cMrD45w shows cimco edit and a usb -> parallel cord. that's a mori control so it's more like a fanuc 18 but I believe pretty similar. I believe you can also stream via the 'tape' mode on the machine and cimco edit will work with it.I absolutely loved the CUT 20P at my last job. We used EspritCAM with it, and it was just the easiest, most convenient thing to run.Latching doors eh...Gives me flashbacks to when I opened the doors to the submerged sinker. EDM oil all over the bosses shoes.I can eat off the floor and the walls in that room.I've run wires for 20 years, had Charmilles, Chmer, Sodick, Mits, Makino and Fanuc.Fanuc is the best, no question. Love those machines.That truly is very attractive, how much did this unit set you back?, i might be in the suprise market for such a wedm.How do you set up a part in one of these? Anyone have a YouTube link?I didn‚Äôt know they make EDM. I love our Robodrill. We should get one of these.Because it is an old windows PC.Not familiar with DN/Doosan‚Äôs but they are likely overlaying the FANUC UI through FOCAS which is your comm link. Your FANUC is running like normal, it the PC struggling, which could be a variety of issues in it of itself.We have an early Pro6 Makino that is hellishly slow to do anything at times, but it runs HSM code no problem.I would recommend contacting your local DN Solutions (formerly Doosan) dealer/service provider and ask them about a software update.Ok. This is sometimes said as a joke but we occasionally have to do this with the HAAS machines :Turn it off, and back on again?It's been off and on more than I can remember lolHome and tool change position might be two separate coordinates? On my vmc1000 the z of home and the z of tool change are about 40-50mm apart... Also, physically make sure the sensors are doing what they're supposed to. I had an old YAM that error'd out on a spindle position sensor (an old Omron thing that was looking for a koblet on a giant gear on the spindle). Took me 2 days because the diag only SOMETIMES made it show a 0 instead of 1...You are correct the spindle drops when tool arm comes around to the toolAll sensors seem to be working properly between the 0 and 1 and the lights that come on when in the right positionWith fanuc, double check you arent stuck in a program/ reset the program. It could be a weird accident in the gcode. Then Switch to manual, jog your Z down a couple inches, auto home all your axis. Then MDI a tool change. I would do a magazine tool call first though. So something like: T6; T2 M6;I just looked at the second pic...I vaguely remember something like that happening on a fanuc vmc I used to run. We had to jump up between the spindle and magazine, and move the tool changer arm to align it. But it was years ago now and I dont recall exactly what we did.The magazine moves to where I command it but the arm isnt rotating to the tool change positionThis control has a quirk that thankfully you don't have to deel with often. Positions of tools are wholly in memory and if for some reason yo do a stop mid toolchange cycle It gets stuck at that point. Not saying that this is the cause.First thing to try is:With machine on.Manully remove tool in spindle for safety.Move tool arm rotation to home position manually. there is a nut on motor shaft for this.Disconnect solenoid coils from the correct solenoid valves. and move tool arm to home position and Atc toggel to face correct way to collect tool from magazine. To do this press button on valve with pin. There are 2 valve blocks and 4 Coils to deal with. Dont forget where they go!You should have 3 indicator lights on probably in area between Atc mag and spindle. Mine has a plexiglass window.Switch off, Have a Smoke to bring down the level of anger...Switch on and home axis. replace coils.Give it a try.....You may have to clear tool asignments and pocket parameters So there is no tool associated with any pocket. So long ago I can't quite remember how to do this. If you stuck with that PM me and i will try to find the sequence.good luck.Let us know this progresses. CheersIt's crazy I came to redit with this problem and now it's fixed. I appreciate all the advice and knowledge. I hope all of your parts are exactly on size forever lolI've been poking at it all morning feel free to ask any questions my brain is scrambledThere should be (should be is a key word since I don‚Äôt know about this machine) some type of Allen wrench or ratchet that can manually turn a screw or some at the top of the tool changer hand. Should be above it so you can turn it till a green light pops up maybe or you shows it‚Äôs located at the right spot. I had to do this on some other machines so it might work on this oneNext time when you have the alarm; check which A bit signal is ‚Äú1‚Äù in the PMC Status menu. Then check in the PMC Ladder what causes this A bit to be active. Most of the time these alarms can be traced back this way to an X bit (physical input of the PMC) or an F bit (virtual input from the NC)There should be a series of M codes to step by step the tool change. I don't know them all off the top of my head and I'm not back in the shop til Monday morning. They should be in the manual somewhere though.I hate it when this happens, usually it works fine when you just command T0 in MDI and restart program but one in a 100 require removing the solenoids and manually triggering the outputs of your apc revolving and pocket up/down and remove some lost swarf or something. Once i had to go Indiana Jones on the I/O listing to reset some bullshit 100k toolchange counter. Have fun and good luck bro ‚úåüèªMost machines have a switch to know there is a tool pot in the ATC position. Find the X bits for the tool pot detected signal. (Find all the signals in relationship with the ATC) Magazine is is rotating but won‚Äôt move to the next step (atc arm movement) if it doesn‚Äôt see the switch.CNC machines from the mid 2000s, depending on factory options, are likely to have ~1mb to 2mb of space. Your options are probably:Purchase a memory upgrade from the manufacturer. Likely very expensive; probably on the order of thousands of dollars per megabyte."Stream" the program over an RS-232 connection. Likely cheaper, but requires a finicky configuration and the process can vary wildly between manufacturers.Break the program down into multiple smaller programs; really only viable for 1-offs -- molds, prototyping, etcThere are aftermarket memory upgrades available but how well they work, how easy they are to get up-and-running, how cheap they are... Your mileage may vary significantly.That‚Äôs..... exactly what I thought. Why do these companies cheap out on shit like this? Like how can someone sell a $100,000-$200,000 machine and not spend the extra $300.00 (speculation) on quadrupling the file size. Rs32 is most likely in the semi near future, but I was hoping for a cheap, ‚Äújust add a hard drive‚Äù or something answer. Anyways, thanks for the response!Storage options are available, depending on control series. Check with your relevant machine tool builder or dealer about DNC from memory card, ethernet, or RS-232, data server options, or part program storage increases.For the latest controls, I recommend the data server option, as well as the data server explorer connection function. This would allow you to browse the data server's storage (newer controls are usually 2+GB) like a network folder, and supports Microsoft's directory creation/management via Windows Explorer.I second this. Get the data server, I believe it is the same price regardless of size and should be about $4,500. If your control is too old then you may be stuck to 32mb or 64mb and that will actually cost you more to upgrade than a data server.Check out www.calmotion.com - they might be able to help. It's an add on cnc to usb storage via rs-232 serial connection. Good luck.Awesome, thank you. Checking it out now.Generally, CNC are designed to put your programs on the memory card, even for first run. Only thing that would be in CNC memory is macro programs. Generally a modern control has a meg or two, and a memory card that's 1GB+.Any DNC/RS232 drip feed will likely not be processed by the control faster than the memory card, so that won't change anything there.I guess the better question here is, why do you need to watch the adaptive toolpath code? You can set up an option stop before next operation while testing the program.Buy a memory card and run your programs off of it with M198.Page 936, section 4.4Or you can pay out the nose for the data server.My experience with running off a card is it is just far to slow, first runs always involve a lot of editing at the control and if I remember Correctly you can‚Äôt do that from the card. After proven it is an option though. Thanks for the reply!As a FANUC technician, I can also confirm that FANUC memory upgrades can be quite expensive, likely in the 1,000 to $5,000 range (they don't like to tell us field engineers those types of things,) A lot of my customers use DNC through rs-232 and have been since the machine was installed. Good luck!I'm not familiar with cnc or digital machine controls but that usually means the file or folder name is longer than can be displayed. I just recalled MS-DOS does something like that for long file names.Which is funny because there is plenty of room to display more characters. But industrial software is consistently ass that hasn't made any front end progress since the late 90s.This is it, you can see that they line up at the last possible characterThe symbol is called the tilde on a standard qwerty keyboard. It means "approximately" or "around". In this context, it means that the file name is longer than the operating system can display so it's truncated and replaced with the tilde.File name is too long. Depending on your control version you won't be able to load it unless you shorten it up.Just like everyone else has said, your file name is too long. That‚Äôs all! Usually won‚Äôt let you load it when it‚Äôs like that. Needs to be short enough that you can see .nc at the endThank you everyone for the information. Took me forever yesterday through trial and error to get a program in the control, and I'm glad I have some clarification.Not sure if hidden files or temporary files created when you open some program, it is where the data goes before you hit save, usually deleted when you close the program but if the computer crash, it will just stay thereRFM babyMy lathe is a 0T control. I know old as shit.I just have to manually type the offset values into the offset number I want.I use a double sided boring bar in tool 3. So I touch off the boring side and manually type it in T13. Then touch off the turning side and leave it as T03On my doosan lathe there's a button combination:Feed hold + ignore error (i think it's called the blue one at any rate) + spndle stop.After pressing those you can skip around in the offset tableFanuc controller?Wait. Haas guy here. Wtf is T0120?T0120 = Turret position 01 + Offset number 20This is a thing on haas as well. Most commonly for sub spindle lathes to define the sub facing tools. I also use the additional offsets for the boring bar holders that have two pockets in the same turret position just out in x.I had similar issues but the easy fix was to go to parameter 5005 and change the QNI to 0.this gives you full access to set any offset using the Q-setter regardless of turret positionso you can have a tool in turret position 01 and set it to offset 20 using the q-setterI'll be giving this a go in the morning. Thank you!We have a laser tool setter on our YCMs. We just type in the tool number into the macro we use (g100 tN). We go up to 400. Fanuc control as well. In theory, all you'd need to do is just change the tool number in the code, buuuut the offset should be the other offset (t01100)You take offset t0120Add offset values to it. When you run program or simulation you use the t120 in first placement g code.G0 x500 z50 t120.And only reason to change those off set values are either your taking chip for measure. Or radius of insert changes.Not exactly what you're asking for, but I think there's some 4-digit g-codes to define the tool data in the program.You don't. The built in setup only does 1-12, or 1-24 if you have half stations.You would just manually type in the offset for any other tool positions. There are other ways to do it but they require a bit of macro work.I've been wondering about how to do that as well. I made myself a macro program for that yesterday where I put in what tool to copy FROM and to copy TO. Hit start after that and Z,X,Y and R values are copied over. If you want I can perhaps help you dabble into that sort of programming.What I need help for is when I have a double boring bar holder, (double barrel shotgun type) and want to probe the tools, I need to move the Y-axis to make the tools hit the q setter, but it will not allow Y axis to be out of reference. What to do?CheersIm pretty sure fanuc wants this red angle. Fanuc be weird like that. If you use manual guide i think it uses these angles to calculate toolpaths.i use manual guide i. as far as i can tell it doesn't really make a difference for the toolpath as i had it on 142 before and i have now set it to 93, which doesn't seem to have affected the tool path; that said i'm not doing any real profiling so it might be apparent because of itupdate: it's indeed supposed to be 142 deghttps://www.cnczone.com/forums/attachments/2/0/9/2/4/3/174549.attachCTR+F "Relative Position" in that PDF .Page 261 maybe. Give er a read though.Seems to have been fixed. Changed bit 3104.3 from 1 to 0have you tried turning it off and back on again? i‚Äôm not trying to bust your balls but I run a Fanuc series 160-m and more times then not i‚Äôll just shut the whole machine off and give it 5 minutes before I cut it back on then it‚Äôs fineThis, we had a serial issue that didn't clear after a back panel shutdown the other day. We called the supplier that had us open the back and told us not to power it on until the led inside went off, until then there was charge. Was always told 30 secs is enough, took over a minute and machine came back fine, so just another "not all fanuc are alike".We had a battery issue so we had to get new batteries ordered so when we get those put in, we will def tried this method. I know it‚Äôs the easiest method but myself and the tech we have were scouring forums because the manual we had literally doesn‚Äôt help to fix this and I already know you‚Äôre not supposed to turn a machine down that‚Äôs drives have an external battery for so you don‚Äôt lose your programmingBad board maybe?Error appeared after APC battery error came up. Battery has been fixed and codes won‚Äôt clearJust hit ‚Äúreset‚Äù. Reset fixes all.Have tried that. Won‚Äôt clear at allI'm only familiar with the robots from fanuc, so sorry if i am wrong but by your description it sounds similiar to a Battery Zero Alarm (BZAL-Alarm). Is there a option that is a bit "hidden" like a RES_PCA on the robots?When we refer to our technical manual, you are correct with the battery issue, which raises an ‚ÄúAPC‚Äù alarm that isn‚Äôt show here. But it was only showing on A axis. These codes followed up an attempt to reset the system without doing a full shutdown and losing our references.I had a similar alarm and it required a reference return to zero the axis. Basically changed the axis feed back from the scale to the motor encoder. Jogged to the machine zero point. Switch back to scale mode and re reference. Cycle power afterhttps://pdfhost.io/edit?doc=09626557-4b88-4883-ac35-72479cf133a2taken from the f35i maint manual.sv0364Action 2: Alarms that may be issued for noise If an alarm is issued intermittently or after emergency stop cancellation, noise is probably the cause. So, provide noise protection. If the same alarm is still issued after noise protection is provided, replace the detector.sv0368Action 3: Alarm condition detected by the separate detector If the separate detector detects an alarm condition, contact the manufacturer of the detector for information on troubleshooting.encoders are probably fucked.Power down the panel: leave off for like 15-20 minutes until every shuts down then re start itNot 100% sure if this is the case as l'm only well versed in Haas, but fanuc is fairly similar. You may need to remove the spaces from your GOTO commands. GOTO110 instead of GOTO 110.This^ had the same issue few years agoI have since added the brackets [#6711 LT 38] [#6711 GE 38]. Sorry guys didnt realize this was a older pictureI think it may have to do with the fact that i am trying to use system variables. Thoughts?I think you have the wrong variable for that controller. Also, there is another problem with using the part counter in system variables. When and how does it get reset to zero? If nothing is forcing the variable to reset then on part 38 it‚Äôll stop, then on the next part it‚Äôll increment to 39 and stop again asking for the drill to be changed. Personally for something like this if I can‚Äôt use a tool life management system in the machine, then I‚Äôll set up my own counter that resets itself. One that I did recently for a break detection cycle looked something like this:<#598=#598+1 (Break Detection Counter) <#599=20 (Break Detection Frequency)G04 P0.1 (Blocks Lookahead)IF[#598LE#599]GOTO1 (Machining starts on N1)<#598=1 (Force Counter Reset)Yes I know most machines can block lookahead with a G or M code, but this machine doesn‚Äôt as far as I‚Äôm aware so I use a short dwell to stop it. For your application you could put this at the start of the program and have the M00‚Äôs directly after the counter is reset and have the GOTO skip over the M00‚Äôs. If you did that I‚Äôd change the counter reset from 1 to 0.Edit:Added less than symbols before the variables so Reddit wouldn‚Äôt make them a larger fontThat alarm means #6711 is not a valid variable. Where did you find the number?The manual for our 31i says #3901 is total number of parts, and #3902 is the required parts.perhaps put a . behind the 38.Here is what i made boys. No there is no tool life managment. This is my attempt at making artificial TLM.GOTO1000;N1000;101=#101+1;IF[#101LT38.]GOTO1010;IF[#101GE38.]GOTO1011;; N1010;G28Y0;M30;; N1011;M0 (REPLACE 3.8MM DRILL);M0 (DID YOU REPLACE DRILL);M0;101=0;G28YO;M30;;102=#102+1;IF[#102LT13.]GOTO1012;IF[#102GE13.]GOTO1013;;N1012;G28Y0;M30;;(BURKE 3/7/23);;N1013;M0 (REPLACE TAP);M0 (DID YOU REPLACE TAP);M0;102=0;G28YO;M30;;103=#103+1;IF[#101LT25]GOTO1014;IF[#101GE25]GOTO1015;N1014;G28Y0;M30;;N1015;M0 (COUNTER SINK);M0 (DID YOU REPLACE C/S);M0;103=0;G28YO;M30;I‚Äôve always been told to stay away from the 100 variables. Only use 500-999. The machine may use the other variables in the background.6711 is a parameter, not a macro variable. Try reading #3901 instead. That‚Äôs the number of parts made.You can also read the parameter 6711 into a macro variable using G10.Did you check if it was plugged in? Then reboot.Well the relative works like manual machines DRO. Basically no need to worry about it, you can use it to check things manually, it doesn't affect anything done by a program.This is correct. Absolute is referring to position related work coords.That's what I thought, although there's one thing that I don't understand - the absolute value was just 0.05mm shorter than the relative value even though G59 was set around 20.3mm higher than the table, is the machines Z0 somewhere else?Just rapid between these positions each time you set up a workpiece to remind yourself where they areThis is false. It‚Äôs relative to wherever you set origin on the relative offset. Does not matter what absolute work offset is active.You have to call up the tool if you‚Äôre manually set tools. Otherwise it should set up automatically on the geometry page when you bring the arm down.Doosan should have the tool setting program so you just hit the green button and follow the screen. It calls up M43 H#Are you on a lathe or mill?millWe used MasterCam but espirit is supposed to be great for multiaxis wireSeems to be Esprit or Mastercam in my experience too.And it‚Äôs like a Ford vs. Chevy thing. You get people that like both and have strong opinions either one will get you where you‚Äôre going.What about the on board software?15 years back, I worked for Methods as a Fanuc WEDM apps engineer. Esprit was the company's tool of choice then. I never really cared for it, and could make parts way faster in Mastercam. Wire EDM programming is fairly basic compared to mills, especially if you're just doing basic tapers for die work.I‚Äôve only ever used Esprit for wire EDM so that‚Äôs what I‚Äôm used to. It‚Äôs pretty straightforward for programming taper cuts.I‚Äôve used Mastercam and Esprit. Esprit wins hands down. The UI is well laid out a very simple to use.Unrelated question - anyone aware of any good edm content/basics available online? Keen to learn moreI'd also like to get some additional info about useful online resources regarding wEDM. You should definitely consider posting a new thread on the sub.Programmed for wire burners at my last job using Esprit, definitely wasn‚Äôt doing anything crazy, but it worked fine for stamping die components.Esprit is good. Using Pepscam now. Large taper stuff might require a different wire though. Watch that tension on the finish passes. Too much tension might run really slow. Make sure you have high taper nozzles on too! Good luck.Hi ! How are you gettin on with the Fanuc ... we bought a Fanuc C400iC Nov last year and am now looking at Esprit Edge or Camtek Peps ( opticam) ..... Did you go of Esprit in the end and if so is all the tech and offsets supplied in the post and placed in the header of the program ?Cheers KevNo, but can I ask you what the main purpose of these Robodrills are for (obviously drilling) but why do shops buy them (when they have other CNCs)?Task failed successfully, that's kind of a dope font.We have a takisawa lathe with turn-iI know literally nothing about that, but I've had this happen when doing right angle head work, and its usually because I screw up the mental gymnastics of the G18/19 plane change. I would think if this an onboard macro, it would already be proved out to work. I wouldn't think you'd have to go through and change all of the G02 to G03's but you never know. What variables do you have to work with?Well it zigged when it should have zagged. G2/G3 are reversed. Is the engraving cycle an on-board macro?Haha dam zigged yes on-board macro thinking it's in the parameters settingsI just had the same problem, you can change Parameter 27000 bit0(first from the right) from 0 to 1.Hey thank you very much solved it !!Looks like G2s and G3s are flipped. You didn't happen to run this with any sort of axis mirroring enabled did you?The shop I‚Äôm in is to small for a tending bot but the bigger shops I‚Äôve been in all use FanucDepends some on the application. If you don‚Äôt go collaborative then probably FANUC. If you want it to be collaborative the options are more limited. UR has a good reputation but the robots themselves are not as durable as FANUC and generally the range of available robot sizes doesn‚Äôt go as big. It is nice not to have a cage around everything.Sorry, should have specified this is primarily for 3 and 4 axis milling‚Ä¶Biggest question/unknown I have is about ease of programming. I am curious which robot manufacturers have kept up with the times and offer modern programming interfaces versus dated/legacy interfaces. I guess I should probably get demos from all the major companies?Or maybe there are other vendors for programming robots that is independent from robot OEMs?My shop is running fanuc.I‚Äôve only used Fanuc. Find out who can support you with service and training. If you buy something and never know how to use it, it‚Äôs not going to work.Shibaura, formerly Toshiba. Have many great robots with capabilities to meet all your needs.yaskawa, abb, fanuc, kuka the list goes on and on.Our shops use fanuc and straubli robots. We have a few pic and place integrated loaders and they suck for the most part. Have a couple Toshibas and they are a nightmare to fix.In my opinion, it‚Äôs most likely a timer set for 60 second, that starts after an M-code command was issued to index the turret and the output for unlock turret was set but the input from sensor was not activated.If the turret locks/unlocks with hydraulic, I‚Äôd start there.‚Å†Check if PMC output for solenoid is 1‚Å†Check if solenoid on the valve gets power‚Å†Check if valve moves when solenoid gets power (should hear a faint clicking sound)‚Å†IF it does not move, Put machine in JOG, remove solenoid caps from valve and manually move the valve to see if turret locks/unlocks. Easiest way to confirm this is by looking in the PMC if it gets input from sensor for lock/unlock.‚Å†IF it does move, you may have a problem with the hydraulic pressure or the valve does not open completely due to contaminated oil. It could also be that it unlocks physically, but the sensor to confirm unlock is busted or a wire is bad.There is some steps. Without knowing the machine, electrical & hydraulic schematics and being able to look at the PMC program it‚Äôs hard to know exactlyHave you tried turning it off and back on againI did turn on and off but now that you say that I realize I didn‚Äôt even check the alarm light for blinker fluid ü§¶‚Äç‚ôÇÔ∏èIt‚Äôs actually most likely has to do with your live tool orientation prox if applicable. Check the rung in the ladder. This is common on a lot of older Korean machines. Take the top sheet metal off the turret cover (to the right behind it) switch is mounted lower left in opening. It is either on the fence, or has a bad cable or switch. Verify in rung but it needs that before turret index for verification of safe movement on key ways. Comment #1 isn‚Äôt wrong about troubleshooting further. But I‚Äôve seen this issue a lot. It‚Äôs almost always the orientation Input for live tool.This was the issue with my hwacheon 230She's fucked.Is the turret unclamping/ clamping at least?I install these in the UK. Go to offset page and across to operator panel and it should have an option for turret test. Turn this on and use jog and MDI to clamp and unclamp the turret. If it doesn't clamp or unclamp them it's a hydraulics issue.Good to know, thank you. I am pretty sure it is the solenoid as it will index properly if I go ahead and push the little pin thing in the solenoid myself but otherwise doesn‚Äôt even make a sound and will just be stuck all daySolenoid is more than likely stuck, causing the time out issue...Try and trip the Solenoid.What do you mean by trip the solenoid? I am fairly certain the solenoid is the problem, I pushed the pin in it to kind of manually trigger/actuate it and when I do so it unlocks and indexes properly turning off the alarm in doing so. I can leave it alarming ‚Äútrying‚Äù to index all day though and nothing will happen unless I go in there and trigger the thing myself. We don‚Äôt use the tailstock in this machine so I‚Äôm thinking may just swap them out for the time being so the machine isn‚Äôt down til the actual tech can come look at it.Somebody crashed it.That behavior wouldn't be controlled by spindle parameters. It isn't set by Fanuc, but by the machine tool builder.Depending on the MTB, it may be hard coded in the ladder or could be a data parameter. No way to tell without tearing through the control for a while.Ask your machine rep for an extra "key" to stick in the "lock" and do anything you want with the door open. It's usually a two prong fork looking thing.Why do you need the spindle on to touch off tools? Just a questionSome people make endmills, I break endmills.God I miss building shit like this.Beautiful.Awesome. What brand endmills are these?All you guys are so lucky with your fancy new toys. Here I am fighting with a 30 year old Fryer all day.FANUC =GLADOS. Let the testing begin..Nice! Do you find it reasonable to program for other parts?Should cross post to /r engineeringpornThat robot doesn't look like it offers any cycle time improvements over a human operator. Is it not possible to turn up the feed rates?This is dope! Could you maybe post more about the process of making endmills? I‚Äôve always been amazed at these tools I use everyday, but have no idea where they come from.We have a few of these in the shop I work it. They are so bad ass. They are good enough that we just bought a couple Mills that use a similar robot.As a layman that robot looks really overkill for the application. Is it bought with the intent to be reprogrammed later to do other tasks? Or are robots just really huge?They are "huge" because they have to house all the motors and gearing and electronics to maintain the precision required in their application. This particular model(LR Mate 200iD/7L) has a reach of 911mm and a payload capacity of 7kg. This was likely the ideal configuration for the application, and will likely only be involved with this particular machine. It will have the ability to be reprogrammed to do different parts likely, as you would just teach the robot where it's pick points are, but it will stay integrated to this grinder.If you look near the end of the video you'll see that the entire 'room' the robot is in has racking w/holes to put more stock/finished product in. The robot has to be large to reach inside the grinder, and then also reach the entire extent of the racking that surrounds it.If it was plausible to do the same job with a smaller/cheaper robot they probably would have done so, but the tradeoff is a much smaller working area and payload capacity.I take this as a sign that's it possible robot taking over machinist job soon.Not per se. This robot would be replacing an operator type position. They load and unload machines, monitor running, etc. Highly repetitive, high running, boring jobs are ideal for robots; less ideal for humans. If you want objects moved from one position to another with a high degree of repeat-ability, robots beat humans hands down. Good machinists would not be replaced by this, especially for low running/piecemeal jobs. (i was just trained last week on programming fanuc robots)There goes your overtime.Get a helper press tool release and snack tool with dead blow not hard just a good bump. How is your drawbar setup csn you see the piston firing. Do you have enough air pressures?The piston is internal so I can't see it firing, I can hear the air pressure and it has enough to release, I don't hear the movement of the piston as I normally would so I don't think that is movingDon't worry it's not a big deal. It will only cost 15k for Fanuc to come in and replace the controller.Just kidding.It looks like a power supply issue or one of your legs is low/high voltage.Man that would be insane. Controller is barely even two years oldThe control itself is not probably at fault, it's just detecting an issue with a power infeed module, a servo amplifier or spindle amplifier. I'd start by opening the cabinet and looking for lit alarm LEDs on the drive modules and the accompanying error codes on the little 7 segment displays. I'd also look for dark modules (with no indicator lights lit at all), which would likely indicate a missing auxiliary power supply to the module.I had that exact same alarm when some abraded cables finally shorted out.UPDATE: GOT BACK TO PROGRAM MENU AND ITS READING SV038 (A) SERIAL DATA ERRORSV0380 is a pulse coder alarm (scale) Check diag 206 and 206That means the encoder on one of your servo motors isn‚Äôt getting a signal, this can be caused by a damaged cable, a bad encoder, even a bad servo motor. But if you aren‚Äôt getting any other notable alarms and everything is still plugged in it‚Äôs probably the encoder cableOriginal memory was 20m, now it has 480m. So 24 times more memory than originally. Just ordered same SRAM chips from China that were originally installed on the machine and enabled the correct parameters using memex instructions. Cost about 20‚Ç¨, memex price for the kit that you install yourself would be 700‚Ç¨.. I also will do the same for my VMC once I get it running again...Could you point me towards the chips you bought? did they snap in or did you have to solder? I have a 10T on my nakamura slant jr and the memory is tiny. Desperately need to do an upgrade but like you, not willing to shell out the coin for the memex parts.Did you have to reload parameters afterwards?Anyone got advice for programming fanuc 6t controll?That jog joystick is sweetI love new technology but for some reason I have always preferred the older style analog buttons/knobs like the ones in the picture.We have a 1986 Daewoo Puma lathe at work that I never say no when I am asked to run it for a job or two when needed.Got bars on the window, must be a bad neighborhood.Update: machine now under power! Now time to mess with it!We've got a seiki 4ne that I think has the same controller. Uses tape right?Is this one equipped with a 5c/2j snout or does it have a large chuck?Looks like a Slant1. I've had the same machine for 10 years, still holds +/-.0002 all day long. Great solid machine. I can send you some sample programs if that helps.Ran a Mori Seiki when I first started CNC‚Äôs back in 83. It had the 6TB controller on it. It would blow my mind to get used to X orientation backwards. We had an SL-8 that was reverse that we rotated on and off of. Sure was easy to make mistakes on offsets. I‚Äôm having that nostalgic feeling. Oh and I really miss going behind and loading the paper tapes.If you run Fanucs, they have a great app for alarm codes and troubleshooting.I just looked it up on there, and it says this is a CPU Interrupt alarm. It says most likely you have a bad main PCB in the control.That said, if you're getting this when sending a program via RS232, make sure no characters are in the file outside of the %.Otherwise, likely to be that PCB, which means you're possibly replacing the control.I think that the lower options up to 160m might not even require any additional memory. Since 2 of the 32kb SRAM modules are already present.The 10M-A, 10M-B and 10M-D (there is no 10M-C because the D stands for Digital) are all totally different controls. You could say which control you have.The 10M-D is a great, powerful control. The others not so much.I have upgraded the memory to 256k on a 10M-D. But I used Tulip parts.If you figure it out post what you find.It's the version with "digital servo" or AD (A16B-1010-0190)but the max memory for this is 192k, not 256k.To be 256k you need 2 more memory modules than this has room for.I see this as a great control either way as I can drip feed as long programs as I want. Most of my programs won't fit in 192k or 256k either anyway but some will And I'll be able to use sub programs and macros better.BTW, the memory upgrade parts are not thousands. They're like $500.There's no secret parameters. You input the memory size in hex when you initialize the control.If you've never done this hire a tech because it's not as straightforward as it sounds.I have done it. I have usually put nothing in the hex options prompt and read the parameters in, the 9100 parameters will be there just as well.Memex said 700 Freedom Pesos. That'll be like 1K‚Ç¨ with shipping and VAT to Finland.The Memex price for my controls was 700 Freedom Pesos and I would have to pay local VAT on top of it making it over 900‚Ç¨. That for my 2 machines would be 1800-1900‚Ç¨. I ordered the chips from ebay and I will try it on my own.Hey I saw that a few hours ago! Very impressive!We use a lot of smaller Fanuc Robots at the company I work at. I wish we used the larger ones more often!The one in Detroit has a Corvette that it liftsThey had a bright yellow corvette last one. Super cool robotsNext generation of Repo-MenThe guys at Lizard Lick Towing would die for this setupIn the row of buttons for the display(Prog, Pos, Offset, etc.) there should be a button labeled "Cust 1", if you hit it it might take you into a screen that has G-code and M-code soft-keys that will show you the whole list. This is an optional feature on Doosan/Daeewoos though so you might not have it.What does your program look like?If your finish tool is overcutting at the end of the path it usually means G42 cutter comp was turned on and your toolpath ended with a Z move. Always end your programmed path with an X move larger than the final final diameter size.Roughing block:Finishing block:Thanks for the tip! So it sounds like I need to add a line after my N200 to just move to X1398. or something like that? Then move the N200 to that line.Does the same apply to my OD should my final line of canned cycle be a negative X move?Your cutter comp done did it.I literally just solved this a few weeks ago.You're going to need a 256mb card. Anything bigger, no matter how you format it, it won't like it. Most likely won't like the USB. There's something about the type of micro flash as well, the slowest kind are the best.Obviously YMMV, if I get the chance tomorrow I'll get a picture of the card for you.There are alternatives as well, I/0 #9 is ethernet (CD38 or 39?). You can usually find the port in the back, always keep the power off when you're in the cabinet. And you can use a focas tool (focas is a fanuc thing.) Do you have predator? Are you doing remote? Get the manual out.I forgot I posted here.I actually had to set up a partition within the memory card limiting it to 4gb so I could be formatted as FAT instead of the FAT32 that is standard. What any of it means I have no clue but it worked for me.What type of machine? X and Z affecting part size - is this a lathe?Seems you could just adjust the work offset you are using.It's a vertical lathe.When sizes are removed from the ext work shift when setting with g54 the sizes are off. Same when using the tool setter the values are ridiculous.Yea I run work shift 0 and use grid shift to centre my turret when I re-align it. On my 31 tooI'll have a look at that thanks.Hit me up if you have questionsAbnormal voltage on the mains or on the DC bus?Main controls threw the error ‚Äúabnormal power supply‚ÄùIt‚Äôs a little thing, but I‚Äôve lost time on it in the past: fanuc‚Äôs breakers flip green when they trip. Make sure all your breakers are red.Check all the fuses in the cabinet. And your incoming voltage.BE CAREFUL. Thats 480. DO NOT touch any capacitors!Its Sunday, go homeI need some help resetting an alarm code, 9031 sspa: 31. Got a bit too ambitious and bogged down the spindle drilling in stainless. I am used to manual machines where the alarm is when all hell breaks loose. I just do little maintenance projects and repairs, using this fancy machine in manual mode using the hand wheels since they hauled my beloved manual lathe. I need to get back to making chips, how do I reset this beast? Any help appreciated. I suspect cycling the power will do it but trying to learn something.Cycle power to clear the alarm.Is there a tiny little button on the back of the panel you can only push with a paper clip or something of the sort.Pretty sure you tripped a breaker. Open the panel and be sure nothing is tripped..05mm is nothing. You should always drop your wear offset some after you touch it off anyway.And you will have to ask Mori on how to calibrate the probe because every machine tool builder does it their own way even when the control is Fanuc.It‚Äôs a lot more involved that simply changing a parameter.I figured out how to do it, and the machine is now accurate to 1 micron consistently (only on aluminum and with one type of feedrate and finishing doc). Its the parameter range 743-747. Apperently i didnt get to the parameters, i got to the diagnostics.The Mori guys wants to send up a service tech which would cost more than the machine, so i did it myself to the best of my ability and i guess it worked out ok. The wear offsets are black magic to me, i have no idea how to use them so i have two turning tools, one for roughing and one for finishing. I have been able to make some amazing parts with this machine and its super accurate, so i am glad i did this.Yeah, I'd contact the Mori people directly, I know all my machine tool manufacturers have been super helpful! Even with my late 80s Miyanos which also have OT controls. Lost all the parameters recently and was having some issues after re-entering them and they were able to help me solve them!I have made some progress, I found out how to access the parameters however I do not seem to have the 744 parameter which sets the offset between the north button and machine origin.On a lathe why not canned cycle? G76?Mostly because I'm doing it in only two steps, roughing out like 75% then a finish pass at full depth.In a word, yes. G92 boring cycle steps up the major by the same increment every time, specified by I (? been a minute) value.G76 threading cycle steps up the major by decreasing increments, and at an angle so that the threading insert cuts primarily on the leading face, but that angle can also be dictated using A valueOn fanuc controls G92 isn't a boring cycle, it's a threading cycle. Like this:G92X.250Z.900F.050X.255...The X.250 is your first pass, Z.900 is depth of thread, and F.050 is your pitch. Each subsequent x is your next cut.I don't need the control of G76 as far as I can tell.Do you have y-axis on your lathe?Yes, but you know how it is, the travel is not very far so I would rather use Y to C for everything and only use the Y for the tool spaceBecause it's not a polar interpolation movement. It's just an XC movement. Polar interpolation refers to a movement like G1/G2/G3, which is being resolved from XY into XC.So I have to turn off the interpolation, do the cycle, turn the interpolation back on and move to the next position, cancel it, do the canned cycle, rinse and repeat?I can make my post processor do that but I feel bad for the guy having to run and read that at the control..You need to turn on C-axis mode not polar coordinate modeWhile I could use C axis and degrees, I am trying not to due to CAM / post processor / production system limitations.Id get that post fixed, no reason not toI ended up having my post turn on G112, move to position, Turn off G112, drill / tap the hole, cancel canned cycle, turn g112 back on, move to next hole, etc.. its super ugly. Kind of unimpressed but every machine has its quirks..No way around it sadly. I tried this using manual guide i on my fanuc control and had to figure out the positions using trig and program in c axis mode...ughh.... Yeah I was scared of that. Just curious, did you try G73, G1001, or G183? I was wondering if maybe those alternative drilling type cycles might get around it. I just decided to modify my post processor to turn on and cancel G112 every hole.. Its really ugly.Seems rational. It's going by the file header and not the file name.That's FANUC ordering. Not from the files.P sure it‚Äôs ordered by last modifiedBecause we did it that way in 1970, when we pioneered the CNC controller, and we'll keep doing it that way forever! Never deprecate anything!I can see you've got an old 16i, which is no longer sold new but will be supported until the end of time, so you're at least benefiting from this somewhat.It's what I've learned CNC milling programming/operating on. Little 3 axis machine that is brilliantly tough. Handles knocks very well.Yeah, also 16 is crackedReal question is why G73/G83 can't dwell at the bottom of the hole on a fanucFanuc 0i-TC, Lynx 220LM... Mine can dwell at the bottom!G54 T1010;G95 G97 S1250 M3;G00 X0 Z2 M8;G83 Z-5,5 Q750 P500 F0.04;G80 M9;G30 U0 W0;;P500 - 0,5 second dwell when it reaches Z-5,5...On the Fanucs I use you have to curser over on the top row, between No., File Name, Size, etc. You might have it sorted by date or something else rather than File Name (which should be highlighted if it is sorting by that)Maybe a part counter?Hmm played with a bit but still erroring out. Could it be the chip conveyor? It make a click at the end of the program and that's when the alarm kicks on. Not sure what would cause that and the error light on the conveyor doesn't kick on...Un locking the door?M30 at the end?M02What error code? Could be just a typo at the end of your programNo error code, and program is fine, ends with M02 and it doesn't do it on my other machine, they use the same post.M30 to finish cycle and rewindMy post uses M02 and it's the same on both machines and my larger machine doesn't have an issue just the small one so pretty confident it's not my code. And it never used to do it and we've used the same CAM and post since before I started here.Is it a bar fed machine? Which light flashes?AI HPCC parameters are determined by the machine tool builder - I‚Äôd start by contacting your dealer or builder first and confirm that the parameters in your control are correct.Good deal. I'll give them a call tomorrow then. Thanks!Look at the programming manual, there is a section about contour control that should explain the relevant settings. It may be a matter of calling the data via program rather than parameter settings.I was bouncing back and forth through the manual all morning. Took a break when my eyes started to go cross. I'll have to look into calling the data from program deal. That sounds like it would work. It's like it's not taking the A axis into account when calculating the feed rate or accel/decel into corners. Trying to understand how Fanuc interfaces with the machine itself vs what parameters affect what, its alot to take in.video of screen https://imgur.com/lMfS8dzAny luck with manuals search?Idk lmao I‚Äôm going to try: don‚Äôt take my word for itTop, left to right Spindle jog, MDI, cycle start, feed hold Bottom, left to right Power off, power on, b handle +, b handle -, the last one looks kinda like handle for a tilting head? Is this a 5-axis? LmaoYes 5 axis, your correct I think, the machine has crashed and is being fixed so can‚Äôt test them atm :D2 yellow buttons look like manual tool change buttons red is power off button next to it is power on. Square with arrows is probably cycle start.2 labels were for a b axis. The one with a little F might be like a dry run button. This is all a guess btwProbably just because Fanucs are really popular and shops in a lot of cases try to stick to the same control just for ease of use.You can probably order them with a Seimens or Heidenhan controller too, if you that's the flavor you like.I like Heidenhain flavor the best.. sour at first but Its much sweeter as time progreses...Who is the genius that unlocked the 9000- programs for deletion? They are supposed to be password protected.The only way to clear alarm 101 is by enabling PWE, powering machine off, then powering on while holding delete button. The instructions on clearing the alarm said it would only delete the active program, not all the programs.!!!! WARNING !!!!I dont have your make or model of mill, and it's been a few years since I worked on a mill, but, when I did it was running Fanuc OM, and the 9001 macro for that machine I will post below. Check well & try it at your own risk!&HE:%:9001(M6 SUB-PROGRAM)#3002=1#3003=1#130=0#131=0N10#1115=1IF[#1015NE1]GOTO10#1115=0IF[#1014EQ1]GOTO20#131=#4003#130=#4006M19G91G28Z0.G91G0Z50.G91G30Z0.M86G91G0Z-70.G91G28Z0.G#131G#130N20#3003=0#3004=0M99%I'm guessing this is metric from the incremental z move.. this code actually looks really close to what I need from reading through it. Did your tool sit stationary in x and y and the drum magazine moved to the tool for pick up and just the z would advance or retract for clamp unclamp like mine ? From reading this code I'm guessing so?I'm also wondering if that first line after the m19 should be a g90 commanding the z to move to tool magazine unload height prior to switch to the g91 for the remainder of the prog ?18i is pretty much universal control with minor diffs pending machine make. I‚Äôd say it‚Äôs more about the CAD/CAM selection.Nice. I'm in good hands everywhere it seems.! Thanks, my friend.We've got 3 identical machines. Two unlock the door at M30, the other one does not. Nobody has been able to change it for years.Do you happen to work in the same shop as me?XD I don‚Äôt know but good Lord I want to play with those buttonsNo touchy!That has nothing to do with Fanuc. It has to do with how the machine was setup from the machine tool builder, in this case, Daewoo.Most likely it's a parameter or a keep relay. Call Doosan and see if they can help with that.Yep, sounds like a PLC parameter needs changing... or edit the ladder.If you have a copy of the ladder then look for the door lock keep relay and then you can change that PMC parameters. If you don't have the ladder diagram then call doosan and they will provide you the information. It should be at no cost as it's a option you could choose for free from the factory.The door interlock key should have 2 bolts in it that you can take out. Once you have the key off, stick in the locking mechanism. Make sure the bracket that it was once bolted to doesn‚Äôt hit it every time you close the door, or that will bend something eventually. Enjoy your big boy machine.You actually let the doors lock? LolNever seen that before.If the Absolute is reading Imperial and the programs run properly, the Machine Numbers don't really apply.Older Heidenhain iTNC had Datum and Tool tables that did that, annoying.Batteries maybe?G21?Solved:Parameter 3104 bit MCN needs to be 1These errors came up after inserting a wrong option parameter and no it won't clear by clearing the memory by pressing 7 and 9 when booting and inputting all options as zeros. Motherboard shows E and the watchdog led is lit. Fuck around and find out I guess. I can pay someone if they know how to figure this out without calling a tech if it's possible. The machine was all functional before this and I have a fresh backup. I have loaded parameters several times before successfully.On your SET screen set TVC tv check to zero. Turn the TV check off.Typically no. The quill axis is generally not meant for heavy use. You set it to where you need for reach then use the Z axis for work. There may be a way but not one I am familiar with. But my only experience with a W quill axis is on a horizontal bar.Can‚Äôt you just use W instead of Z in your G73 line?No, machine just considers that a positioning move. Positions the W and then drills with ZHow deep down the rabbit hole do you want to go?When I took Entrepreneurship in college a lifetime ago, one of our professors started the first day of class by saying "When you work for yourself, you can choose your own hours. Pick any 20 hours of the day you wish".Friend who works for himself regularly complains that his boss is a dickbag that is stingy with time off.I've got a friend that has a small shop in his property that has two bar feeds. Dude just makes expensive nuts and bolts. He works 12 hours, 5 days a week. But, he can also run lights out. If he wants to take some time off, he just bumps it to 18 hours and runs part of the day lights out for a few weeks to get ahead. Or some months, he'll have a lighter workload and take time off then. His take home is right below or just at six figures. He's his own boss, and enjoys it.He learned to play guitar, sitting between his two machines. Plays some games next to the machines, and just hangs out. I don't envy the hours, but I do envy everything else about it.Either cut back on the jobs you take or hire someone. The thing is with hiring someone the administrative expenses (workers comp ins, payroll taxes,....) also becomes quite a burden. So you need to weigh the pros/cons carefully.If you plan on growing, hire. If not, cut back.Edit: just reread your post. Apparently you have ee's. I'd vote for hiring someone. Even if it's a PT person.Plan on growing. The stress of making payroll when things are slow sucks though.Tell that robot to get off his ass and load some parts.‚ÄúIf you don't find a way to make money while you sleep, you will work until you die.‚Äù Warren BuffettAt least nobody's gonna tell you to stand up and find something to doThe main reason I will probably never go out on my own for anything. Getting stuck working more hours than I currently am to make the same money or less. Even making more money wouldn‚Äôt be worth it if I had zero time that wasnt workingSame here 11:15pm here and I have to have this part ready for my day job tomorrow morning. 7:00am.Money doesnt sleep. Work less perhaps?Robots are a great way to spend more time away from the family but not making parts.Employees are great when you want to increase your expenses by 50%, increase the amount of work done by 15%, and still work the same amount of hours.I've spent many a Sunday night at the shop alone.You need to find a way to grow.When you get it right, you don't pay the employees, they pay you.Hard to get it going though, damned hard.Stay up.I don't know if this is applicable for what you machine OP, but palletize as much as possible.Fixture Friday is a pretty good start on learning to palletizeEntire YouTube Playlist for Fixture FridayAlso, I would recommend Reading Paul Akers 2 second Lean since you own the businessFree 2 second lean audio book on YoutubeIt seems lots of people try to get every job possible, every scrap of revenue. But what if your profit margin on it? How many $/hr is your business charging? Yes, you bid by job, but look at it from a weekly or monthly perspective. What has your shop rate been for the last month?Raise your prices by 25%. Lose 25% of your clients, but make the same income, and have more time to find higher paying clients.Decline or overprice clients that you don't want to work with; not every client is worth the PITA.Take a day off for family, no matter what. They are important.Give everything a good think, and make a good choice for you and your family.It's also really easy to give advice, sitting here in my underwear, from the outside looking in.I had a rush job for a big customer then per Murphy‚Äòs law everything turned to shit. My lathe chuck seized up (chips), then my lathe light burned out. Then the coolant in my mill reached a tipping point and everything flash rusted and needed a good cleaning. Then I got chatter-city on an 80mm pin, 21.5‚Äú long. The first one turned just fine, the second one has been fighting me all night. The order has to ship in a few hours. Almost done. Pin #2 is turning at 130 rpm and 200SFM‚Ä¶..soooo It‚Äôs time to put on more coffee.Ya know that pretty yellow thing in the pallet can do more than weld, right? Now if you just knew a guy who could write code...My manager used to be an owner. He's told me how stressful it can be. I wish you all the best and good fortune.Paint your walls white, more light, nicer work environment.You deserve to not work in a dungeon.How long you been doing it? Does it still best working for someone else or no?Everything was set correctly How to perform the zero ruturn position ?ThanksThe back of the machine should have a booklet with all the parameters on it.Yeah that's a fun game, filing in all these buggers. Good luck!Dealers won‚Äôt supply wiring info? Are you saying you don‚Äôt have wiring diagrams in the service manual!?!?Correct. They are meant for service guys, at least that's what we were told. There are no wiring diagrams in the service manual that i could find.Its very unlikely that the wiring is the problem and its not the interlock itself, however if you get me the exact model of robodrill ill see if i can get you a pdf wiring manualYou could post some more details and someone might be able to help. The diagnostics and ladder are very useful in troubleshooting fanuc controls.Thing is that we just recently purchased used machine that doesnt activate the interlock when door button is pressed. After we removed the lock physically i have seen that there's no 24V to the solenoid when that button is pressed. I'd like to trace back to the cabinet to perhaps get some other ideas. I have not checked the diagnostics and ladder - got any info on how to access that? We have 2 of the robodrills and never had to do any diagnostics yet.Try pushing (or dead blow hammering) the turret the direction it was going at it‚Äôs last index. I‚Äôve not ran a Nak but if an old Mori doesn‚Äôt catch the turret indexing pin the right way, it doesn‚Äôt seat, and no alarms or anything but the machine won‚Äôt move. I started pushing on it for a while and felt it nudge back into position and voilaI‚Äôve had a similar problem in the past like that. It wouldn‚Äôt engage anything. This however is in position and able to engage live tooling.There is a pneumatic cylinder that fires a tapered locking pin into the drive shaft to lock the alignment for indexing. I have seen worn belts jump teeth and cause misalignment, a broken proximity switch that picks up the bolt and a sticking magnetic switch on the pin. You may get a "knock pin not engaged" alarm. If you can turn the live tool when the machine is off, the pin is not engaged and will be either the proximity sensor or worn belt. If the tool is locked in the correct orientation, it is most likely the magnet switch on the cylinder.Works on Puma 8, Puma 250, Puma 2500, Puma 15, Puma 400, Puma 700, but not on this Puma 3100?Is it new or new to you? If new, call sales, they should be able to get you in touch with tech support, or call fanuc directly. They are usually pretty helpful with stuff like this I have found. My guess, there is a setting in parameters that is not allowing certain things. Fanuc is pretty good about keeping the same syntax across the board, but I know they do have parameters to change certain things. If you have the manual for the controller, that helps (with fanuc, it's usually correct, at least)Yeah this machine is brand new. And yeah G70 allows the use of U and W on all other machines, thats just been the way of finishing everyone's been doing here. Pretty simple if it works..Oh, looking at your code, g70 for finish won't leave material iirc, you would have to use g71 d400 to do a semi finish pass, I think. So that it doesn't do steps. I can't find any fanuc documentation one way or the other, but if you are able to use u and w in g70 on other machines, my guess would certainly be that there is a parameter to change it to allow it to accept a uw in g70.I know on the old Doosan I ran with fanuc control you could set the g71 to either follow the profile of g71 while roughing or leave it as steps. We had it set to follow the profile so after it was roughed there were no chunks/large steps to semi finish off before finishing.Any other ideas how to do multiple finishing passes easily without playing with the offsets between every part? Using G71 as a semifinish is alright its just a bit more code to type over and over again, and it also ignores the changing Feedrates between N1-N2 when you need different finishes along the way.Is it just me or don't you need a G2 or G3 to cut your R1.5? In your G71 section it's a G1. That might affect how the machine reads it and be taking off the stock you're looking to leave. How does the part measure right after your G71 finishes and before your first G70?On a lathe you don't need g2 or g3, you just specify the rad or chamfer value as r or c and in some machines its r or k, and you have to put the direction of the radius (positive or negative) newer machines can figure out the direction for themselves based on thr next move direction.Ex: x1.5 r.25 would feed up in x and put a radius on the part that would end at x1.5.Yeah if its full R at the corner its not needed, all it needs is a direction to go in Z after it, saves up few lines of code. Works on older lathes too*0.5 mm DOCI ran the very first cut at 1mm DOC 1000rpm and 4.5m/min and almost stalled the spindle on contact, 4m/min sits around 110% load, dropped the DOC and dialled in the feed to what is in the video (still 1000rpm)Ae = radial depth of cut or stepover Ap = axial depth of cut or stepdown Vf = vector feed rate, rate of cute along pathWhat material is this? Horsepower of spindle from factory?I'm not well-versed in Star Trek units.Trying to find some myself. Lots of stuff out there you can buy by the foot, but without knowing the profile shape I'm spinning in circles. Did you find a source or the right profile aftermarket? mine is a 1995 t-10bI thought that too. But we are a small design shop with an older machine. Everyone is telling how good the fanuc support is, but we had a completely different experience. No calls were accepted until we got registered on their system, which took almost six weeks. Although while we were going through all the forms to register, their sales guy contacted three times asking if we want to buy a new machine!!! Now we are on the system, but still have no access to any part diagrams or anything. Have to email the asking for info, and pretty much majority of the parts come back as "this is part number, don't have price, never had it on our UK system, never supplied in UK". Contacting other counties will be most probably a universal answer: "contact UK rep". So now trying to get some aftermarket Fanuc specialists. Was hoping maybe there are some well known online suppliers specialising in these machines and keep stock.Maybe find a reputable mechanic. The wizard who repaired the machines at a place I used to work at was able to conjure some up for some 30 year old takisawas for many dollars per foot. I think it's out there, you just gotta know who to call.Yep, that why I'm asking through all the channels I know!Yeah looping is easy. You can reference the variable to print with a variable.Example500=100 (This would be your variable spread beginning number)While [#500LE200]DO Dprint A#[#500]500=#500+1ENDWHILEI don't recall the syntax for dprint but the above would simply loop and write variables 100-200 through dprint. The A in dprint is just for the sake of example.to me it could be worth it write a separate dprnt for each variable. this way you can label your outputs, unless you just want just a ton of data seperated with a comma or new lineI assume you're connected to some sorta dnc software that will log each rs232 output individually?I did something like this a while back on a Fanuc 31i. I was able to connect to the ftp server being ran off my computer and output a .dat file. Only problem was they were all named file.dat and would override each other. I was going to write a script to automatically archive and rename each file as it was uploaded, but management changed their mind and didn't want to spend the machine time to probe or inspect the part.M codes tend to be builder specific outside of the most basic M03-M04 etc.Mine is M51M51 = ON M59 = OFFOn the one I use.If you aren‚Äôt comfortable in the ladder already stay out!!! BUT that‚Äôs the only surefire way to see what mcodes are used/active. Best bet it check the op manual because all machine tool builders are different in their mcode choice, or ask the same question for your exact machine.Yea I‚Äôm not sure I tried all those and still nothing. I‚Äôll keep plugging away at it I have a manual button I can push. Thanks for all the suggestions!Take tools out of the spindle and turn your rapid and feeds down, m17 and m18 are usually on/off for air blower.If you have an auxiliary button you can press that, then you might see what m codes are active on your MDI screenMine is M80 to start the air cycle.From my memory I think it‚Äôs m114, I may be wrong thoughFrom my memory I think it‚Äôs m114, I may be wrong thoughM57 on m67 off for mineIt‚Äôs M07 on my fanucMine is M50Mine is m72/73My machines are M7, M151, or M50. Sure you have that feature?M83 and M84M14 M15 on star swissTry m12M83 on m84 off.Think of work offsets as a zero for each part and/or setup and are individually adjustable.The shift function adjusts ALL work offsets by that amount.Workshift value on the 21i is the distance from the machine's home position (X all the way up and Z furthest point away from chuck) to the part's face which is your Z0.Does the machine have G54 to G59 work offsets too? Some machines don't as it was an option depending on the machine builder.When you are in the workshift page, do you see the X and Z Workshift on the left of the screen and X and Z Measurement on the right of the screen?If yes, bring your tool to the face of the part, use the cursor to highlight the Z in the Measurement side, type 0.0 and hit Input. Now the value of Z Workshift on the left of the screen should change.Move the turret home, go to MDI and enter a couple of blocks ocode to verify that the workshift is set correctlyT303; (or whatever the number of the tool you used to set Z zero)G0 Z0.0;Then hit cycle start. Obviously your rapid override should be to the lowest settting to be safe.Rule number 1 never just send it and hope for the best.Yeah, I learned it the hard way too. We are all allowed mistakes.Pressing cycle start counts right?He started halfway the program, halfway the block. You can start halfway but always need to read out the first lines of the block. If you don't do that, the machine doesn't read the G54, the G96 S500 M3; and crashes into the material. The material wasn't even turning because he skipped the M3 completely.Oh well, just glad its not the most expensive tool. Let's hope he learned.Leipe shit ouweYikes.....Do you consider fanuc one of the hardest systems to learn?Not much experience here, but on our 3 axis mills I picked up the controller and code fairly decent after a year or so, never had to write whole programs by hand but I could change stuff, read it and understand what was going to happen. Tried our fanuc lathe and that was a bitch, had to write out the whole programs with nothing to go on except finding old programs with similar shapes. Never did get the hang of the sub routines and it jumping up and down through the code. Simple parts would take me hours or days to make a program, granted I only made a couple. Got switched to a mazak super quick turn lathe with live tooling a month ago and I can do complete prgrams with milling, live tooling and using up all 12 tool slots in an hour or two. Soo much easier to learn and a very capable machineGE and Fanuc had a partnership a while ago, they now have seperated but some controls have this on there from the era.thank you I was really curious about thatI recently started working on a machine with this control but i‚Äôve never seen this model of fanuc and i can‚Äôt find anything about it online anywhereHmm, looks like fanuc put the MTB name where the model usually goes.If you go into the settings screens you should be able to find the exact model.I'm in a similar situation with a fanuc controlled cnc surface grinder.Is this a Komo router? If the Fanuc control is running on top of Windows, you should have pdf manuals you can accessOpen it up and look at the part numbers on the boards and drives. From that you can decipher the modelwait why does a mill have a C axis?The auxiliary fourth axis can be called anything other than X Y or Z.Usually it is the A or B axis. Though it can be C as well.its a router with a right angle head that you can put on itLooks similar to the cnc OD grinder I've been training onThis is awesome. I love it when others leave comments to give context. This is especially useful when I want to adjust a particular feature deep in the program like a spring pass taper adjustment on a finished feature. It saves a lot of time and actually minimizes risk of making an incorrect change of value.It's said that Doom was so influential, not only because the game was written so well, but because the dev left comments of why/how each piece of code worked the way it did. (This code has to be this way because when I did X, Y happened)This is how comments in any code should beThis is how it should be.It drives me mad when I pull up an old program and there are no fucking comments at all explaining how to run it.It‚Äôs even worse when you are the person who programmed it lol.‚ÄúWhat the fuck was I thinking 10 years ago????‚ÄùI would hire you in a second.Your coworker is a fool. What can having relevant info in the program hurt?if the boss finds out, they will love it and demand shitbag coworker do it too. Or maybe being the only person who knows how to run their programs is the only thing protecting shitbag coworker's job.I do all the programming and machining in my shop, and I don‚Äôt treat myself nearly as kindly as you are treating your machinists. I would have zero complaints if I had to run one of your programs.Compromise: tell operator to goto Nxxx to read setup info instead of having it all at the top.Never considered this. If I write anything for his machine again, i will definitely use this.So from your post I see you have a coworker. I assume the coworker is someone other than you; in which case, notes in comments are a good idea. They provide a quick and easy way to understand what is going on in the program without having to read the program and visualize the tool path themselves.Another situation in which these notes are good to have is if you are going to use the program in the future. That way, you don't have to remember all that information accurately in the meantime.Tl;Dr you have a good habit thereI‚Äôm not a machinist. I‚Äôm a software developer who lurks here because I have machine shop clients. I have no idea what the folks here are going to say but this is the way. Critical documentation should always be with the code.Depends on the machine used and how you do the comments. Lots of CNC machines only let you scroll through code 1 line at a time by pressing a button repeatedly. So if I need to get to the 10th line of code but there are also 30 comments, that's 4x more button presses I need to make.Also, a paper setup sheet is still important. If I am in the middle of setting something up, having a piece of paper I can hold is super valuable compared to having to dig up the code and thumb through it.I'm running a Haas VF-2. On the program screen, I can view 18 lines of code at a time and use the page up/down buttons to move 18 lines down. Additionally, while a program is running, I can view and edit the program in the background while maintaining full control of the program while its running.I always add an N1 at the start of the first op. N2 the start of the second and so on. Makes it easy to get to each op.Too many comments to see the actual code, N1 arrow down.Line numbers and go-to commands can alleviate some of that headache, but not all of it.I'm the main operator and programmer in a smaller laser cladding shop, I taught myself and then have taught every operator who has come in. I write very detailed notes on setup and zeroes on every program and have now been sitting at home for a month with a fucked up back from getting my truck written off getting rear ended. I've had 2 very basic programming phone calls in the whole time and the guys have been able to maintain without me, notes like these make everyone's life easier.I used to do this in all my programs. The more detail the better as far as I‚Äôm concerned. It‚Äôs helpful when changing offsets and editing the program.I don't see anything wrong. Leave all the comments you can.You sir are a god send, I'd happily run your programsFree text book download by respectable author, Peter Smid.Fanuc CNC Custom MacrosTry looking at existing macros. Also try to avoid problems related to floating point errors. For example, if you want to take away 10mm in 3 steps, don't make the repear condition based on the current step size. After 3 steps, it will end up being 9.99999999999. Instead define the repeat condition based on the amount of steps it has taken. Dunmo if that makes it clear, sorry.Lol, not probe macros, though. The stuff that ships with probes is nearly incomprehensible until you really know what you're doing.I have nightmares about macrosSmid and S.K. Sinha books are both great. Also, a good back plotter will really help. I use NC Plot and Cimco Edit 8. CE8 isn‚Äôt great at plotting G91 code though, which makes it useless to use as standalone macro support.The fanuc manual for your controlGonna need some more info that than budOh :/ fuckWhich Fanuc control does it have? Plus with things like bar feeding codes, the machine tool builder uses its own specific M codes and such. You might have to contact Doosan directly to help you figure it out. Doosan has good customer service.How is the barfeeder set up?Does it use chuck open/close signals to tell it to push or M Code to push?Either find a sampe code to use or you may have to write a barfeeder sub program from scratch.You'll have to look at 2 scenarios.When the Barfeeder has parts left in the bar stock and when the barfeeder has not parts left in the barstock.Have two subprograms or conditional jumps.1 to handle normal barfeeding routine.Position turretOpen chuckwait for barfeed complete signalClose chuckMove turret awayStart Processand one to handle when no parts are left, this subprogram will handle a new bar.. top cut etcYour barfeeder may have different functions on how it loads a new bar (Eject with a new bar or eject with the push rod)Best to find a manual for you barfeeder and investigate its parameter set up.What model is the bar feeder? I'm running a Doosan Puma with a bar feedTry making a dummy move before calling your tool fanuc likes to have offsets cleared before calling the next tool. So like g0 z0 x0 T0 then call the toolCorrectIf you're talking about the ladder I believe it's in system-->pmc-->pmcladI think i'm being dumb, but i don't see the system button.Not familiar with doosan but on our fanucs: first press feed hold, then change mode to handle, then spindle stop, then door open - button.Then when you want to resume, change mode to auto again and press cycle startIf it‚Äôs a new doosan with fanuc i series. Feed hold. Turn coolant off. Then turn your spindle override knob to 0.To resume do it in reverse order.Thx a lot, ill try that and the one from poster above.This is what I do.Carefully. Make them take an excessive amount of notes. And if possible start on a scrap part.I like the ‚ÄúShow, Tell, Watch‚Äù method. Have them watch you as you show them what to do, then have them push the buttons as you tell them which ones to push, then have them run the part telling you what they‚Äôre doing. Between that and their excessive notes should be enough. You may have to go through it a couple times.Do you have a CAM program? If not pick a CAM program and learn how to use it.How novice? If you know basically nothing, maybe you hire someone temporarily to teach you.You gotta build a rs-232 with the proper handshaking pin layout. Serial port rs-232 crossover cable.I wish I were more versed in electronics than just a mere lowly machinist.‚ÄúBuild a RS-232‚Äù? I assumed they all had the same pin layout... how do I know what layout to build?Edit: I am OP but different accountThis is a good thread with a lot of info about your problemhttps://www.cnczone.com/forums/fanuc/16270-fanuc-11m-rs232.htmlWhat exactly are you trying to accomplish? You want your machine to read something other than 0 at the home position?Just looking for a quicker way to tell the machine an axis is currently at a different position without moving the axis. Similar to single axis mastering Fanuc robots using my manually entered ‚Äúmastering pos‚Äù to change the ‚Äúactual pos‚Äù or seimens parameter 34100 when using parameter 34210 to referenceI did this last week on an Fanuc 18T lathe. You could use a grid shift parameter and change the reference position to another location. Also be aware all the parameters use encoder counts as the unit of measurements.I can get you numbers in the morning, not sure your time zone but im UTC -7. My cutting parameters are at work.I'll just start with the obvious is it plug in and turned on?If water got in you might have some corroded contacts. If your comfortable you could open it up and take a look. Other wise I would just call a tech.Are the lights on the buttons on? If not maybe a tripped fuse at the back of the m/c?Lights are on for the other functions, and screen is somewhat lit up around edgesI know it will sound stupid but you know how the saying goes... Have you tried giving it a light bop to the right of the logo above the screen?I've got an old controller that the screen blacks out from time to time but everything is still running fine. Had our electrical engineers look at it and they could find any issues. Idk why I thought to try it but i bumped it with the side of my first and I'll be damned it lit back up.Would advise that this is my solution because replacement of my controller might not be possible due to age and model. So ymmv, good luck buddy.If the machine comes ready still it is definitely a display issue and not a controller issue. They don‚Äôt typically make some of the LCD screens anymore so there‚Äôs likely going to be a replacement. To determine the right replacement give Fanuc a call/email. If you have the data sheets or the part number for the display unit, that will be needed. You can try the A02B part number that‚Äôs on the back of the yellow case right behind the screen, but that doesn‚Äôt always give the information needed. You could also try the serial number that‚Äôs on that sticker on the yellow case there, Fanuc might have records of what is on that control from that.I found the screen part number, A02B-0319-D510I have been mucking around with USB to Serial adapters for ages. Frankly the best option is a PCI to serial card:https://m.media-amazon.com/images/I/51Bds9WtqJS._AC_SL1000_.jpgUSB might deregister and come back online because of static electricity or Windows being Windows or whatever. You don't notice that on your Keyboard but this will mess up your 45min running job in an instant.PCI cards are the next best thing to a dedicated Serial port.I am using only laptops. The current laptop is barely old enough to have a serial port and barely new enough to run Windows 10. It has performance issues running Fusion though and that's why I want to change it.I actually have a pci card for rs232 and a pc collecting dust but I will not use itI just purchased a FTDI USB to RS232 for a 1993 ZPS VMC and it drip feeds from predator to the machine using Buffered input on the machine no problem. Just have to download the correct drivers and it works. This is also on a Dynapath delta 50 control so it‚Äôs not entirely the same but with this cord I am able to drip feed a 30 year old control with a new computer.Maybe that machine has bigger buffer than Fanuc? Are there different drivers than what Windows automatically downloads?Mine is k4.2Have you tried programming using I J K? That likely won't change the depth issue, but sometimes giving the same information in a different way will shut it up?I don‚Äôt know your experience level, It‚Äôs my understanding you cannot complete a full circle using R value. You have to use I J K, which would explain over tolerancing your radius. You said you had an alarm programming with I J K when it read your G41 line. Are you using linear motion to begin your tool movement after the G41?Edit. Since your on a Toshiba you can just use G13 (ccw) or G12 (cw) your offset (D1,2,3 etc) and your I value for your radius so... G13 D1 I1.25 F50.Did you try // instead of /2? My machine has three block skip functions, /, //, and /// My control is an older FanucNot sure if it will help but on ours we use the /2 to call a sub and the sub contains the M51....../2 M98 P7008........%O7008M51M99%Hope that helps.Does it have some sort of conversational programming? Because that's what it looks like when I write programs in CAPS on the NL-2500 I run.I work with Fanuc Controls, and they all have arrow keys on the number pad. I have been wondering if they have any functions, but can not find anything in the control manuals. My best guess is that these arrow keys are included for controls without a jog wheel. Any ideas for what they actually do would help satisfy my curiosity.I use a Fanuc control at my work but it has an actual screen on it to view the program you want to run and edit it if needed. Fanuc probably just uses the same keypad for all their controllers cause mine looks the exact same as yours. So yeah, they are useless unless you have a screen with the controller.When I'm in Custom Graph and using the zoom function, those arrows move the zoom cursor on the screen.Oh man, love me some good ole cycle start/ feed hold thumb action.The Chirons we have at work have a very similar looking control, but I'm not sure if it's identical. I don't do much with them, but I know you can use them to skip around in your program. For instance, if you type in N50 for example, and then press the down arrow, it will search down in the program until it reaches the N50. Other than that, they move between lines and blocks in the program when you're writing or editing at the control panel.It‚Äôs just the standard keyboard for machines with that control, option installed or not, saves the cost of different keyboard layouts needed.This function has to be enabled both by the fanuc software and machine manufacturer.Most of the time the manufacturers just install their own buttons/switches, ect.They‚Äôre for jogging. Notice the 5 key has the jog symbol. In jog mode hold that key and one of the arrows and it will jog.Worked with and repaired these on Husky injection moulding machines!Is the fan coming on when you throw the breaker? If i remember correctly i had the same board replaced because the thermal protection circuit was bad. I am not sure how Fanuc customer service works in your region but here it you own a Fanuc product your entitled to telephone support. Of course they will recommend a replacement board but they will also be able to tell you how to diagnose likely problems.As far as I can tell, I believe the fan works. I can feel an exhaust coming out of the top of the amplifier. Do you recall if the error would ever clear or would it just stay on? When it's on it fired an error in the controller and locks the whole machine up.I will try giving them a call come Monday. Thanks for the inputNot a FANUC expert, but dealt with drives in my days in heavy industry. Based on your troubleshooting and the content on pg 94 here, it sure sounds temperature-related. Have you tried re-seating the PCB like it says? There's a thermostat that controls this, if you could figure out where it is and check continuity it'd help narrow it down. I can't find any specifics in the Maintenance manuals though.Thank you for taking time to look at it.I am going to have to look into "reseating" the pcb. I've never opened up an alpha drive and do not know exactly what I'll find.I don't think it's temp related, it will fire off immediately upon being connected to line voltage (not control on, only lime voltage). After 5 minutes f having supply, a power cycle clears the alarm.The manual does not seem to show what the error code 6(dot) is either. It seems to be the correct manual for this drive but doesn't seem to be in there. I'm not sure how different other drives are, but I have learned that error "6" is not the same as "6."I will look into reseating components. Something might have loosened in transport. All wires going in and out were tight though.Thanks againMind PMing the GCode? Hard to diagnose without seeing what's really going on codewise.Which 3rd is randomly causing issues? If its each one are you sure your G90/G90 before the subprogram call are correct?Nothing when it comes to Gcode is "Random". Find out what degrees it is rotating to and find out what correlates to those numbers there is a reason you just don't see it yet.Post your code?So I got confused by my book. It says one two separate blocks of text how to set my polar center and how to move, both of which will perform differently depending on whether I used G90 or G91. I assumed I could designate my polar center, then on the next line move incrementally from current position.. not so much. It kept wanting to shift my polar center. So, unless I wanted to always use this macro at work origin, it'd be useless. Now, however, I'm trying to store my work coordinates and current position within those coordinates, repositioning my work coordinates to current position, using my new work coordinate to stay in absolute the whole time, then restore work coordinates to their previous values.The problem I'm having is ensuring I can use this macro in all available work coordinates. That means I have to store my modal G54-G59 in a variable, adjust another variable based on that value, and store the appropriate coordinate values based again on that value. My book says that's possible if I format it like so:#124 = #5041; STORES X POSITION RELATIVE TO WORK OFFSET#125 = #5042; STORES Y POSITION RELATIVE TO WORK OFFSET;#149 = #4014; STORES WORK COORDINATE STATE (G54 - G59)#148 = [ #149 - 54 ]; DIFFERENCE BETWEEN STANDARD G54 AND CURRENT WORK COORDINATE#144 = [ 2501 + #148 ]; VARIABLE IDENTITY OF CURRENT X WORK COORDINATE#145 = [ 2601 + #148 ]; VARIABLE IDENTITY OF CURRENT Y WORK COORDINATE;#114 = #9144; STORES CURRENT X WORK COORDINATE#115 = #9145; STORES CURRENT Y WORK COORDINATE;#2501 = [ #114 + #124 ]; MOVES X WORK COORDINATE TO CURRENT POSITION#2601 = [ #115 + #125 ]; MOVES Y WORK COORDINATE TO CURRENT POSITIONWhen I run like this, I get an error message that it is an invalid variable number. I can store #2501 and #2601, but only without the #9**** format despite my operator's manual stating this is the proper format. And unfortunately, the internet isn't helping much hahaOlder Fanuc controls like 0i-TC never asked for confirmation.That sucks, there's no way to change that?Edit lock key on the control. There is no confirmation of offset or wear offset changes though.Any functionality for IO would be handled by the ladder, so Fanuc has nothing to do with how it is set up.Who built the machine? They wrote the ladder.You should just be able to throw it in hand mode (manual), and push a draw bar button near/on the spindle?I think fanuc simply has it locked to the manual mode. I'm not sure if they run canned cycles as gcode for those buttons, but I suspect it's hard coded into the firmware. I wouldn't suggest poking around firmware settings without a technician around. I know a guy, but his companies rate is 625/hr.My live tool codes aren't the same as you codes, so can you mark up your program with what the non-standard codes are? Such as M17, G113, G18. That may help figuring out what has been forgotten.Try a G18 after your M9.Look up G98 vs G99. You can preposition to your clearance height in the line before, and then use the R to get to where you want to start at, then it will retract clear up to your pre position height after that cycle.I think op wants to start the drill at the bottom of the existing hole but rapid all the way out on each peck. I believe they would need to modify a parameter or use a custom macro.This!What version of MCam you running? Anything after 2020 (I think, maybe 2021) has advanced drill tool path. This lets you set every single little detail for each peck and spits out the code longhand.We just switched to 2021. Looked into that a little big but seems confusing. I will try to dig a little more, thanks!ahh ok! I've heard of that, never messed with it though. I should check it out.I used a quick reference guide for the fanucs on our two monarch VMCs in my early years. Very helpful for tool changer hangups and fault reconciliation.What are you trying to learn?Preferably button layout I'm looking for something maybe like an artificial controller that I can use on the computer and just practice how to do things in the right sequence and stuffIf we only knew what you actually need help with. üôÑroboguide!IF[#805NE209.]GOTO1IF[#806NE209.]GOTO1IF[#807NE209.]GOTO1GOTO2N1(program)N2 (This is your N1)Inverting conditions often solves issues like this. In this case, if any of the 3 conditions is wrong, it will skip the jump.Ahh thats a nice thing In my codeing arsenal! But I got it working by typeing it like this:IF [#805EQ209]AND[#806EQ209]AND[#805EQ209] GOTO1N1A dirty way to do this is to ad 2 values togeter and compare that but it will have some edge cases were the sum is the same even if the values are difrentIf the values are simple like 1s and zeros, without any decimals, you can just multiply one by like 100, and than compare. As longs as the first value isn't 100 or bigger, it won't cause an issue.You‚Äôve made an absolute abortion of that ratchet strapThe more I look at it the more upset I get.I feel like they'll be out of parallel when you release the rachet strap.Kinda like cranking the lathe chuck with the power of monster and cigarettes, and expecting your piece to remain round when you unclamp.It doesn‚Äôt look like they‚Äôre very tight (if at all) but be careful of forcing them out of parallelism from the bases. It doesn‚Äôt take much, especially without something in between them to resist the angle your pulling them at.For real,  put a spacer block in there and it might actually be doing something. This has to be a troll post. I said I like set ups, not getting set up.This set up makes me up setWhenever I see welded assemblies to be machined with most likely a parallelism callout, the first thing that comes to mind is ‚Äúhas the assembly been annealed to relieve the weld stresses?‚ÄùI'm just a stump, but... is there any reason NOT to butt the pieces up next to each other ? Why leave the gap?The older fanuc controls would use cursor down. So in edit mode you would call O0025 then the down arrow. Maybe worth a shot?Personally, assuming the Doosan has the same generic Fanuc control panel that my Puma does, I would choose that. Nothing wrong with Okuma OSP controls, I like them, but the Fanuc controls translate better to other machines because so many use them.Okuma all day, every day. They are great machines and you can do so much more with IGF, including editing the code.I've done my share of hand programming Fanuc g code and I'll take IGF every time.I'm so frigging jealous. They didn't pay out for IGF where I was working because they had a programming department. None of them had run a lathe before and were literally copying and pasting code from the mills on the live tooling sections. Not to mention Esprits post processor was god awful.I ended up doing a first draft in notepad and then simulating and refining on the controller. C Axis contiring written by hand is pain.Learn? Puma for sure. Way more standard.I learned on an LB3000. Definitely a great lathe but it‚Äôs a non standard controller. If you intend to have lots of Okumas, I‚Äôd go that route. Personally, I actually really like Fanuc. There‚Äôs plenty of documentation on programming them so I would probably refer the Doosan. The standard control makes it easy if you want to switch machine tool builders. You‚Äôll be familiar with the control as well as the code. The only change would like mostly be g and m codes that are mtb specific.Doosan simply because learning Fanuc will be a lot more beneficial to you because there a so many Fanuc controlled machines out there.Which machine I'd prefer to work on?Definitely the Okuma. They are step above Doosan.okumaProbably depends more on what I'm trying to make.The Okuma is a way better machine, and gives really awesome control.The Fanuc is equally powerful control wise but much harder to use (especially when it comes to using system parameters in variables).They're both similar enough though in my opinion.(Note I own 2x LB3000-800-MYW's, 2021 and 2022 models, and shopped different brands and picked these over the others my final decision came down between Mori NLX, Okuma LB, and Nakamura SC - all sub spindle Y-Axis machines.)I assume Okuma service is good in your area though? I don‚Äôt even consider Okuma or Doosan for that matter because of the sellers in my region.Excellent, how much did LB3000-MYW 2022 cost you?Have you tried searching cncmanual.com?I prefer to do it on a manual lathe.I gotta do that sometimes. I usually add on my x offset for clearance then adjust my z offset multiple times to hone in on the exact pitch alignment.This is the way. Just remember to set your thread to only do the finish pass or it will not clock properly depending on your thread cycle.Yup...Some CNC lathes have a thread phase matching/chasing function.https://www.youtube.com/watch?v=F2W_TUFm0Qg&ab_channel=FANUCAmericaCorporationDamn it's been a while but it's a pain from what I rememberJust curious, how would you go about doing that?In the Haas lathe you just orient the spindle and handle jog the threading tool into the center of one of the threads. You then set that as Z0. You can then program a normal threading cycle with your start position a few threads beond the beginning of the thread and a couple threads past the end. Its important that your start point is an equal number of threads from the point where you set your Z0. For example if this were a 1/2-20UNC thread I would set the tool in the 2nd or third thread in the part then program the start point 4 threads past the beginning or Z.200I'm pretty sure it's atleast 80 percent luck lolThanks for asking this questionJust call any failures a higby.Haven't done it in forever but yeah we do it from time to timeI end up doing it for other people's fuck upsYou get used to it ... just remember not to use any angle in the programme and to offset in x till you get the z offset into the correct positionI am grateful that I've never had too. If you don't have c axis controls on your lathe I don't know how you could do thisUnfortunately its pretty common I'd sayI know this post is old but I was wondering if you foumd anything that works. I am looking for the same thing but for a shop full of MazaksNot exactly. But i did come across chatter.dev, which seems very promising!For uptime/ reliability, go with Makino or Okuma.I second this. In a past life, we had 3 okuma hmcs, 3 lathes. We had 2 mazak vmcs, and 2 turning centers. Basically production would follow thru the okumas if possible. Everything else, smaller batches, oddball parts and prototypes thru the mazaks. Both ran smooth and well and with a decent post were no trouble to program for either without skipping beat. Using Mazatrol is one factor I knew places lean on it and others steer away from it. Other than that, both are decent all around equipment.Is the only reason you don't want a haas is because you want to try and learn a new controller? That's a pretty bad argument to convince someone writing a six figure check.As I said in a previous comment, not opposed to Haas. I‚Äôve been running 2 VF4‚Äôs for 10 years and never had an issue.But when I can get a Doosan with TSC and Airblast for cheaper than the Haas it feels like it would be an easier sell.The price of a machine is just one thing to consider when making a buying decision. It might seem like you're getting more bang for your buck with a non-Haas machine, but total cost of ownership might look different.You need qualified operators, multiple of them. You want to keep flexibility with assigning operators to stations. You need to maintain your machines and have service figured out in case things go wrong. Maybe you keep some spares on site.If you introduce a new breed of system, you increase complexity of your organization. Which is not necessarily a no-go, but should be considered as a cost factor besides the direct costs of a machine.BMW was ordering new machines (or rather production lines) from Grob with SINUMERIK 840D pl CNCs although Siemens alteady officially discontinued an replaced them with the newer and more capable 840D sl. BMW payed a significant premium for it, because the 840D pl controllers had to be ordered as spare parts. But going for a different controller generation in a manufacturing site would mean training many people, getting new spares on stock etc. Way to costly for a single production line. Paying the premium was cheaper.Sooo... Be careful what you push for. It might create organizational troubles. If you look at the machine holistically in your companies organization and can present a solid and economically viable plan for all the relevant factors, you might be able to convince your boss.We were a Haas shop that had 2 EC400's. Then when we needed a new one, somehow ownership was talked into 2 Makino's. The Makino's were obviously night and day difference, and they eventually bought one more. I hated the EC400's from day one. Terrible chip control, leaked terribly out of the sheet metal, and the indexing left a lot to be desired (I think it was limited to half a degree increments?). Every program had to be an M99 cause the system essentially ran the main programs as a sub routine inside a pallet rotation main, if that makes sense. I was limited to a .781" at 11 IPM (mid steel) Indexable drill for size, as anything bigger or faster would knock the pallet off vertical. It's a Haas, so it wouldn't alarm, it'd just wear out the mounting and give you a non-perpindicular hole.I now work for a specific MTB dealer and specialize in HMC turn-keys for them. I will say, the machine you're looking at, is about 10x better for rigidity and stock options. It'll blow Management's mind when they see the size of iron compared to Haas options. Oh, and the chip control is much better! Good luck in the dealings!I‚Äôd never buy another haas. Mills aren‚Äôt bad but the service end is horrible. You never know when they‚Äôll actually show up to fix shit and they almost always need 2 chances at fixing it. I‚Äôm a big fan of Hurco but I don‚Äôt know if they make a horizontal.I'm biased to makino for horizontals. Worked at a shop that ran them, and they were very rigid and held tolerances day in and out. These machines were 5-7 years old, with 10s of thousands of hours on them, ran production on them 6 days a week with cast iron and tool steels, and they never skipped a beat.The huge tool magazines helped a lot on the production side of things accounting for tool breakage and no down time for replacing tooling when utilizing macro programming and in process checking. I was impressed at what I could do with them from a programming standpoint.We got a Mazak 500mm horizontal after having a Haas EC-500 that didn‚Äôt do well, if you really look spec for spec it isn‚Äôt even close. Not sure how the management at your place looks at stuff but for us it was a huge eye opener.Okuma. The control is so much better then anything else. I‚Äôm sorry, not even a fight.Slip in ‚ÄúOkuma‚Äù every time you speak with them at least once per conversation‚ÄúWe really should be looking at Makino‚Äù üòÇüòÇIn my workshop, we had 7 Haas (vf and umc) and I spent many hours dismantling them to change defective parts, recalibrate the 5 axes, not to mention the wear of the stainless steel tools. We change them for Mazaks and it‚Äôs pure joy. The Mazatrol command is easy to use. I can only recommend it.They didn‚Äôt like Fanuc, but are okay with Haas?? The controls are nearly identical.Haas has 50 service vehicles in Chicagoland for a reason. Idk where you are but in Chicago you have every machine tool dealer and MFG show rooms within a 15 mile stretch down 90. If he‚Äôs willing to spend hundreds of thousands of dollars on capital equipment, he should at the very least take an hour to see what‚Äôs available to him in the area. No joke, you can walk right in those doors and ask any question you want, no appointment needed. My company will even fire up a machine and run some test cuts.For volume a horizontal gives you load capacity enabling the spindle to never stop. In a vertical you'd have two setups on two vices, end of cycle open the door, unload and load so the spindle stops. In a horizontal the unloading and loading is done on the outside pallet. Having more loading space and using it lets you run the machine when the shop is closed (in between shifts or the weekend). You can squeeze at least a shift a week out of a horizontal, it keeps running on lunch breaks.One guy can run one vertical at a time or multiple horizontals.Haas= decent vertical. Does not = good horizontalIf you want a great horizontal, buy an Okuma. Take it from someone who has ran multiple different brands of machines. If you want reliability and consistency in parts, then get an Okuma.We run all Mazak for CNC in our shop and once you get the controls down they‚Äôre pretty damn goodWe use karaki, Toshiba, doosan, and occasionally a Taurus gundrill for horizontal work. All of them do very well and learning a new controller is nothing. Figuring out where the controls are on a new car is harder don‚Äôt worry.It isn't standard with Fanuc.You'll have to write your own macroCall fanuc or the OEM.They'll send a tech on site to do it. It takes less than an hour. I used to do it when I was a service tech.Of curiosity, why do you need the original ip? Are you not able to set it to whatever you would need?I want to as im trying to grab data from FOCAS2, however Tornos are using the embedded port for what ever propietary device theyve installed on the backend which I believe is the TISIS device... this has its own subnet which I just lost the IP to..Yeah, just edit the tool change macro to have M99 as the first line. Its often program 9001.And change it every time this specific job needs to be ran?Nice simple solution, Thanks.You can always put a block skip on the tool change line and activate the block skip function in the control.There wouldn't be a tool change in program. looking to stop tool change in MDI.Yes if you set these values in your G54,G55 whatever offset you would like to use and call that offset in your program as G54G91X0Y0Z0 you will return to these coordinatesThanks.I ran it as seen but the cutter did not return to those coordinates, it didn't move at all.Obviously I have a lot to learn but I don't understand how G54 G91 X0Y0Z0 would return the machine to the input coordinates. Shouldn't it be G54 G90 X0Y0Z0?Does G54 G90 G0 X0Y0 take you where you need to be?I think on those machines you have to zero out the absolutes manually. So the positive values are the distance to machine zero, because that's where the absolutes were last zeroed.It doesn't. It sends the cutter straight into the X limit.Yah sorry G90 I fat fingered my phoneI've setup on slightly older vtcs before with the same controls. You set your g50 coordinates by going to settings, then hit page down several times until g54, g55, etc show up. The thing you are probably doing wrong is entering these numbers with a decimal. If I want to set g54 x for example I would goto settings, page down and then cursor over g54 x, and then type -87254. These particular controllers will not take a decimal for setting g50s. I can talk you through this over the phone if you need, or can take a video of myself doing this on a slightly older machine if you need me to. This is not an intuitive interface. If you are used to newer machines you can figure this out in 10 minutes but they have a few odd quirks. Good luck.You aren't setting your g54, or g55 whatever on the correct screen on the off chance your slightly newer controller will take decimals on g50 values. You are setting the "operator" position. The operator position is a number, just for your reference. You can touch the left side of a block with an edge finder, set operator zero, and then touch the other side to find the middle. It is only for your reference. If you have a settings button, hit it and then hit page down several times. That is how you teach a g54 on this controller.A quick Google search says it's a pro 5. Never heard of that model though.Maybe pulling the back panel on the control (if possible) and getting some numbers on parts could help. I‚Äôve talked on the phone before with FANUC in New York. They‚Äôre really easy to work with and really know their stuff.Lol he gave it a "stern look." That fixed itIts the door switch. Check for chip buildup behind the lip on the left side of the door. We had the same issue, when the chip buildup there it holds pressure against the door and the switch causing it to alarm out upon release. Also check to make sure the switch is still aligned properly and there is play when the door is shutHere are the alarms.CNC:FS31i-PW0012 - User I/O Cross Check Error (DCS PMC)Cause: On the DCS PMC side, an error was detected by the I/O cross check function in user-defined safety-related DI/DO.Remedy: Check PMC side.CNC:FS31i-PW0013 - User I/O Cross Check Error (PMC)Cause: On the PMC side, an error was detected by the I/O cross check function in user-defined safety-related DI/DO.Remedy: Check PMC side.CNC:FS31i-SV1068 - Dual Check Safety AlarmCause: An alarm that turns off the MCC of the entire system occurred in the Dual Check Safety function.Remedy: Check the dual check safety function.nothing is coming back on EX1079.I think the reason you see varying heights out there is that the have the ability to add risers to raise up the column. A quick google search found RoboDrill risers for sale on ebay. So you may be able to adjust the height to your needs by adding or removing the riser.Methods Machine Tool in Sudbury, MA is the importer for Fanuc Robo-Drill machines. Maybe give them a call. Would be worth taking to them as they would your source for parts if you buy one.Also is there anything you can temporarily remove from the highest point to make it shorter? I shortened the Avey about 2" by removing the cast pulley cover.I don‚Äôt know anything about the Robodrill, but Detroit Machine Tool makes 2 VMCs that will probably fit.I have the TRX 550 and the entire shipping crate was 80‚Äùx80‚Äùx80‚ÄùThey just distribute AutomateCNC, and for their prices most people are probably better off getting a Haas. A TM-1P with all the bells and whistles is basically the same price.I had the same problem when I brought my Avey home. I solved it by cutting a notch in the lintel.Don't forget to allow for the rollers that will have to be under it as it goes through the doorway.Are you trying to put it through a standard garage door? If so you‚Äôre probably fine, may have to pull the z-axis motor or cable guide. There‚Äôs a couple people on Practical Machinist who have Robodrills in their garage, I‚Äôd suggest asking them.My Fadal went in a standard garage door doing the above, I double checked with a bunch of guys on PM before doing it and it was very easy.Yea, I guess it‚Äôs standard, 79‚Äù. More worried about the total travel height, don‚Äôt want to crash the head.Yep, happy to do it, if the head is narrower than the joists :)I know it is an old post, but for anyone looking to get robodrill, the height is fixed on them - the z axis servo is highest point and it does not move. The spindle motor goes up/down, but never above z axis servo. The differences you are seeing are due to the options fanuc offer. There are fully enclosed versions, which are higher as well as three height options depending on z axis travel. You just need to look at the dimensions listed in the spec sheet on manuals. Ours was bang on to the manual height.What machine is it?good enough for what?are you building this machine? or asking what some existing machine can do?I am just setting up this new vmc. Asking about any similar machine‚Äôs performances or any work experiences:DPictures make it look okay. Seems to be a standard VMC spindle.Cool, thanksIt is quoted as VMC 1270. Let me upload some pictures for you :)VMC 1270R[#502125400] > R[#5021*25.4]R[#502225400]> *R[#5022**25.4]Machine needs a metric value to set secondary positions. If your in metric then remove the "*25.4"Data overflow is probebly from the variable# being out of range.P1 / P2 is X and Z positions.Did you get the O9020 program from an older machine?Someone else suggested usingL50 instead of L51 or changing the M30 to an M99 i tried both combinations .same alarmSo my program is writing N1241 with X and Z?You are in the 3rt pass cutter condition, use the 0 or 1"active edm 3" is just a description for what edm presets I am using. not an actual cutting condition setting. I believe what you're referring to is "cutting mode" which is @ "1"If you‚Äôd are using fanuc cutting technology and register the cutting condition it‚Äôs going to be the 0 preset. Active EDM. - 0 (zero)I always forget about the AI Setting on the control. I was using preset conditions from the manual, not control side.As I said... new to this EDM life... would much rather get back to flinging chips.I appreciate the helpThey‚Äôre all different. You may want to go find someone who can help that knows this machine. As a former CNC programmer, I would stay out of the parameters until you are certain. FANUC is not the same. Depends on the machine.As others have said every machine is different, but I bet if you put it in zero return and slowly jog toward the limit switch it'll take care of the issue for you.SLOWLY!Do you know how many times I‚Äôve had operators tell me ‚ÄúI don‚Äôt know what happened.‚Äù Or, I didn‚Äôt touch the parameters, I only made an offset change.Me: looks in program. . . well, how did this get changed then?Op: I don‚Äôt know.Me: rolling my eyes, saying ummm hmmm.Batteries died? Like all the way died?Let that happen exactly once on a machine with an OT control. Had to reenter ever last single parameter into the machine.FANUC‚Äôs are all not the same. Check your manual.Where are you located? I can fix but no way gonna even try over text. If you are in Houston metro I'll help ya out. Otherwise any local tech can fix this.Thanks for the offer but I am in new-brunswick Canada. But yeah we are probably gonna have to look for a tech as it seems like pretty complicated stuffMost likely it‚Äôs machine tool builder specific.The hell is a Miyano?On our Kitamura mills; I am pretty sure we just had to be in ZRN(Zero Return) and use the "+" or "-" pushbuttons to have it send the axis to home position and it resets itself and clears the alarm.If I recall, the alarm is just that the encoders lost their position (they are absolute and as long as they have power either from the machine being on or from the batteries, they know their position); otherwise the position is automatically reset/restored when the machine homes itself off the limit switches.Makes sense, but I can't get the axis moving. As far as I know I could be doing something wrong or there could be another problem preventing them from moving.Update: Thanks everyone for the help, I ended up being able to move the axis far enough to do a zero return by pressing machine end release (the procedure in the manual for when the machine is past its limits). The parameter 0022 ended up updating itself and it removed the alarms for the x and z axis. I still have the sub spindle that I was not able to do a zero return on yet but I think I'll be able to figure it out soon enough. Turns out I was overthinking the issue like I usually do hahaDoes it have a maintenance mode? Try flipping the breakers on the motor if you can.So you're trying to start the program from an input? You can do this several ways. One is to assign a macro to input that calls your program. You could setup the binary pns system or assign your tp program to run in auto from the program select menu.You'd want to configure your program start type to "other" for that to work.https://www.onerobotics.com/posts/2016/starting-fanuc-robots-in-auto/Can you elaborate on what functionality is breaking between updates? What kinds of things are you doing with the force transducer? Mostly e-series robots or the CB series?The wrist camera is a little over $5400, I'm assuming you're buying them from a reseller who's buying it from a distributor. I completely agree with the Robotiq software. It's mostly bloatware and buggy. They are having a hard time keeping up wth UR's software updates.I've had fairly good experiences with the wrist camera EXCEPT for the cable, it's a common failure point and expensive to replace. The 1mm precision has been fine for us - mostly pick and place applications.The grippers have been mostly ok since the switch to the tool port comms on the e-series. I did have one lose it's ID# in a dual gripper app. but that was replaced.We did have a HUGE issue with using a wrist camera, gripper, and force co-pilot that caused major software slow downs and bugs in Polyscope. It was unusuable and took Robotiq a long time to fix.Robotiq has a great cobot buyers guide. I read it, its pretty nice. https://blog.robotiq.com/collaborative-robot-ebook?_ga=2.167186427.45260647.1523891909-1808103887.1516022592I hate that company.They're 80% of the reason the UR platform is so bad.None of their stuff works as advertised, and the way they compile code in the background is a gigantic shitshow.It's a joke that I've had to write as much one off code as I have to do things that their paid force copilot is supposed to do. In the end, I have fewer hours into writing my own code for force stuff than trying to deal with the minefield that is their co-pilot.They've also released code that they knew was broken, but released anyways.I straight up wouldn't trust a book of theirs that said sex was good.I'm more willing to risk teething problems from a company that has such a long track record of releasing awesome products.The robotiq grippers are mostly an issue with software. They sometimes fail to initialize when a program starts. This means that unless you're paying close attention, a gripper fails to open and it crashes into parts. It doesn't always feed back the true gripper state consistently.There are other software issues as well. They have been out for a few years now, and they are STILL releasing software updates for them because they don't always work right. The updates sometimes break old functionality.There is also planar alignment issues in the gear racks. Unless the gripper is fully open under tension or fully closed under tension, the fingers are sloppy by several thou which makes precise picks tough if you're handling very small parts.(if the camera system can't do this sort of calibration then yeah, it's expensive junk.)The camera system can't do those sorts of compensations.They didn't even match the onboard LED lighting to the camera very well, so it's basically useless in the outer 50% of its view because of the intense luminosity differences between the center of the view and the edges.If you use "auto" mode for everything in the vision settings, it works alright, but then it takes several seconds to identify each part and your cycle times skyrocket.Did you check all axle decoder signals? Could be a position mismatch that blocksI didn‚Äôt look at that. I just cycled power and then it went back home. It was weirdclose cough sophisticated salt automatic smell skirt numerous insurance society this message was mass deleted/edited with redact.devI work for a wafer handling automation company. For now these robots are just a hobby. Our farm/ranch thing has been in our family for 50 years and 5 years ago I moved back from Philadelphia to Dallas to set up a machine/fab shop in the old barn. This project only cost about $1500 robot and steppers included. The robot itself was bought for $150 at auction with no controller. After fiddling around with stmbl to little avail I realized I could butcher the original servos and retool them into motor adapters. For stmbl you have to know a whole lot about servo theory and just about be a certified linux dev. My approach shifted the project from EE and theory heavy to a machining heavy approach though the machining operations were not complex. Just light milling and lathe work.ROBOT RANCH sounds like an opportunity for a sci-fi comedyAny advice on getting my hands on a small to mid scale robotic arm, something around person scale? Been scanning eBay for a while and haven‚Äôt found anything in the price range you mentioned elsewhere. I‚Äôve got a pretty strong EE/ME/Machining/embedded background but no Linux background from work so your arduino and hacked together approach sounds about right for me but trying not to spend 5k+.Watch hgr industrial surplus. They are constantly rotating their stock and the small to medium size robots will eventually work their way down in price. I bought some motomen for $250 a piece from there.eBay is no good as everyone has this idea ‚ÄúI got me a fancy robot I‚Äôm gonna sell it for thousands and retire early‚Äù not the case. Robots get posted on there and sit for years and years because nobody selling those robots knows that these robots loose their monetary value really really fast.You could go for Chris anins Open source ar4 but it's a desktop robot, limits about 3-5 pounds if you make it out of aluminum or 3d print your own. A bit above 2k, you could also technically use brushless motors with the same specs but with the drivers, harmonic drive by themselves already runs you alot more when you can get a refurbished kuka or put a down payment on a ABB as they only require maintenance every 10k hours or so.Just waiting for it to freak out and go through the wall.Luckily with the steppers, I can set the current setting at weak enough for me to stop the robot by hand or strong enough to pick me up. A full power crash just stops the robot, luckily fanuc over engineered the frame as it‚Äôs designed to operate 24hrs a day 7 days a week 365 days a year for several years with limited downtime. It‚Äôs a structural beast with a 5/8 inch thick cast aluminium frame and some beast helical gears.Beating a dead horse(robot)I tried finding the dang thing everywhere but no luckthe only place I found them was here:https://www.pcbway.com/project/shareproject/stmbl_servo_motor_drive.htmlHowever that one says stmbl 4.3 ? how the github says 4.1... did anyone here get them from pcbway?As I'm currently building a new controller for another old industrial robot, I have one big question:Where the hell did you get stmbls from? All I ever found is the github page, but it is not really helpful in this regard.The pcbs have to be assembled by a board house or by hand. I did one by hand it was a real bear about 400 smd parts. Also the main igbt module is obselete and only available from Rochester electronics, also I think there is a shortage of the stm32s right now. They‚Äôre difficult to use but if you‚Äôre very determined and down for a lot of reverse engineering they can run most anything in their KW range. I just got tired of them and wanted to make my robot work And move on with my life. What kind of robot do you have, I love old robots.Nice! I actually just acquired one of these FANUC Paint arms and I am looking to repurpose it as well (kinda). The model I have is the P-250iA and has a max payload of 10kg and I am looking to increase that payload to about 40kg. Any ideas/suggestions/tips on how to go about doing that?Does your robot have a controller or you‚Äôre looking to retrofit. Those arms with their controller will lift 2-3 times their payload but at a lower speed. The controller knows if you‚Äôre overloading it. So if you‚Äôre going slow it‚Äôs no problem, but once you pick up speed it will sense those inertial forces and fault. This robot with these steppers is very powerful, it can lift me no problem but as I try to move faster the steppers will skip. In regards to how to increase payload. Move slow or retrofit with new motors then if you decide to retrofit know it‚Äôs a lot of work. Once you‚Äôve decided how much work you want to do you can decide how much you want to spend. Steppers are cheap and easy but this ‚Äúretrofit‚Äù with the steppers is noisy and crude. The robot works but it has nowhere near its original speed and accuracy. If you choose to retrofit with servos it will cost you more but you can really hot rod it. You‚Äôre only payload limit at that point is how much the frame can take. For a controller you can program raw with a microcontroller or you can buy a 6 axis diy controller from Newker cnc or SZGH auto. I have the A8 controller from SZGH. It supports ethercat and step direction drives. It‚Äôs pretty wicked.Even the small Fanuc robot arms cost... well a lot.Let me put it this way, a Fanuc LR Mate with R-J2 Controller costs about 3500 USD in a Used Non-working state, and it's from the late 1980s IIRC.The closest you could get would be a copy of Fanucs RoboGuide software. You would need to contact them about it, but I believe it starts at 1000 USD.Your best hope would be to contact Fanuc directly and see about signing up for some of their classes or find a factory near you with a training robot and beg them to use it (YMMV).For a freebie interactive online course on basic robotics, check out the universal robotics website. Fanuc robots are well built but quite strange to program. (I've done ABB, Kuka, denso, Staubli, and Fanuc programming)Fanuc is also super into DLC, you want a password feature to protect the robot code? 1000$ Ethernet-ip driver for the port that's already in the machine? $2800.Check out abb's robot studio, it's got a 30 day trial with full simulator capabilities.Look for a certificate class at a community college. I did this and have been programming fanucs for about a year now, way cheaper than buying a robot.Are you specifically interested in learning Fanuc stuff (software etc.) or just robots like it in general? (eg non-Fanuc/Generic software)If you want the CNC machines, try the Fanuc Academic NCGuide software. It will cost you a bit but you will essentially gain experience of programming a virtual machine. They also do an educational robotics package but you need the budget of a university for that.Fann-ikIs there not a lot of free resources? Have you looked at an US support sites?What current robot are you looking at using?What do you mean by ASCII option? Is this an emulator like roboguide?Thank you for the input by the way!Be prepared. FANUC‚Äôs offline programmer ROBOGUIDE is $10,000/year and I personally have not been able to get it to work properly without having to reinstall the whole thing each day that I wish to make a new robot setup. (Got a 30 day free trial and when I asked support about my issues they said that it was a common problem with no known solution).Buying a used classical robot is easy. The more complicated task is to identify used collaborative robots. The Fanuc CRX-10iA was introduced in december 2019 which is 7 months ago. So it is available in the second hand version too. What is not possible is to find used biped robots from Fanuc, because they are not sold in the brand new version, therefor it is not possible to get a discount for a model which has 1000 operational hours in the past.Be prepared for no customer support. If you did not purchase the product from them (with proof of purchase and tons of money), they pretty much wont even talk to you. In my Masters program we acquired a Fanuc 6-axis manipulator from a third party and this was our experience. They essentially told us they don't offer support to non-customers. Ended up getting a Denso instead.we have lots of used Fanuc products.Broadly speaking, robot arms are a commodity and you get what you pay for. It‚Äôs possible the Annin does what you need but the risk of something failing is much higher, and it will likely be slower. That said, you‚Äôre missing a giant chunk of the market between those two price points. Go look up Universal Robotics and see if any of those fit the bill - they‚Äôre very straightforward to set up and program. That's a hell of a heavy sphere. Denser than lead.Sounds like OP has balls made of tungsten alloy.End of arm tool will need the biggest bit of attentionThat's an awkward, heavy payloadLead would be 1.7 lbs. Gold 2.79 lbs.maybe only the part that is to be gripped is a sphere.Isn't a 2.5" steel ball about two pounds?In general you get what you pay for with industrial robots - the biggest factor you are paying for is uptime/reliabilityIf you need it to pick up those balls, 10 times a minute, for the next 7 years, and a dropped ball costs you 20k, you want the Fanuc.If your need is maybe not so strenuous, then you can probably get away with a less reliable unit. I suggest universal - they're an OK compromise.Alternatively, a used fanuc/abb/yaskawa arm might be a good option, if you don't have such stringent reliability and life requirements.Happy to discuss and make recswhat kind of robot do you need? anthropomorphic, scara, collaborative, carthesian, ...?Any speed requirement? what's the physical distance your spheres need to be moved? With what accuracy?How heavy are your spheres?Look at the 6 DOF xarm 6 from ufactorythe fanuc will perform 24/7 for the entirety of the installed life so long as it is programmed correctly. The annin will need support and service almost daily if not more, and it will wear out in less than a few years, in all likelyhood.You get what you pay forWhat safety standards does the Annin one conform to? What type of environment is it working on? Will people be in close contact with the robot? Can it run fast enough or place precisely enough for your application?Also, is the Annin you found for $2k a functional robot or just a parts kit?You need a vaccum cleaner on a zip line. Pick up spheres with suction. It would be like the claw game at the arcade. You can use remote desktop to Indian contractors with joysticks for the 'AI powered' control system.I thought those Fanuc robot where all 480v 3 phaseThey do have 120v powered ones, especially their cobots. Smaller ones can be run off of a drop cord.I know Chris Annin‚Äôs work. They‚Äôre great arms. He‚Äôs put so much work in to them.Have you checked out standard botshttps://standardbots.comNumber 1, do you know how to program a Fanuc arm? 2nd is buying a 60k machine a reasonable solution to not want to lift 2 lbs of material. If you answered no to either of these questions, you now have your answerI taught myself how to use a 300i with YouTube videos online. I‚Äôm not sure if the pendant is the same but I used links like this one: https://youtu.be/c-PRxCZF4a8Your job should be training you on how to use it's equipment/software's. I worked for a Fanuc integrator for 2 years. First day, I was in their training class learning the teach pendant. Likewise my second job, I went through their robot training and then took a Solidworks course (with an outside company). A good sign of a company is that they want to invest in you and train you properly.Not the case with this company.What a goddam shame to leave that machinery out to the elements.Poor thing. :(Gorgeous, I will adopt youWow. What country is this?S-420iF. Those are early 90‚Äôs I believe.It is BumblebeeS420, source: industrial robotics guru who works at FRNA.Fun fact: The link arm behind J2, it doesn't exist on most newer models, but it still does in the software as J2/J3 interaction. It's representing the angles of the parallelogram created.This is why, when mastering these robots, it's necessary to master J2 and J3 at the same time.We have a FANUC in our shop, we bought it a while back but never got it fully running. It‚Äôs somewhat similar to the one in that picture.Seriously?? Robots on backyards looking for loving engineering-eyes to take care of them.. üòçüòçYou can try asking r/plc, I think that group does a lot more work with industrial robot arms. This group typically does not use the oem software tools.Awesome thank you for the advice !A lot of this documentation is provided on the fanuc crc website, most people with these documents most likely will not share them openly on the internet because it violates the crc terms of service and I would prefer to keep access.Sign up for a subscription to the crc and just download everything you want, it will also give you access to phone support which is typically amazing.Excellent! Thank you for the tip, much appreciatedi have no experience with fanuc's new programming interface, but IMO UR's is better.mechanically, fanuc may have an edge over UR. but generally, UR's mechanics has improved over the last years, so i think you should be fine.i generally like UR for simple tasks. and they have very good documentation, which is not the case with fanuc. so i wouldn't worry too much about the switch.I‚Äôm working with an UR for about a year now in a couple of university project. It‚Äôs a capable platform and the forum is really helpful.Fanuc has application engineers that will probably help you for free if you call or email themJudging from the pictures of the controller I found online, it seems very similar to the teaching pendant that we have for our FANUC robot in our laboratory. Basically you have four modes of operating the robot in manual mode using the pendant:JointVGRFToolUserWith each of these modes, you use the six blue key pairs to move the robot, but you move different things each time.When in the 'Joint' mode, each of the pairs is moving one of the six joints, independenty.In the 'VGRF' mode, you control the end-effector along the axes of the fixed frame of the robot.In the 'Tool' mode, you control the end-effector along the axes of a frame located at the end-effector itself.In the 'User' mode, you control the end-effector according to a User defined coordinate frame.You can switch between modes by pressing the 'coord' button.I am not sure about all the names of the buttons and modes, as I am basically not in front of the robot right now.Hope this helps!Very much appreciated. I‚Äôve found how to open and close my tooling, but I‚Äôm curious to start experimenting with these different modes. Thanks!Make sure to use COORD to change to tool mode. Do you know how to teach a point in space? got to DATA-TYPE-Position Registers. You can over write a position register by using DISP to highlight the position register window (if you're using a multiple window view). Then select the position register you want to over write, then hit deadman switch+shift+F3(record) and this position will be saved to this register. After, you can use F2 instead of F3 to return to that point. Be careful not to accidentally hit F3 if you want to move and always keep eyes on the tool as it moves. Also, try to learn about setting user frames- you can set them through code on the teach pendant pretty easily once you figure it out.More info at:https://github.com/stephanbogner/Fanuc-TeachPendant-Basics/blob/master/README.mdBest bet is to look for a manual. Fanuc can probably provide is directly.Sometimes the tool is in group 2 instead of group 1. Make sure that your coordinates (COORD) is set to group 2.ABB has a lot of 3d printing stuff published. The scientist doing it was biao Zhang and JJ Wang. Check their papersdrip feed sounds like an option for fanuc cnc controllers. i only encountered it on an older BWO model where it was an option to run large programs with the tradeoff of not being able to do any branching in the program. if fanuc robots support this, it's probably a paid option.in your case, you may try to split the job into manageable pieces for the controller and to then call them one after the other from a main program.another option would be to write (or look for) a karel program that will allow you to stream the code line by line from a pc through a socket (if you have that option installed). [edit] this is how ROS 1 handled robot control for fanuc, albeit it only supported joint movements [/edit]do you have an old (+10 to 15 years) robot controller?also, you may want to talk to fanuc about the issue. they may be able to offer help.Definitely interested in updates on this!Do you have a Fanuc controller or are you rolling your own? I picked up a Staubli arm in an auction that appears to be in good shape, but no controller. Thinking of turning that into a project, while I'm nice and ignorant of just how much work it'll be.I do have the fanuc teach pendant with a enabling device but im planning on replacing the teach pendant by an app im working on that will be installed on a 10inch android tabletTried infusing some heat before moving?Nope... I didnt know it was in THAT bad of stateWhat happened to it? Was it a serious crash?Actually nothing happened... thats the problem. Its my university's robot arm and it just sat there doing nothing for 10 years so the grease became solid and things started to break when i tried making it move the first time.nice! keep us updated!!Will do!But.... But..... Is so CLEAN! what was it doing that it broke???It is indeed very clean because it was never used which is why it broke. It's my university robot arm and for 10 years it sat there doing nothing so the grease became solid and when i tried to move jt, things brokeYikes. Motor will the the toughest part to deal with, depends on if they used a standard servo motor with a gearbox or if they built the motor coil and rotor into the joint arm. The latter will be a fun project, but not an easy one. Best bet would be to find a used busted robot of the same type on eBay and strip it for parts. The price of these robots falls off a absolute cliff when they are usedWell I found many motors on ebay for sale from 600$ to 1300$. Gearboxes are integrated in the arm itselfWhen are you going to be done with it?Honestly no idea... i work on it in my free time. Plus, makong requests for the parts that need to be replaced can take a lonnnnng time. Ill keep you guys updated... also, i have another one to repair!Does the 200iB robotic arm use D cell batteries?This would have been cool 10 years ago. We have technology that's far superior to this right now. Who is this for?https://www.reddit.com/r/robotics/comments/15uzkj7/comment/jx6lkbl/?utm_source=share&utm_medium=web2x&context=3Picking up a golf ball with vision is much easier than most of the vision applications we see in the field where I work. Still cool to see but I agree with someone above that said this is a bit outdated. What trade show is this?On the right it says 'io-link compatible products', so I guess they want to show how they can connect the camera, robot, vacuum etc via io-link and not show a fancy bin picking demo.FANUC has been operating a lights-out factory since 2001. Not many of those around, surprising given there were a few that started way back in the 1980s. I had expected them to be very common by now.Cool demo. I never understand why they don't just speed things up to make the demo have more of an impact or lend some signaling of industry applicability. just double the delta allowances, no?It's probably due to safety reasons. The robot will need to be able to stop in a specific amount of time so it isn't moving by the time someone can touch it. The safety scanner is allowing people to come quite close, so it needs to move slower to be able to stop in time.If they speed up the motion, it will make the vision look slow. 3DV can take a few secondsGoddamYou could try asking in RobotforumYou can use any robot as a welding robot, with special welding series optimized in terms of mechanics for welding. It is more convenient to feed wire, the payload capacity is optimized for cost reduction, and there are several other differences.What specifically do you want to weld?Also, you need the software for welding installed on the robot.I believe it‚Äôs mostly software, you could probably get by with the m10 but it won‚Äôt have the fancy weld profiles like automatically do the nice loops and stuff. You would need to just weld straight lines or manually program the waves. I would contact Fanuc and see if you could get welding software options for it.In China, there are many small businesses using cheap Chinese-made robotic arms. However, large private companies generally use robotic arms from KUKA, FANUC, etc. The Chinese government is currently promoting the use of Chinese-made industrial robots by state-owned companies.Not sure about welding, a lot depends on the technology you use on site. Cheap robots may give you problems with repeatability or with the source control. Some advanced welding procedures may not be available at all.pick and place should not be an issue, you can compensate with a socket design for positioning.Major part of a cost of a robot are gearboxes, fanuc can last 10 years and keep the repeatability within spec, the cheap ones? I‚Äôm not sure.At the same time China is implementing 5x more robots in a year then the whole world combined, the economy of scale should drive the price down.Btw, kuka is a Chinese brand now.Anyway, make sure the robot is allowed to be used in your country first before you buy any and make sure the service is available locally.Gear boxes in industrial robots last significantly longer than 10 years.And KUKA is Chinese in majority ownership, but not in engineering or manufacturing (other than their newer AMRs)It's like several things from China. I've had some top quality products that came from China. I've also had absolute junk. There are some new Chinese brands that are really making headway. Generally speaking; you get what you pay for.Would it be possible to share brand and model specs (or just their website if its confidential)? Thank you in advance.What tasks do you use them for?Would recommend you stick with one of the big three or a refurbished fanuc. Even if mechanically the units are close(they aren't), the software and additional tools that the big brands offer are so much better.Full scope on the J6 there although i wouldn't be able to confirm if that's sufficient weight to overcome the inertia nor how the assigned torque would impact on vulnerable parts. Speed looks good though. And 9.4% load-bearing must count for something.Whether they're good or not isn't the question you should be asking.Whether you can get parts for them, or support, in a timely fashion, is the question one should be concerned with.You may save money up front, but when your money making machine is down for a month, what did you really save?Source: 25 years installing, maintaining and servicing these things, including 2 years at FRNA.If you buy 100, 5 will be good, 20 will do OK, the rest will make you broke.What type of OS do they useI wouldn‚Äôt know how to describe it. But it basically has controls for recording XYZ positions and some presets for tasks like pick and place, and weld.Isn't Yaskawa similarly priced?Not for new ones. In India, they start at around $11,000.Not all of them are cheap, some factories also offer expensive arms, so would you like to buy cheap or expensive depends on how you wanna to deploy it and your budget.FANUCs are easier to use and have more options.Find the dvds that came with the fanuc. Those are the best available copies of the manual. Robot forums. Com is a decent resource for questions.Also fanuc is the king of paid dlc optionsI've never gotten DVDs with a fanuc. They've been stiffing me!Fanucs are nice. Not sure what you want to know, though.Are you wanting training or what?Im in training right now at work just wondered if anyone had any advice on either. Right now it's a little overwhelmingIm learning a lot about fanuc. I just started learning how to teach and create job.I work as a Robotics Engineer at GM, they have mostly Fanuc Robots. I wonder if you've had some industrial experience before?. You can PM for any info.I actually work at honda and was recently promoted to equipment staff. And basically have to keep the robots running as smoothly as possible during production. Im getting a lot of training the next few weeks. It's a little tough starting out but im starting to get comfortable with it.Not in 1000 years would I put a SBC running ROS and python on a manufacturing line.A PLC is an overgrown SBC with more hardware robustness verification, and a dated software interface for less technical people on the floor, so there's no real issues with that. Of course you wont chuck a raspberry pi on there, you'd develop some hardware that uses an SBC SoC internally and advertise it as industrial ready after vibration/temperature/etc testing.Python is just an easy language to teach and experiment with, serious robotics companies wouldn't use that for anything but some scripting. It'd be C++. The degree isn't there to teach you software engineering, it's there to teach you robotics which is mechanical/electrical engineering maths and physics.You might not use ROS but I definitely know companies making manufacturing robot systems using ROS that sell to factories, who aren't aware that it's using ROS, they just use the custom user interface supplied to them.There is a running question of how okay ROS is to use in an industrial context. Plenty of companies with many customers do use ROS fine in critical-ish contexts. Lots of companies also don't, they make their own middleware around off the shelf protocols.I think the real problem is that you're trying to learn robotics as an automation engineer and finding out being a robotics engineer is a separate job.Automation engineering doesn't really involve doing any robotics, you're a robot end user not a robotics engineer, and you probably won't benefit from a degree in robotics.Python is just an easy language to teach and experiment with, serious robotics companies wouldn't use that for anything but some scripting.No. I built four ROS-based robotic products in the last decade (actively used in commercial applications) and ALL had a significant part of python code in it.In most systems, you use python for higher level tasks that are not real time and more C++ the closer you get to the hardware.There is nothing wrong with python. How much experience do you have with robots?I think you're making a lot of sense and proving my hunch that I might be barking up the wrong tree with this program. I'm the end user and I wanna stay the end user. I don't wanna be the one design the robot I wanna design the machine to accomplish the task. The machine might have a robot in it. One thing I'm a bit fed up with my degree is I'm on class 2 and all it's been is software stuff. No mechanical or electrical. Also I think you're definition of a PLC is a bit of a underestimation lol. Thank you for the detailed responseI think you have a bit of a wrong general picture. ROS is in most robots not used as the real-time safety-critical Soft-PLC that runs the whole machine and is certified. (even though with the ROS 2 version from Apex.Ai, this would be possible!).You have your standard PLC and automation hardware that takes care of safety.But next to the PLC you have an industrial PC that runs Ubuntu and a version of ROS and takes care of the higher logic and complex planning. You can't run 3d perception on a PLC, so if you want to do robotics (instead of automation), you need to use different tools.For a bin picking application, you add an IPC with a nice big GPU, use ROS to stream images from a camera and use whatever Algorithm you want to get your grasping poses. For path planning, you can MoveIt without having to care about the details. (and the high level stuff is most often in python...)After planning, you pass the path to your PLC (or Fanuc Motion Controller) and let it execute it. (if you want, you can also run a control loop in ROS, but with a real time kernel, ....)If an emergency stop is pressed, your PLC (not ROS!) will take care of safety.So in general: you build a machine with your standard components and add a huge brain with ROS so that you have a robot.There's a whole website for thishttps://rosindustrial.org/I worked for a company that built facilities and put our robots in them. We would also sell those robots to customers.In our facilities, those robots ran on gaming PCs ordered off Amazon because that was the cheapest way to get capable machines with an appropriate graphics card at the time. The code uses C++, not Python, and if the robot goes down it's a hit to revenue, but does not bring the whole facility down. Someone checks on robots going down, but in reality these systems have very high uptime.The facility control code is not using ROS, but has a similar architecture. Written in Rust and, again, running on a gaming PC from Amazon. There is nothing in the facility that has higher uptime, though some things are tied.All that is to say: ROS is not inherently unreliable. The inter-process communication layer is quite robust and I've never narrowed a bug down to it. You can write nodes to be robust to failures of other nodes. And you can write nodes which stand other nodes back up when they go down. None of this is encouraged if you read through ROS example code and you certainly aren't going to see this in academia. You have to work on a serious systems software company to learn how to do this effectively.The inter-process communication layer is quite robust and I've never narrowed a bug down to it.I assume you didn't yet try ROS 2 (especially with WIFI)...What feature is missing from python that you need for industrial programming? Python is the most popular language in the world and linux is the most popular OS‚Ä¶ROS is esoteric though and feels like a mess to me.Personally I think python is great as a tool. If I need automate some process that's gonna take me 8 hours to do manually I can write a python script and save myself 7 hours. If I have a linear programming problem I can use Pulp and have python do that all for me. If I need to do a bunch of file operations pythons great for thatThe thing I hate about python is trying to make a UI. That's also one thing I love about winforms. All the software I write typically needs a UI, which is why I love using .NET. on a Winforms appYou pose a good question, one I cannot truly answer.I would expect any industrial robot is already locked down to its specific manufacturer software/specifications.I think you‚Äôre confusing (autonomous) robotics with automation. Automation as used in factories is repetitive and has different requirements of robustness and speed vs autonomous robots which have a lot more moving and changing parts where ROS helps a lotA good follow-up question: For those who aren't using ROS, what are you using instead, and why?Hello, I worked at a robotics lab where we used C#, Cognex, etc. and some projects did use ROS.I got to work with a great mentor, and he actually spoke about applying ROS in manufacturing here for aerospace: https://www.youtube.com/watch?v=JmG4AZ3W6pQThank you this is a great thread! I‚Äôve been looking for a solid course (ideally with test and certification) for my teen son, and I‚Äôve seen ROS mentioned a lot-but not convinced that ROS is used much in a commercial setting given proprietary software. For what you describe as an end user, are there any free/open/paid courses that cover what you do? I think it‚Äôs a great bird‚Äôs eye view on the application side, and if there‚Äôs interest to get into the robotics dev side then that‚Äôs another avenue to investigate.Perhaps the companies themselves offer something? ABB? Kuka? Fanuc?after going through this class as someone who works in industry not in 1000 years would I deploy anything with ROS into a production environment. save your time and learn something more usefulYou need to get it to stop dropping the box before it gets to the pile.Why does it only drop first and second box? The third and fourth pick and place, the vacuum is strong enough for itTypical...a bunch of robotics engineers fixing a vacuum. Story of my life.I'm not a robotic engineer. I'm just the production lead trying to help the techs solve the issueTo actually troubleshoot this we would need waaaaay more info- is this a new setup, what have you tested, when did it start, does it occur every time, can you access the internals/view IO's anywhere, based on this clip alone it could be a million thingsNot a new setup, have tested the pressure switch, it reads about 28-29 kpa when the vacuum turns on. Problem is that it shuts off as soon as the robot goes all the way up. Only the first and second position box falls off, the third and fourth does not.Can we get your salary for the day if we figure it out ? :)I bet the vacuum hose gets constricted at certain angles/heights.Looks like you are missing a sponge on one section. The vacuum is not strong enough as it gets out between gaps.Monitor digital output controlling the vacuum just to make sure it's stays on the whole travelAny vacuum detection? Does it give a value? Does it happen randomly?Send me a test cell setup and I will debug it for you.Tape restricting airflow?Also good lord why is that monster of a machine moving tiny cardboard boxes (obviously not your call, just seems like overkill)It‚Äôs all about reach and payload. Unless there was a big budget. In witch case they should have put some cool lights on it.Brilliant engineeringI don‚Äôt think it‚Äôs the vacuum. I think the problem is you move too quickly to the right. Although this might have been fine at lower levels because the arm would have moved down a bit to re-secure the right side of the package, in this instance you can clearly see the package start to slip once the motion to the right beginsI thought that was the issue as well, I slowed the speed down to 40% from 80 but didn't solve the issueThis reminds me of problem i had with our abb robut. It reads ahead in the program and was skipping fine points.It would read the release before it arrived. If you cant program it, i dont think there is much you can do.Looks like a timing issueBy coordinates do you mean the joint pose or the Cartesian coordinates? If you're dealing with joint poses you'll have to deal with a whole new set of kinematic/inverse kinematic functions. Other than that the communication protocol including health and exception statuses will be different. It isn't a huge pain, though. It took about 2 weeks for me to adapt our system from UR only to work with Yaskawa arms. Just make sure to take safety precautions when dealing with industrial arms!I guess it depends on how complex your software setup is and what you want to achieve. For the past year now I've been working on making drivers for different robots (fanuc, kuka, abb, some UR) and each one poses different challenges depending on what you want to do. Fanuc uses quite ancient software (afaik) and you basically use bare sockets for communication, so you have to implement some abstraction layer in *ugly* karel language. ABB on the other end of the spectrum has "RWS" interface based on HTTP requests, which is really nice to use, but is also quite slow (but also has "EGM" for "real-time" control). I don't remember Kuka that well now, I think there was good interface for "normal" control, but in our case we needed "real-time" control of joints from a PC and there wasn't really a package for it (or there was, but wasn't really supported).Our company wanted to know exactly what you want and it ended up as a task for two interns (including me) for three months, to research how to control three different robots. In short, depending on your latency/parallel execution/real-time requirements it can be either an easy task for an intern, or a journey for a few months with few mid-level developers (as it is in our case). Outside of basic functionality, each robot will probably have some strange behavior(s) on higher abstraction level that you didn't account for and it will take a week or a month to solve.Also, you can try "renting" the robot for a short period of time, like a month. We did this in our company and it costed way less, while allowing to test the robot.Thanks I didn't realize renting was an option. and good to know that it could be a longer projectThis is what ready robotic's sdk is all about. Code once, and swap arms as necessary. Check it out. They even have free tutorials to help you hit the ground running.Thanks I'll check it outIdeally you should only be sending joint torque commands to the robot at 1 kHz. Your software stack should implement the joint/task space controllers to compute these torques. The Franka Panda (via FCI) and Kuka (via FRI) robots can support the 1 kHz rate. If you don't have the technical expertise to write the software stack, then you will need to defer to the specific APIs as the other comments have explained.Well, lots of robots do. The issue is backdrivability: some gearheads are very efficient and allow you to turn the output side by hand, but worm drives can only be driven at the input side.In larger industrial robots, just enough current is run through the servo to keep it in position. If you fight it, it will increase amperage to hold position. When power is cut from these robots, brakes engage to hold position. On these machines, you can generally power just the brakes with some custom cabling, but when you power them back up, they are going to be upset as the encoder positions don't match with what it expected.I just made a custom brake box for fanuc 6-axis robots so I can backup what you are saying here.When the robot is in 'automatic' or in manual with a deadman pulled in on the teach pendant, the servo motors are what hold the robot in position. Any other time, there is not any current being applied to the brake so the brake is what holds it in position. One could think of the robots brake much like air brakes on a big truck. Just like air pressure has to be applied to release the brakes on the truck, current has to be applied to release the brake on a robot.I have seen and repaired robot with failing brakes. As the brakes wear out, the robot will droop some. So long as mastering hasn't been lost, next time the brakes are released, the servo will travel back to position.Disclaimer: I've worked with fanuc almost exclusively in my career. Other manufacturers might have a slightly different setup. Also, I'm not a line builder, integrator, contractor, etc...more an end user. During setup and commissioning there is a whole other set of variables and precautions to be mindful of.Some robots, like NASA's Robonaut2, have electromagnetic brakes in the joints that are released when power is applied to them. If system power is lost or purposefully cut, brakes engage, and the robot stays put.Like this?https://www.youtube.com/watch?v=NeFkrwagYfc&t=35sThe actuators typically have high gearing (depends on the convention but in this case let's set it up to high torque, low speed) so the inertia perceived from the end effector is squared. So even if no power is connected to the motor the slightest mechanical resistance is perceived very high at the end effector.You can see that this is true even if the DC motor is not connected to anything but with just gears and links.For electrical breaking when the system is turned off: the magnets in the motors will offer some resistance to prevent the rotor for changing its position (the magnetic flux changes when the rotor rotates since the area of the rotor changes. in essence, magnetic flux doesn't like to be change hence the resistance). This is only the case when the dc motors are wired to do electrical braking when power is turned off.edit: clarified with/without electrical brakeThere are four states to an electric motor. Forward (+-), reverse (-+), stop (++) and neutral. Neutral is no current. If motors stopped at neutral they would droop. Instead they stop. Plus they track their own electric motor movement and can detect if any change in position has occurred.RobocialisAlso, it is worth mentioning that a DC motor as described in the op has different properties than that of a servo motor.To lazy right now to link it, but a YouTube search "DC vs Servo Motor" will show some interesting things.RC cars use both motors, DC motor for drive, servos for steering.It is not generally true that a DC motor will provide no torque if no power is applied. The permanent magnets are always attracted to the (usually laminated steel) cores of the rotor windings, which produces what is called cogging torque. With sufficient gear reduction, this torque may be amplified enough to hold a robotic arm steady even with no power applied to the motor. Just another example of something that could prevent the droop you're talking about.Yeah seems there's loads of ways this works. I think I'm making it more of a question than it is! I was specifically referring to the industrial robots that can cary huge payloads of upto 800 Kg and hold it in place. But then offer no resistance when pushed around by an operator to teach it positions. It just confused me how these motors held their place and wondered if a brake was used to hold them when not moving.Like someone wrote some robots have a breaks. Thay are rekeased when supplied power is on.I know nothing about Fanuc robots, but you said "ASCII backup". Do you have an older ASCII backup? Maybe you can do a "diff" on the two ascii files and see the changes you're looking for.For future reference, this forum is a great source for industrial robo questions :)1600 is around 80k with a 5 meter track to a school.Haha I needed the same information for a similar project a few years back. I set up a "fake" company to get a quote and got caught. The guys at ABB were relentless in asking questions until I just spilt the beans. They never gave me a quote üòÇ. I ended up using an estimate based off prices people on the internet told me.Ask as a student of your school. Whenever I request quotes, I say I'm an employee of my university.I just throw an RFQ up on alibaba. The Chinese always come in at less than half the price than the people who resell their stuff in the US.I have the prices for the UR3 UR5 and UR10 from universal robots. For the most true price i give it in local currencyUR3: 140.000 dkk (new price from 2017 earlier was 120.000) Ur5: 160.000 UR10: 210.000Kuka have the 7kg iiwa co-bot. Think it was 500.000-650.000 depending on the discountFanuc 7kg robot (not the long one, can‚Äôt recall te name was 189.000. Rumors had it that the green 7kg co-bot would be over 250.000. It wasn‚Äôt released by the time i was searchingAnd a 3D vision system from fanuc was 200.000 extraDkk= danish kroners ~6dkk pr dollars last time i checked Or 7.5dkk pr euro (currency is locked to euro)Edit: fanuc CR seriesI believe the Engineering Commons Podcast talked about this one time and said you should say your working for GE or some other big company when looking for info. They said these companies have so many private contractors that it's reasonable even with a different email.try calling a used robot supplier. They know the original asking price and the used price.http://fanuc.pennineuk.com/fanuc-6-alarms.htmPRIO-095: P type instruction out of sequence in your code.http://www.robot-forum.com/robotforum/fanuc-robot-forum/alarm-help%28%29/SRVO-371 seems to be caused by faulty power supplyYes you can set up the LR Mate to accept an I/O to call the program. Honestly Fanuc has a very good support system. I would call them and I'm sure they would be happy to walk you through it.https://www.fanucamerica.com/home/fanuc-america-product-support/customer-resource-centerI would call the number instead of using online support. They'll ask you for the F number. If you don't know what that is, they'll help you with that too. Good luck!Are you trying to use the robot to tell the printer to start printing?Menu -->Setup -->Prog SelectIt has IOs just like a PLC, it won‚Äôt be hard once you look into it.I used to work on FANUC robots, but I only poked at that stuff once. I know someone who knows it well but he changed fields. There are a few other engineers I know well that might know it, but I am not certain.If you are extremely desperate I can try getting in contact with them.r/FanucHi there u/Ok_Refrigerator_8518This post was one of the most popular in the last year. If you fancy sharing more about your robots...You should consider applying for the 3rd annual Reddit Robotics Showcase! An online event for robotics enthusiasts of any age and ability to share their projects!Announcement PostWebsitePlease don't get decked by an industrial robot lolThat‚Äôs always the goal.Please tell me this is your home workshop lolIt is.I don't know what i would do with them but I want them!Please put a dunce hat on one of themThis is so freakin coolWorkshop goalsThis is amazing. I know nothing about all this but I want to do much. I want to change my life and learn. I don‚Äôt know where to startBe careful not to get the cable packs caught. Especially the weld hose pack. It has water and wire and data going through there. Keep the other robot safe by securing the loose cable with Velcro or zip ties.Those dress packs are fine, I don't see any risk of snagging and they look well loomed. OP knows what they are doingNormally , though I‚Äôm messy with many things I prefer cables very tightly dressed ,however; The strength of these robots is so tremendous if I don‚Äôt let them hang in an on the fly situation like this i risk the robot tearing it‚Äôs cabling to pieces.I don't know when was the last time i was aroused this much üòÖü•∫ü•∫ü•∫How much did those industrial robots cost? ü§ëü§ëü§ëFor these robots they‚Äôre using a motoarc-500i so their welding is kinda rigged. My welder was designed for MRC, the controller before the xrc-2001. The actual interface card is not compatible /I can‚Äôt find it/ I don‚Äôt care really . I set the speeds and feeds on the welder and the wire feeder and the welding contactor is just hooked to an I/o relay. Only the torch is carefully calibrated in this welding test, the controller makes it easy. The big bois gripper is hardly calibrated at all, I haven‚Äôt gotten to that yet.I am not sure about ABB, I have never touched one. many other robot companies are difficult as well but by far fanuc is the most secretive.Why is the workshop such a mess?Because it probably gets worked inThis was after a particularly long work sesh of finally rigging my motoarc-500i to my robots, getting the big boys air grippers to behave, and getting the tr3c group to operate properly (there‚Äôs a 3rd robot not pictured) , I was too distracted by that to worry about the knocked over bucket lol. But ye I‚Äôm a pathological slob but I‚Äôm working on it.Fanuc helped us set this up using STVS1 and merge3d programs. Creates a user frame by taking two pictures each of 3 targets to established three 3D points and creates a plane from this data. Allows for auto calibration of a fixture surface that pivots and/or shifts slightly.It's annoying as hell that you cannot run iRCalibration VFrameSet in auto-theres no reason you shouldn't be able to, and they even let you run VTCP in auto.To make it work you have to delete a lot of the iRCal-generated code and go digging through the system variables, where you can find a PR which contains the results of the last stereo vision karel subroutine ran. If you add code to copy that into PRs between each call, and then use either MERGE3D2 or custom karel code, you can generate a userframe.The hack job way I just described does have a plus in that you can use it with the other modes MERGE3D2 supports, like two-point, and 4-point which does a best fit of the last two.Is that just a blank ATI tool changer plate on the end?Ok, it's strong!I would have been more impressed if it tilted the car sideways, or end for end; or if they had two or three of these beasts passing various cars between each other.In my opinion, Keyence has the only 3D random bin picking system worth buying right now.I like iRVision on Fanucs for anything 2D, and a lot of 3D, but their bin pick pales in comparison to Keyence's system in both pick rate and identification. And the programming for Keyence is painfully easy, and ports directly into just about every major robot brand.These are likely to be used for palletizing operations which are often done by manual labor. They need the reach to create the patterns and as the payload goes up so does the bulk of the robot.Awesome!!!Nice, I hear about Fanuc's now and then, but hadn't seen one till nowReally ? Compared to human pick and place, it's really slow and looks expensivex post from r/Fanucrandom component on a driver board that burns up.disclaimer: i work in research, so our robots don't see much use as compared to a 24/7 industrial scenario.so far, we've only had electronics fail on two out of our six robots. one was a dead mainboard in the controller of a 20+ year old kuka and the other was something similar on a much newer fanuc.mechanically, we haven't had any issues at all so far.Motor controllers and depth perception cameras.Motor controllers fail/blow up usually due to environmental conditions.Depth perception cameras get broken because people don‚Äôt care and smash into the robots with other stuff in the environment.Surprised to see just electronic failures here so far.Traditional industrial robots generally have much better reliability than cobots. My previous startup had both kinds and in the three years I was there, we never had any component failures on any of our FANUCs, KUKAs, or ABBs. Meanwhile, all of our URs had at least one joint fail and need a very expensive replacement.https://allyrobotics.com10k$ robot armstrainwave gears fail around 7500-9500 hours of life, but depends on thermals, loading, motion profile, etc.Typically robot arms have strainwave gears to provide a very low backlash speed reduction and high torque conversion.Components on motor drive boards are what typically fail the most, as they see most of the heat.Gears. Harmonic drives are notorious in old Fanunc'sWhat kind of robot are you talking about?Bumpers. lol.ABB, as I noticed, in this order:SMB cableSMBOil leakage at axis 3Axis computerTP joystickNone of these are very expensive to replace, right?Worked at factory with kuka robots: robots were used for polishing high-end aluminium parts. The only time we replaced something was a joint gear, and only because there was a 0.5 mm wiggle.That application of robots is very interesting to me. Where the aluminium parts of complex shapes or relatively predictable blocks/spheres?Silly question but is the welding tip still in good shape?Is there a way to use any weldguides i have learned about them a little bit. I am pretty new to this stuff as i got the robot refurbished from the local supplier and i managed to install, mount, setup, calibrate and programmed myself. I never had any other experience to use plcs with it as i have never worked with someone beforeWelding tips are in good shapes i change them often. Also the nozzle and diffuser too. Still couldn‚Äôt get the hang of itI‚Äôd be curious as to how good your welding fixture is that‚Äôs holding the parts. Also the quality of the parts impacts the welding path greatly. If the parts aren‚Äôt repeatable, you may need options like touch sensing and seam tracking to account for variations between parts.Can you provide more details about touch sensing or seam tracking device or provide me with the link from internet if you find it. I also might want to integrate it with robot which i have no idea aboutAre you set on the Fanuc? Universal Robots seem easier to integrate as long as you have some digital out on the mill. No integrator needed.It‚Äôs not anywhere near as easy as you want it to be, if it‚Äôs done right, and will only be marginal at best if half-assed. There‚Äôs a reason people make decent livings setting this stuff up, and it‚Äôs not because anyone can do it.You might need some controller settings enabled. It‚Äôs pretty easy overall though.If you have the manuals and the patience to read through them it's doable on your own, but frankly will be a pain in the dick. Getting the parameters and m codes for the safety interlocks will likely be the biggest hurdle. We have a robodrill job shop cell and hack our way through new setups based copies/derivations on the original workflow Method set up for us and even so, the effort is only justified on runs of ~500 parts or more.I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:[r/cnc] Interfacing Fanuc robots with Fanuc CNC controls. How hard is this? What controls do I need? If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / ^Contact)What are your reasons for a cobot to do welding? My favorite is Yaskawa/MillerThe cobot is super user friendly and can run more advanced lincoln welding waveformsGiven that you're interested in simulation of industrial robots, I'd have a look at Visual Components. Most of the others that you list are more geared up to simulation of the kind of robots you'd find in research environments. RoboDK is interesting, but I much prefer VC for the sort of tasks that you are probably going to use it for.It's not cheap to buy, but you can get a 30 day trial.Check out https://robodk.comRoboguide became more useful for me once I started importing the solidworks models into the simulation.I've used V-REP pretty heavily for research projects. It has a remote API support for a number of different languages (e.g. Python, Matlab, C), and well as a ROS interface. It also has a really active forums for help.What about doing it in VR:https://www.youtube.com/watch?v=RtYBanxukjgOkay lets have a look. Spoiler: not very good english, but I think you will get the point.The r2000 is big and not very precise! But that doesnt really matter.Userframe:You can meassure a userframe with a teaching-tip. I normaly plan my grippers in a way that i have a tap somewhere, and an teaching-tip that I can screwinside this tap. This teaching-tip must be teached in. I¬¥m a bit rusty with fanuc, with kuka you kann do it via the 4-point method. you have your teaching-tip, and another tip somewhere in the room and you put the tip on tip from 4 directions. The robot calculates the TCP from that and that is your teaching-tip. Now you know where in the room the tip of your teaching-tip is. First step done.Your userframe represents something you want to work with, in your case maybe a palett for stacking boxes. The userframe is defined from 3 points.The zeropoint - the point where X 0 Y 0 Z 0 are. In case of an Palett I would use a cornor of the palett oder make and teaching-helper like an sheet of steel with markings that I can always put in the same way on the palett. Then you have the Second Point -> X+ . This point defines the X-direction and the angle A (around Z, its named different for fanuc, but I am not sure how!). And last but not least Y+ -> A Point anywhere on the surface to determinate B and C angle.Now you have a precise user frame. If you want to tune it a little bit -> you can manipulate all user-frames and type in values. so you dont need to teach if youmaybe see you are in X 5mm off.Tool:I am very happy when I get my tool-data from the CAD (and more happy when they are in fact correct!)There are a few methods like the one I described for the teaching-tip to set the tool datas.Misc:You should maybe reduce the max. torque the robot can reach in the programm to reduce the damage by crashes.I am not shure if this is possible (dont know how much payload you have, etc). For example: the standard torque-maxfor kuka robots is 200%. I reduce it in some cases to 10%, and it helps a LOT!Hope it helped you a bit!The max torque...now that's something I never thought about. probably can adjust it down. It stops when it crashes into things but ... Well, that's like closing the barn door after the horse is loose.I'll look into your teach tip idea. There's a loop for a plumb under the center of the toolhead but the plumb isn't terribly precise because of pendulum action.One thing I'm trying to grapple with is the orientation of the robot versus how you level it to the user frame.The robot is in the configuration NDB000, and everything I put in is backwards. Very confusing :)There are many options with all robots. A little more info please:Discrete I/O (24VDC)? EthernetIP? Ethernet? DeviceNet?It just depends on the options on the controller.I need to use discrete I/O to communicate between the fanuc controller and a control logix 5000 plc. I am having trouble figuring out which wires in the fanuc cable bundle are used for i/o and how to address them in the teach pendant.Edit: meant to send the as a reply but I suppose it's just here now. Thank you for the interest.You probably need to install an add-on card for Ethernet-IP or Device-net. unless your robot has a specific wired IO card. I'd tell you more but fanuc might sue me.Areyou using gcode to control a robot?I feel for ya on this one documentation can be hard to find on fanucs bots. What controller are you using? I may have a schematic that will help you find the RSR and or PNS I/O that you could use to communicate with the PLC.The Fanuc LR Mate 200iC has some I/O in a 50 pin connector in the control. This information is in a single pictorial diagram contained in the connection manual included with the robot. If you don't have this it is available from Fanuc.Sounds like an auto manufacturer. I work at we ABB, Fanuc and Motoman.i think it was more just as a service tech for an automation companyIt‚Äôs great that you already have experience with OTC Daihen robots, as this knowledge will definitely help you transition to Fanuc programming. I own a small company called Reasonable Robot Repair, I‚Äôve seen a lot of companies apply robotics, I‚Äôve seen a lot companies develop robotics, invest in them, feature them, waste them, and the best ones aren‚Äôt public. They‚Äôre private companies and they hold their sauce recipe close to their chest. If you want to invest in a robotics company you need to become part of one. You don‚Äôt need to be an electrical or mechanical engineer or marketing wizard or whatever, you need to be passionate and apply yourself. Robots make money. As you know. Robots exponentially increase productivity. Take some time to visualize the intersection where productivity is lacking and automation is barely able to provide a solution. That‚Äôs where you invest your personal time (and money if needed). Things like picking fruit or flying planes or building houses; robots kind of do this okay, but they aren‚Äôt great at it. Pick one. You‚Äôll do just fine.Your reply resonated well with my own thoughts. Major advances are happening in the smaller companies who are passionately building new technologies. They may be small, but the potential they hold is enormous. I know of a couple of engineers working on only the vision based navigation module - a fabulous product, but when it comes to business, it will be tough without raising millions in funding. A probable course for them would be to get acquired by a bigger company. Everyone makes money anyway.I feel like Epson's robotics are undervalued. They have a pretty decent lineup of robots that could be put up against the high speed offerings by any other robot company (Fanuc, ABB, Kuka, Omron, Denso, Etc)They also trade with a P/E around 7-8 while everyone else seems to trade at 20-30.Robotics is one of those things that are super flashy. This leads to stocks that are way overvalued or more accurately to say stocks that are not priced to the underlying assets. Meaning the hype surrounding each earning report and news article is more important to the stock price than anything else.Well, I am biased... but you can guess what I'd say, and I do believe it.For big two reasons why:- The software side of robotics right now is difficult. Interfacing with a component like a motor can vary from motor to motor. There is no composability or common control plane (let alone API) for controlling all of your robot parts and components. From paper->prototype->production-> scale therefore varies wildly from use-case to use-case.- Robotics has fallen behind in terms of use-case driven modern tech connectivity. For example, if you want to securely teleoperate a robot you need to figure out how. If you want to securely collect data or logs for analysis or ML training from your robot or robot fleet, you need to figure out how.The Viam platform addresses both of these issues and is hardware and robot agnostic.Locus RoboticsMy 2 cents, any of them that actually are doing something that you think could succeed. Lots of robotics companies are doing cool things, but what would have mass adoption? Cool doesn't pay the bills, actually profiting from the use of the bots and/or selling the bots does. Before I started writing code for robotic control systems I wrote code for trade desks on wall street. I can't tell you how many "cool" tech companies turn into a pump and dump. It all depends on if the profits match the hype. I've worked on the software for a handful of robotics companies, but I only kept the stock I was given in 2 of them. Why? Because they were building robots for internal use at other wings of the company. Selling them to other companies was an after thought. But the bots had a specific direction to solve a real problem and cost/benefit analysis done by the bean counters before we even start on something. We knew the economics of it made sense. I'm sure you were hoping for names of companies, but I'm biased so I won't go there. I will say that I've transitioned my career to a company that's working to automate the fullfilment and delivery of goods that everyone has (yes, i mean has) to buy from one vendor or another. Automating everything about the business saves a ton of money so they can undercut competitors with their retail prices. I believe in that business model, regardless of the company doing it. Heck I took a significant portion of my salary to be paid out in stock. Big risk on a fairly new company, but I believe in it.Universal robotics when they go publicUR was acquired by Teradyne about 5-6 years ago, so they are now a part of a public company. Teradyne also bought Mobile Industrial Robots (MiR) and Autoguide about 4-5 years ago, so they have an automation portfolio now.Not AITX üòÜ, ok probably NVIDIA with their upcoming Jetson products.AI social robots, companions, sexbots: Realbotix.com, RealBotix.ai, RealDoll, Abyss Creations, all connected. In the US ticker $XBOTFThis is the one haha, not on Robinhood though.Arduino and Raspberry piAny major player that innovates in components - actuators, gears, sensors, motor controllers, microcontrollers - human-like robots would need a shitton of these.NVidia, ASML were already mentioned.When thinking about actual builders there-s a lot of uncertainty who will manage to break trough. But parts they will have to source from somewhere.Yeah, the nvidia boat seem to have left dock yesterday when they announced some happy sailing. It‚Äôs like a trillion dollar valuation. Insane.actuators, gears, sensors, motor controllers, microcontrollers - human-like robots would need a shitton of theseAliExpress? Human-like robots make mostly sense as synthetic girlfriends. Since people would want to regulate that, the components have to be off the shelf and cheap, not from some fancy startup which only sells to selected customers. So that regulations can be bypassed by local production and assembly.AESETC, Inc.You can only use Karel if the controller has a valid license for it. If that license is in place you can load the programs from the USB port in the newer pendants.I sympathize with you. Their software and interfaces feel so put of date compared to companies like Kuka. The programs are real fun to debug too. It's basically impossible to log or print out things to try to figure out any math errors. And yeah, the documentation is pretty bad. They do have good performance though for the size range and are decently priced. At least they have that going for them.Do you habe access to FANUC Roboguide?I'd highly recommend reading this free book:https://blog.robotiq.com/lean-robotics-book-downloadF*ck ABB all my homies hate ABBEh, I hate Fanuc more but that's just me, lol.Why manKUKA gang represent.I just got a technician job where I'll be working with a lot of ABB robots. No prior experience, so I'm curious what makes you say that.Familiarizing yourself with ladder logic and PLC programming will be a big one. If you want to get into more in-depth arm design then controls will be a big factor, as well as an understanding of motors.Primarily though Id focus on the same industrial topics as any other mode of manufacturing (i.e. PLCs). Robot arms are just another type of machine. They tend to operate similarly to other big manufacturing equipment.onerous offend strong connect support full attempt wipe plucky cable this message was mass deleted/edited with redact.devThank you so much Sir.Look for free training courses in your area for programming robots. Some places will teach you fanuc or kuka without charge. Especially if you're a student.https://www.solisplc.com/courses-all?topics=Industrial+RoboticsFirst of all, start reading the Daily Robotics Briefing newsletter: https://dailyrobotics.substack.comThe newsletter gives you important insights (industrial, business, research, education) into the field of robotics.As others have said, C++ and Python are the major languages used, especially if you're using ROS. If you go to lower-level embedded control, you're going to use C or C++, depending on your hardware platform.By itself, C++'s learning curve can be a little steep if you don't have experience in programming, so you probably should start doing it in Python, if given the option. (Edit: by "should start in Python", I don't mean you shouldn't learn C++. It's a very important language and you should definitely learn it as well. See u/KindaOffKey's response on the differences between both. I just think that, if you're not from a CS/CE background, it can be overwhelming to learn both programming basics and C++'s intricacies at once.)About courses, I don't have any to recommend, but you can search for online resources on ROS development with simulations on Gazebo, as it would be a good starting point on the tools used for robotics development in the academia/industry.Thanks that was really helpful. I have came to a conclusion of going through an introductory course for python, and after that C++ possibly. Once I am equipped with the knowledge I will be in better position to make a decision. Thanks I will always remember the guidance and help I got from you.I have a Bachelor's degree in Mechanical Engineering and am currently doing my Master's degree in Robotics.I'm almost exclusively using C++ and Python (also Matlab, but that's something you need to actively avoid). While yes, Python is (a lot) easier than C++, I started with C++ and can't say I regret it. Python is easier because it handles a lot of things you need to deal with yourself in C++. Knowing what those things are makes you a better Python developer (imo), and in C++ you're forced to learn them.As for the roles of the two languages, in my limited experience: Python is a lot more suited for single, relatively straightforward tasks, these sort of things are much much faster to do in Python. C++ is a lot better suited for developing on on-board computers with limited resources, real-time constraints and multiple processes, where you can optimize the shit out of it.For courses, any introductory course to programming is of course a great start. What I think is immensely useful (and I'm still lacking) are courses about proper software development, i.e. things as Software Architecture, OOP, Design Patterns, etc. For Robotics specifically, a course in ROS wouldn't hurt, although the tutorials are already very useful.If you're serious about Software Development, courses alone aren't enough. Projects are great, but just as important (if not more) is reading other people's code. Try to really understand what's going on, and why the developer chose to do things the way he did. This'll boosts your learning enormously.(also Matlab, but that's something you need to actively avoid).I agree with this, If you want to develop your own solutions then it will be harder to implement it.Also, I know people that if there is not a library for their device in Matlab then they don't work with such device.A lot of people have been saying C++ and python for ROS but it is also important to learn Linux, especially Ubuntu 16.04 which is the best platform to use ROS on. Although its not a language, command line is very different and a lot more powerful than the GUI we are used to and you should start playing around with it like asap.It depends, if you have something simple or want to "glue" all together then Python, C/C++ is my favorite option since everything has an interface with those two languages, also using ROS helps you a lot to unify everything.I suggest you to learn C/C++ because you can write the driver that you need for custom made hardware, and whenever you need to run near Real-Time this is your best option.For my last project I also did some specific calculations with FORTRAN and C/C++. But it was to keep the frecuency for a discrete control strategy.I'm also from mechanical engineering, and currently doing masters in Robotics. I guess the question on which programming language to follow has been answered conclusively, so I won't go there. As far as it comes down to courses you should take for robotics, it depends on which side you want to tilt on.If it's hardware focused, then a few electronics courses along with your mechanical curriculum should suffice. Specifically courses which go into kinematics and dynamics on the mechanical side, and digital signal processing and control theory on electrical side. You could top that up with a course on Manipulator design and control, and a similar one for autonomous vehicles.If it's software focused, start with data structures and algorithms and get oriented with ROS. The control of the robot is the main focus here, so do a control course too. Follow that up with a course which takes up path planning/SLAM. The distinct thing on the software side is that you can really dive deep into deep and reinforcement learning. Among a host of their uses, deep learning is used on vision and reinforcement learning for map-less navigation and control.Generally courses which are offered have elements of both (mech and cs) sides, so you should get a good idea of both in your undergrad.I work as a robot programmer full time. I Mainly work on ABB robots. I have worked on KUKA and fanucs to. Try to understand how the RAPID language is written. Download Robot studio for ABB's and do some tutorials on youtube its not a bad way to start off.I would say c++ and python are the major ones.I would strongly recommend python because I worked on a project on making a moving humanoid robot. We programmed in pytho.it is a easy to learn languageMany robots/sensors are controlled with ROS which has C++ and Python bindingsResearch robotics or industrial robotics?Because the answer is hugely different.In any case Start with a c style language. Not cpp, oop is dead.Visual basic script is useful in industrial, it's often the scripting language for human interface devices.I'd you're going industrial, learn IEC 61131 languages, especially ST. https://en.wikipedia.org/wiki/IEC_61131 languages. (Beckhoffs Twincat3 is a good free learning environment for those)If you're going research, start learning python and Linux, and look into ROS.Source: I'm an industrial robotics programmer, who switched to building research prototypes. AmaWhy would you say OOP is dead?I would agree with this 100%. I too am an industrial robot programmer. My company is strictly Fanuc, but I have programmed Fanuc's, ABB's, Asea's, and Kuka's. I will say that a very good starting point for the industrial side would be PASCAL. Mostly because a lot of robot Karel languages are based on PASCAL. Then when you get into Teach Pendant programming those are very similar to C/VB.Not cpp, oop is dead.Wait, is OOP dead?! Luckily, C++ is a multi-paradigm language and can implement the same program efficiently in many different ways!Seriously, though, I aknowlege C++ isn't the standard in the embedded/control/automation industry, but dismissing it "because OOP" is incredibly naive.The language is up there with C as the most used system programming languages, so still there's merit in learning it.And the most powerful thing about C++ is the ability to do zero-overhead abstractions, adding type safety and better structuring your code. Just migrating a C code to C++ to use templates, type safety features and constexpr, can already help a lot, especially if they replace C macros (templates make them debuggable, constexpr adds type safety at no runtime cost, etc.).Also, modern C++ is easier to teach than C. RAII is a blessing.If you're going research, start learning python and Linux, and look into ROS.Exactly. And then, C++, because that's the language ROS is written and how you can get better use of the APIs and reach the best performance on the platform.May be an unpopular opinion here but I build industrial and lab robot systems for a living. I use LabVIEW extensively which has the added benefit of easy integration of sensors, cameras and other hardware.PythonWebots is a simulation software for robotics having different robots and environments already made for you. They already have different sensors that you can use from the basic one's like encoder, accelerometer, and ultrasonic sensor to more advance sensors like Lidar or Camera. They support different programming languages like C, C++, Java, Python, and Matlab so feel free to use whatever you're comfortable with. They have good documentations also which you can use as reference. There are other simulation softwares that you could use like CoppeliaSim, Gazebo, Isaac sim. The only reason why I'm recommending webots is because I used it before. But most roboticist may prefer other simulators which I mentioned earlier.Yeah, download webots, setup a small environment and then load in a pre built robot like the E-puck or something.Try programing it and turning on its sensors in C after reading the E-Puck documentationIf you're just programming, and you have a decent C++ background... LEARN ROS LEARN ROS LEARN ROS LEARN ROS LEARN ROS.Sauce? I'm a robotics engineerI don't understand whether you want to start in the robotics field as a science or just the programming part, but if you want to start in the field of robotics I would recommend Introduction to robotics by Stanfordas you will understand core concepts in the science that I believe you will need if you will do programming only.do you just want to do the programming part ?What is a good beginner project for people with experience in computer programming?LED blinkingLine follower robotInverse pendulumOr if you are not interested in the electronics and mecanics, do yourself a favor: buy an off-the-shelf arm and do computer vision stuff with it. It is extremely interesting too.What type of robotics? Industrial arms? AGVs? Boston Dynamics type stuff?The resources we can point you to really depend on what you mean when you say "robotics". It's a big field.Industrial arms and Boston dynamics type.I have asked a similar question and received zero help. I believe you must be initiated with a paddle and jock straps.The best way to start anything is to start small and build your way up. But a 10 buck Arduino and start reading and controlling motors, sensors, switches etc. Once you out grow that move up to a raspberry pi and add more things. If you keep doing this you will end up with a robot. If you want to start on a massive project as your first attempt you will probably get overwhelmed until you start gaining some intuition in to common bugs. It's easy to lose a lot of time looking for bugs in the wrong place and in my opinion it's debugging that is the real art of roboticsWhat languages, tools are you familiar with in computer programming?For learning basics u can start with arduino and try to interface leds, servos, stepper motors, various sensors etc. This will give you a good foundation. You can continue this and get into developing firmware and drivers for robots.Learn python, c++, linear algebra.Learn ROS, u can jump directly to ROS2, there is simulation available using gazebo. There is very good documentation available for ROS2. If u have the money buy robots made as ROS learning kits or make your own using the hardware knowledge u gained in arduino.Theres lots to learn but depends on what u know and where u want to go.Stay away from Tesla Optimus.In my experience, pallet tool is somewhat limited for custom applications. You could be better off writing your own stacking program using offsets.Who makes this? /sSeems a little archaic compared to what the bleeding edge is today. The billet example is too trivial, you could do the same thing with traditional computer vision systems.If they're going to tout a 3d structured lighting system, they should use parts with loops or something that are harder to train a standard vision system to recognise.https://www.reddit.com/user/FANUCRoboticshttps://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3FNo, you cannot directly control the joint velocities with the standard Fanuc software(unless there is some way to do it with KAREL programs, which im not familiar with). If you wanted to simulate controlling the joints, you could write a routine that dumps angle values read from an input into a position register and loop it however you wouldn't be anywhere near 50-100Hz.As for documentation, most of the stuff available you have to get from the customer resource center. If they don't have something, give robot support a call. If you have the contact info of a sales rep, call them first, as they will often give you documents for free that tech support might try to charge you for.If you tried contacting them today, I think they were closed, because they didn't respond to me today either, and they usually get back to you very quickly.Thanks for the reply. I may just have to go with a new UR10 rather than try to repurpose the existing Fanuc for class purposes. Kindof a bummer, but really surprising that they don't provide this kind of functionality out-of-the-box.It seems that ROS-Industrial can do it, but that it is essentially doing interpolated setpoints and inverse kinematics to allow workspace and joint velocities.I'm not even close to 100% sure on this, so keep that in mind. But from what I've learned through college and my job, I don't believe that you can have direct control of the joint velocities through conventional programming. I do remember learning that it is possible to get into the velocity controls through backdoors in the programming, although I wouldn't even know where to begin to get there. I hope that kind helps.Kuka hasn't become more or less popular in the past few years. The big four (yaskawa, kuka, fanuc, ABB) are still basically jockeying for the lead, though yaskawa is t decidedly lagging.Your prof is probably just a fanboyJust an afterthought... KUKA has recently been actively engaging in selling "robotics education". See "KUKA Education" for details. Afaik in America too.. that might explain the "fanboying", just a hunchI would like to learn how to program something besides Fanuc but my company is tied to them very hard.I just hope other vendors dont feel like you are programming something from the 1980s. Unable to name variables, limited variable comment space, no text parsing, anything more than a few DCS zones makes you run low on memory. The only thing I feel Fanuc does WELL is communicating with AB PLCs.What makes you say that yaskawa is lagging? As someone who has been employed by them, I wanted to hear your opinion as to why they are lagging. I am not a fanboy, just an employee.At least in medtech, Kuka manufactures the only (that I know of) ISO 60601-certified commercially-available arm which takes a lot of regulatory risk out of developing a medical robotic system from the ground up. Seems like every day there‚Äôs a new medical robotics startup coming out that uses a Kuka LWR as the base robot with some sort of customized end effector.Kuka released it's lighweight arm 10-15(?) years ago. That was the last time I remember some buzz in the robotics community about a Kuka product. Maybe this is what your professor is referring to?When you get to be older, the "last few years" might really mean the "last few decades".But the Kuka LWR was too expensive to become popular like e.g. the ones from Universial Robots / Franka.Afaik, at least the initial version wasn't even developed by KUKA but by the publicly funded DLR.Not an expert but I do suppose KUKA still is considered classic "Made in Germany" quality despite the midea acquisition, also KUKA Systems is apparently a great company to work together with in terms of integration of automated processes.I work at KUKA Systems, can confirm that the automation jobs are very popular, especially with nuclear decommissioningManufactures focus on sales and work from time to time on "advanced" displays for showrooms so people "think" they are advanced. Robotic research and innovation is not happening at those places (is not their business target)IMO KUKA are seen as the gold standard. They are very robust and have absolute resolvers for position rather than encoders, this makes them more suitable for more demanding environments such as aerospace and nuclear. They also have a high safety reputation to the point of being used for some park rides throwing people around. Many plants may have loads of ABB etc for production lines but only a few KUKA doing the difficult high accuracy stuff.I work with KUKA robots.For programming ABB is way ahead of Kuka. Take for example linear motion created in offline programming.ABB RobotStudio:movel P1,v500,fine,tGripper\WObj:wFixture;Kuka.Sim (I shit you not, this is KRL what you get when you create a single lin motion):;FOLD SLIN P1 Vel=2 m/s CPDAT1 Tool[0] Base[0] ;%{PE};FOLD Parameters ;%{h};Params IlfProvider=kukaroboter.basistech.inlineforms.movement.spline; Kuka.IsGlobalPoint=False; Kuka.PointName=P1; Kuka.BlendingEnabled=False; Kuka.MoveDataName=CPDAT1; Kuka.VelocityPath=2; Kuka.VelocityFieldEnabled=True; Kuka.ColDetectFieldEnabled=True; Kuka.CurrentCDSetIndex=0; Kuka.MovementParameterFieldEnabled=True; IlfCommand=SLIN;ENDFOLDSLIN XP1 WITH $VEL = SVEL_CP(2.0, , LCPDAT1), $TOOL = STOOL2(FP1), $BASE = SBASE(FP1.BASE_NO), $IPO_MODE = SIPO_MODE(FP1.IPO_FRAME), $LOAD = SLOAD(FP1.TOOL_NO), $ACC = SACC_CP(LCPDAT1), $ORI_TYPE = SORI_TYP(LCPDAT1), $APO = SAPO(LCPDAT1), $JERK = SJERK(LCPDAT1), $COLLMON_TOL_PRO[1] = USE_CM_PRO_VALUES(0);ENDFOLDI know Kuka expert programming can be simpler but why not do it just like ABB in every context.Does kuka offers free software or a simulator to start learning programming robots?I have given interview with KUKA. They rigorously work with EPFL and other USA unis in order to develop their research department - but I am sure the other 3 do as well. But I really liked their topic.Can someone tell me the tech stack for KUKA?Try IKBT. https://github.com/uw-biorobotics/IKBTanyone tried IKBT? OP?Try FABRIK- it's not a deterministic solver (ie there's more than one solution for a given position), but it converges fast and gives pretty natural & smooth looking results.Try FABRIK- it's not a deterministic solver (ie there's more than one solution for a given position), but it converges fast and gives pretty natural & smooth looking results.Looks identical to universal robots btw, you might have better luck finding those published somewhereThe thing is that when solving an UR5 for example I can do P_wrist = P_noa - approach*L to move the objective position to the 5th joint. And because the position xyz of this joint only depents on the first 3 joints I can solve for Theta 1, 2 ,3 using simple geometry. But in this case Theta 4 changes the xyz position of the 5th frame.Unfortunately analytical solution cant be extended since one has an spherical wrist and the other one has a non spherical wrist.Hi there, if what you are looking for is a closed analytical solution of all 16 possible joints for a single pose. Here is a fresh 2023 paper that does exactly that https://www.mdpi.com/2218-6581/12/2/36. The source code is not available yet, I asked the people who did the article and they said they will have it ready soon. You can ask them the same if you want. The article is really good and has a lot of "aha" moments.I'd wager there's a URDF model for Gazebo.open source Robot Overlord? I don't know your requirements.video of handling prohttp://www.robodk.com/VREP? (http://www.coppeliarobotics.com/)no experience with motoman, so i may not be the most qualified person to answer this.but from what i've seen from cabinets from ABB, KUKA, UR and fanuc, you usually have some sort of industrial PC, servo drives and some more hardware/controllers for the lower level stuff.ABB and KUKA run a combination of windows and VxWorks, while UR runs an RT patched debian linux. fanuc is a bit special in that they use a ton of their own hard- and software. i think motoman may be similar to fanuc.even if you only care about the motors, the cabinets can be interesting for the drives. these don't come cheap. but you may have a hard time actually using these things. from my experience, even the drives are mostly undocumented. the guy at excessive overkill on youtube did some reverse engineering on fanuc: https://www.youtube.com/@ExcessiveOverkill this may be interesting.also, even if you get the robot to run with its controller, it may still be tricky to do anything useful with it. depending on the software options, this may or may not be possible (on fanuc, even loading a text file as a program and then compiling it on the controller is an extra option). depending on what you need, these may be pricey. KUKA charges around 500 bucks for an option, ABB is often in the area of 2.5k.but i believe that yaskawa (motoman) has all the options installed, you "just" need a code to activate them. it's obviously not legal to obtain such codes somewhere on the internet. you do what you want with that information.What generation controller? I may have PDF manuals for the arm and controller.I don't know these systems as well as Fanuc or ABB systems, but other than the servo motors, everything in there will be pretty much specific and purpose built. And if they're like Fanuc motors, they may have proprietary encoders on them.If you can verify functionality, there's nearly always a market for used robot parts, since support typically drops off after 10 years. Teach pendants and pendant cables, in particular.Motoman is the old brand name for Yaskawa. What you have might be a collectors item. Google "Motoman history"Absolutely, Delmia is what I've seen being used the most. Nearly any big project I've worked on in the past 4-5 years has had offline programs generated before we come in for commissioning. I personally have experience using Fanuc's Roboguide and ABB's Robotstudio.I think one challenge in being proficient with using OLP software could be not having much actual experience on an actual robot.Definitely, most vendors have some kind of simulator and many components even like motors and actuators will come with MATLAB models for simulink. Recently I've even brushless DC motors from ParkerMotion come with a recommended feed-forward configuration for anti cogging which can be added to your control methodology. Manufacturers want you to use their products and since many industrial solutions are very expensive the best way they can get you to do that is to make you confident that they will be a good fit for your application. Simulation and reality are never 1:1 but they are pretty good.Thank you to those who answered my question! I have some follow-up questions:Are vendor specific OLP's more widely used compared to vendor agnostic ones?It seems that traditional OLP's, such as Robotmaster, DELMIA, Robcad and RobotWorks, are very expensive. I've seen some new OLP's, such as RoboDK, OCTOPUZ and ArtiMinds. Have they been widely used yet, especially out of the automotive industry?I'm a bot, bleep, bloop. Someone has linked to this thread from another place on reddit:[r/automate] Is offline programming software widely used in industry? If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads. (Info / ^Contact)Probably Universal Robots, though at times they are prohibitively ‚Äúeasy‚Äù. They do have a ROS driver though, I never set it up for ROS at work but it‚Äôs still something I‚Äôd like to do. They have URCAP api for interfacing your ML program with it.It is a Cobot though, so that could be a dealbreaker if it can‚Äôt handle what you need.Epson has scripted text software and a no code environment that works on all their SCARA robots, payload from 1-20kg. The T3 goes for under 8k and the T6 under 10k. You can download the trial software to see if you like it or not, simulator built into it as well.We need more info.Do you pick the element always from the same position?What‚Äôs the size of the element, the mass.What is the cycle time.What is the distance from robot, to the element, to the output.Do you have NOK bin.Do you always get the same orientation for the element.zHow do you send signal to the robot.Then, whatnot the budget. What about the safety, do you need safety limits on any of the axis.Do you have any other robots on site?Finding a robot is dependent on all that and more.We pick trash plastic bottles up to 1 kg. The robot end effector and the element will be at short range, maybe 50 cm and I plan to blow out the picked elements into a NOK bin. In fact the sole purpose is to remove wrong elements, so we let the elements go unless they don't belong there.The items are not always oriented on the same direction and might be cluttered. So I plan to run segmentation models and pick with suctions. I am not sure about the expected pick rate but we have an intuition that it needs to be fast.We don't have any other robot on site and we would like to stay on a mid-end budget as it's just a POC.I think we need safety limits.I set up a Universal Robot (UR10) as an intern with barely any ROS skills (or any skills at all) a few years ago. I tell you, there might be nothing easier than that. Buuuut UR arms can't really carry heavy stuff.In most instances that I‚Äôve seen vision based picking systems, It‚Äôs been fanuc. I‚Äôve worked with tons of kuka and they‚Äôre very nice, but only really seen them in box loading/palletizing operations with a set pick point. UR is an option that I assume would be cheaper, but it really is dependent on the payload weight, as they can‚Äôt handle much at all.Basically, Kuka is worth investigating, UR is an option for picking small objects such as caps, But fanuc seems to work very well in that atmosphere.I used to work for Yaskawa and although I was on the welding application side, my coworkers did a tonne of vision. As mentioned above more info is helpful. I have some UR experience as well and would shy away from them for any real industrial applicationsWhat did you find difficult with Fanuc?Pendant is hell, super complex and hard to understand. We had troubles with the driver and weird bugs where the robot would just randomly hand and it seems that Fanuc did not provide the right support. We had to use a third party driver. Also it's bulky and hard to setup.What about ufactory xarm 6?I am not sure of your budget, but anything with a big industry name (ABB, Kawasaki, Kuka, Fanuc, Motoman, Nachi etc) should be fine, but the prices are well outside of a hobbyists range new (and used usually).The cheapest option is probably developing your own if you need it for a specific application (since then you can tailor it). But if you need 6+ DOF then anything good will cost you.You can look at Franka Emika's Panda arm, https://www.franka.de/, although it might be out of your budget. We bought a Research Edition for 20.000 euro (currently they don't show prices anymore it seems), this includes the possibility for programming a low level controller. But I have no idea how much it will cost as a "normal" edition, that you just install and program via a simple web interface. But it is based on the more expensive Kuka arms, the Panda also has torque sensors so its a cobot basically, but therefore it might be a bit to expensive.You can also have a look at Kinova, https://www.kinovarobotics.com/en, they just launched a new arm I believe. They have some different configurations available and different arms. But I am guessing these will be around 20k also. They have a 3 finger under actuated and a 2 finger gripper available.You could also check out the robolink arm made by igus. That should be in your price range, but with some technical limitions (e.g. DOFs, load, range)Look for startups and r&d.Avoid typical industrial automation integrators as they do not design new robots, they use existing solutions from fanuc, yaskawa or other suppliers.AGVs are on the rise too, aim directly for manufacturers, depending where you live.You want to look for service robotics companies. They are much smaller volume and much more bespoke so you actually make a lot more. Industrial robots tend to be major mass market so there is a TON of people developing them so your slice is much smaller. I've developed both, look for companies like ULC robotics, inuktun, gecko robotics, sarcos systems, etc.Find a niche in the market and start making your own.I think there were excellent answers here, I think first of all depending on where you live, and what is the level of your expertise1- I advocate for starting on finding a niche and working on your own startup if that is something you would like to do if not2- Joining a startup idea would be a good place3- Most companies dont really do manufacturing and focus on c++, embedded system for roboticsI am leaving academia, and consulting in robotics after 12 years, although I had the opportunity to built from scratch, but always nothing up to product level, I am more inclined for building your own thing, but there are risks at this route, but I think it is worth it.Look for jobs at robotic integrators if what you really mean is building robots that do specific jobs.If you really mean building robots themselves apply to companies like Yaskawa, ABB etc.I think to specifically ‚Äúbuild robots‚Äù you‚Äôd need to find a job with someone like ABB or Fanuc but I don‚Äôt think that‚Äôs really what you want (probably pretty boring and bureaucratic honestly). Look to work for a robotics integrator or an automation company. With a lot of them (at least the one I worked for as an ME) there‚Äôs a lot of using off-the-shelf robots but also a lot of designing and building custom automation equipment that could loosely be defined as a ‚Äúrobot‚Äù. The last thing I designed and built there was basically a fully custom 2 axis high load and high speed ‚Äúrobot‚Äù.Get off Reddit and go to job posting sites. Aim at companies doing manufacturing automation, that‚Äôs typically the closest you can get to what you thought robotics would be.Having worked at two robotics companies, I'd advise explicitly to avoid large manufacturing companies. R&D roles are out there like OP is looking for, but they're very competitive at an entry level.It depends what you mean by ‚Äòrobots‚Äô. Automation? Manufacturing robots? Household? Security? Etc.Universities do a lot of this work.What is good job posting site for mechatronics/ robotics HW startup roles to the US market?Most engineering jobs working on highly advanced robots are likely to be in software ("just programming"). Relatively few are in mechanical/electrical hardware (in my experience). Work with sensors and actuators sort of falls between the two. If you want to do a breadth of work on robots, consider a field engineering or test engineering role.First off, congrats on your master's in mechatronics and robotics! That's a huge achievement. I totally get where you're coming from; wanting to be hands-on in the actual making of robots rather than just simulations or programming. If you're keen on diving deep into the mechanics of robot-making, you might want to consider looking into some of the top industrial robot manufacturers. I recently came across this post which lists some of the leading names in the industry.Working with these companies could give you the hands-on experience you're looking for. They're at the forefront of robot manufacturing, and being a part of their team would mean you'd be involved in the actual creation and assembly of robots. Plus, these companies often have specialized teams dedicated to different aspects of robot-making, so you could potentially find a role that's tailored to your interest in mechanics.Remember, the robotics field is vast, and there are numerous niches. It might take some time and research, but with your qualifications and passion, I'm sure you'll find the perfect fit. Best of luck on your job hunt!Controls Engineer sounds like a fit for you. If you search for "machine integrator" you should find what you're looking for company-wiseI started in the scenic/marketing/advertising space where there is need for a lot of quick and dirty custom robotics. Then I moved to commercial products.The 12 and 22 numbers refer to stall torque in Newton Meters respectively. Here is a link to technical info. Page 111 (PDF Page 124) would be a good starting point I think.Thanks for the info. I tried to read through that pdf this afternoon actually but my eyes started to gloss over. lol.This is a ferris wheel system. One has a 50" dia major swing (Alpha 12) and the other a 54" (Alpha 22). Would this be why they would quote the two different motors? Is that 4" difference a major concern in terms of torque?edit: ok, now I'm seeing the difference in stall and overall torque. Do you think the 22 would be faster rotating 2000lbs a side?The other quote is the 12 swinging 3000lbs a side.totally jealousYou dont have to be jealous brother.. call Advanced Robotic Controls & Services in Denver, NC and we will hook you right up lol.. I aced the shameless plug there huh?ROS is used by hundreds of robotics companies. It is pretty dominant in mobile robots (Clearpath, MIR, Robotnik, Zebra, ...). It is also used in autonomous driving, check apex.ai. It is not so much used in industrial robotics, but there are also some 100 companies that work on using it (check on ros-industrial).It is also used in autonomous driving, check apex.ai.I used to work in the field, and while I won't tell you apex.ai isn't doing a lot of work to make it viable, it's still not anywhere near common, and the platforms you have to use in the field (like Nvidia DRIVE) force you to go one layer down and use DDS, and that's if you're lucky enough to be able to use something like thatEdit: typo (I said "apex.ai is" instead of "isn't")Also, if not ROS, what are the alternatives apart from rolling out a homemade solution?You roll out a homemade solution overall, but integrate libraries where you can/where they fit. For example, you might not be using ROS, but that doesn't mean you have to roll your own messaging framework completely from scratch (ie, you might integrate DDS directly, instead of via ROS2).Not to say its easy to roll your own alternative to ROS, at all, but you aren't necessarily completely starting from zero.Oh and in terms of the complexity and steep learning curve:  In a lot of applications that complexity is "all the stuff you didn't know you needed when you started a robotics project in a small team."The steep learning curve is all the things you didn't know you needed to know about robotics software.That's an overly optimistic take and ROS has plenty of warts, but there's a big and useful toolkit that I really appreciate after trying to do complex robotics without those tools, or with half-assed versions of them developed as an afterthought as the project went along.It's not an industrial tool.In industry most people aren't operating at a low enough level to need ROS, and just integrate how manufacturers let them through their interfaces.For those that are, they soon find out that it's not suitable for industrial applications, where they'll run into performance issues, lack of reliability, compatibility issues that make support difficult, and a general lack verfiy your system will operate when stress tested. Many start with ROS, and then spend a long time trying to work there way away from it.I think what people struggle with is the understanding that we need industrial devices to work 99.99% of the time, not having some background software hang or crash, or waiting on a PC to send data back, and on top of all that it needs to be safe.Basically, the big upside of ros is it makes development of robotics applications relatively quick, letting you skip over integrating hardware and getting right to the algorithm development, at least in theory. This is largely due to the fact that, as long as you're using standard ROS messages, you can pretty much plug and play different open source nodes for actuators, sensors, and specific algorithms (like localization) without caring about the specifics.The main reason it doesn't usually translate to use in applications outside academia is because the moment you need to start tuning performance, speed up message delivery, or in any way did into the implementation to understand what's going on in the middleware you hit a lot of brick walls. Instead, most places prefer to use a middleware later that's more low level (e.g. DDS) where they have more control, or just roll their own stuff for their specific needs.A good example of this is a project in production I worked on where I regret having used ROS2, at least to a degree. We required very large messages at very low latency being sent between nodes (think sending individual, uncompressed video frames at a very high resolution). As such, we looked for zero copy options for ROS that were compatible with our DDS layer and we found iceoryx, which works with cycloneDDS. Now, if we had used cycloneDDS directly we would have had zero issues. However, unfortunately the ROS RMW interface, to my understanding at least, has no way of letting ROS inform DDS when they're done using a shared memory message. That means that if you were too slow, DDS was forced to just override your message without you knowing, ending up in incorrect data. You end up having to do copies just to avoid the issue, which is expensive of course.It's stuff like that that tells me ROS, even ROS2 isn't ready for production, and probably never will be. You can massage it to kind of work, but these gaps are completely avoided if you just use something like DDS or Zenoh and accept you'll have to build your sensor and actuator drivers yourself. You probably want to do that anyways.It's not only used within academia.Visibility in true private-sector deployment is low because private-sector work is proprietary. ROS 1 did not have secure comms as far as I know and that does limit its commercial applications, as does the lack of scalability of a central database architecture for message passing. But even there keep in mind that not all useful robot prototypes have network connections to the outside world. Most big robotics business use cases you see in the news require constant connectivity and so security is primary.ROS 2 can be used securely and uses distributed message-passing, both of which make it better for industrial use. But I think the secure message-passing is non-default and for some applications you need to do some nontrivial performance tuning.Vanilla ROS 2 cannot be used in life-safety-critical systems covered by certain safety regulations, like autonomous cars and industrial robot arms, and that again limits its commercial applicability in certain products. However, it's common to find it in R&D in these sectors. Bosch is doing a lot.Companies that modify ROS 2 for this kind of system have done incredibly valuable work and apex.ai just sells a version of ROS 2 that meets some safety regulations!But other kinds of robots either meet these safety criteria using a parallel hardware/firmware system or don't have any such regulations, and I bet more of them consider and use ROS 2 than we know.There is some strategic value to disclosing this in some cases, especially for hiring top talent, but overall it's not necessarily worthwhile to tell people how you do what you do.There are lots of systems deployed that don't need the complexity of ROS and it makes sense not to use it there, and there are many vocal people in those robotics sectors who will announce "ROS IS NOT USED IN INDUSTRY" but that's specifically true in their sector. It's still more popular and has more penetration in R&D than mainstream products as far as I can tell, and I know companies like Fetch slowly transitioned away from ROS to achieve massive fleet scaling. There are tons of reasons to roll your own stack later as you grow massively.That doesn't mean anyone has any real idea how many ROS-based robots are out there making good money in fully commercialized applications. You can get anecdotes here and there but the full picture is not known about how different industries use ROS.I have knowledge of ROS usage in other organizations that I can't disclose, and I bet a lot of us have the same.My experience is that it's annoying as hell to set up compared to just interfacing with the parts directly through whatever library worksIt is not. You can quite literally see the many industry sponsors who support the Nav2 open source project, and also use it as their framework.If anything academia is the only place it isn't used enough.It's not only academia, I know of at least one company using it in industry. Otto Motors AMRs are ROS based.ROS Industrial is not compatible with many things beyond Tormach. It's research-focusedROS1 vs ROS2 is in such a weird place where I, still a PhD student, am uncomfortable using ROS1 due to the EoL but ROS2 has shitty documentationin conclusion: its just not ready for industry applicationMy company uses ros, we are in field trials on one project, and in the middle of demonstration phase on another one. We mostly work on large autonomous vehicles.It's very much used in the industry. Mainly by startups.It's my 3rd company I work for that uses ROS. First one was mainly for prototyping (heavy machinary) For the second company we used Ros2 and deployed many AGV's for about a hundred customers before I left. The robot's work perfectly and the software is vert stable. At my current place we develop underwater robots, still in prototyping stage.I know of many other Robotic companies that use ROS.Also consider the heavy support that r ROS receives from tech giants as Nvidia and Amazon.ROS is common for doing development and creating new systems. Most of the non ros commercial stuff started as ROS and then was likely illegally packaged into a ‚Äúproprietary‚Äù software that is almost certainly mostly ROS.Biggest reason is support! Unless the company has a dedicated communications team, it can be difficult to debug as that is a totally different skill set for a robotics engineer. If it‚Äôs a third party solution then you just ask them to fix it.In industry not a lot of people can use C++, the most common complex language I see used is Structured Text.Industry is ten to twenty years behind the state of the art, and it's fine. Industrial machines need to be reliable, and often it's more like LEGO, picking the right black boxes to put in your electric box, and using a PLC to glue it all together.I like ROS but advised against using it internally because of the massive skill required to make ROS nodes. It needs to become more like OPC-UA to see widespread industry adoption.Echos my thoughts.Robotic systems are designed and installed by engineers with significant education.Maintenance for them is typically done by low paid electricians or welders who might have an AS EE/ME/Tech degree but might only know how to turn a screwdriver. Hell, the last time I delt directly with plant maintenance they refused to (or didn't know how to) use a voltmeter to trace down a short.Good luck teaching them C++. Some of them can learn it, but have to be properly motivated ($$$) to learn and companies lack the motivation finds.I would ask why people use ROS instead of something more common like a small Fanuc, Kuka, or ABB robot arm.Here‚Äôs a couple of organizations that typically slide under most peoples‚Äô radar but do cutting edge robotics related work:Lincoln Laboratory, Johns Hopkins APL, Draper Laboratory, SRI, Shield AI, Anduril, Leidos, Lunar Outpost, Skydio, Teledyne/FLIR.A lot of defense ones there. Not that that‚Äôs inherently bad but also not for everyoneNot to forget TeradyneTo answer that question you can look at the list of robotics conferences and check who are the sponsors of said conferences, and which companies regularly have booths there.(top robotics conferences include IROS, ICRA, and RSS)These are the companies invested in robotics and that are looking to hire robotics expertise.Add Universal Robotics and Unitree Robotics to the list.Doosan is a bit smaller but also on the marketJudging from your name I would think you would know Intuitive Robotics at least because of their DaVinci Robot Surgery System.Oh yes! I have heard of them.Also, dont judge on name, its default auto-generated by redditüòÇUniversal Robots (arms) and Mobile Industrial Robots (AMR) are sister companies, though their HQ is located in DenmarkHow about Amazon robotics?Kuka, Fanuc, and ABB are the big games in industrial/practical robotics.Idk what the obsession over humanoid robots is about. They might be cool, but super impractical and limited.Nice. What are you going to do with it?It's being set up to demonstrate a potential solution for a machine tending task for a client. So he might be moving out soon!How much it costs?Quick Google search showed $37k on one link. Not hobby gradeHad the pleasure of using this for a couple projects in my college. It's fun to work with.are they using harmonic drives or planetary gear sets?Hey, interesting question; the Omron TM12 uses harmonic drives. I had to look that one up!I've been thinking about learning more about automation. What sort of SDK does it have (C++ or RUST), would you use a ROS driver? How deterministic is the timing control for picking up moving objects on a conveyor belt?So Omron cobots have their own programming language/environment called TMFlow. One can also use ROS, if desired. For picking objects off of a conveyor belt, TMFlow has a conveyor tracking add-on.what does it do?it omrons.Gonna need a banana for scale hereLiterally just ate mine! I'll take one for scale tomorrow. It's 1300 mm long and around 33 kg / 73 lbs if that helps.Can I "borrow" one of these for my youtube channel?Well, we are in Germany. What would you want to do with it? :DWow, I'm working with TM flow 900 and 700 right now.I'm curious as to why this robot looks just like a Universal Robot. Did Omron buy the design?It's a Techman cobot arm https://www.tm-robot.com/en/techman-x-omron/Do you have a rough comparison of it compared to other cobot arms? Such as UR, Kuka, Kinova, or Franka Emika? Especially on the software side, since that is not reflected in most spec sheets. Would love to know more about itOn the site of the company I work at you could compare the Omron with cobots from UR, Doosan, Denso, etc. https://unchainedrobotics.de/en/products/cobots/That is going to mostly focus on the physical attributes, however. For more in-depth info re software: https://automation.omron.com/en/us/products/family/Omron%20TM%20SoftwareIf you have a specific question regarding the software side of the TM, let me know and I'll answer the best I can!The main costs areengineering time (mechanical, electronics, software)motors and mechanical partsI dare say they are priced to suit the market. Clearly high volume sales can reduce the engineering cost per unit.Yes, and in the industry it's not rare to pay half the list price and less, if you buy hundreds or thousands of robots at once (Car production lines)Also calibration and quality controlIf you're talking about BOM cost, I'd say the "zero backlash" actuators are probably a big chunk. We recently had a vendor do a demo a unit for us who used harmonic drive at each joint.Any zero backlash drive train is going to be expensive, harmonic drive or not.(edit: Just noticed villacherman5 made the same observation )Industrial robotics engineer here: I think that a major part of the price is not made up by parts or engineering or software. I believe that a big chunk of the cost comes from the Quality Assurance component. Let me exemplify. Most robots we see today in factories are either Serial Articulated Arm(classic type, the one that you find in most care manufacturers plants), SCARA robots(you find them in microelectronics or phone assembly) and gantry robots(you can find them in places where you need to move parts over large distances). All these "architecture" types are widely used and are pretty "old"(20-30 years). The know-how regarding these exists in the companies and the kinematic and dynamic models are known and used for a long time. What i'm saying is that the improvements from one generation to the other are incremental and the engineering cost in not that big. Basically they already know how to design them. Improvements come from the motors, say a more powerful motor in a smaller package. The largest part of the price comes from the fact that the manufacturer must make sure that the robot will run 99.99% of the time that the customer will use it. This is a huge and difficult problem. It's mostly the same as in Aerospace, where you need traceability of the parts. You need to know the whole process from which you get a robot. You need to know from where the motor coils and magnets come, from where the electronic components come, who casts the parts that make the body and so on. This drives the costs up, but assures the fact that the customer has the most reliable robot they cand and they can use it for a long time 24/7 in lights-out operation.Do not buy robot arms off Alibaba for the same price as from a reputable manufacturer like Universal.Some, but not all, use harmonic gear drives at the joints, which are a pretty penny. They improve accuracy and backlash, I believe.Software, I imagine is pricey, often you get a license to a couple different softwares; 1) robot controller software and 2) simulation software.Servo motors and their drivers aren‚Äôt cheap, and you might have 4+ of those.In reality, you are paying mostly for all the engineering work to develop these systems.Just adding a little more detail.The motors and controllers are expensive. Relatively anyway. BOM would be minimum $1,000 for industrial stuff and they usually run pretty high voltage / wattage too. For the power regulation and stuff they are pretty awesome. Your typical A4998 or RAMPS stuff isn't going to cut it.Then there's the safety stuff. They have to have lockouts and OSHA electrical things when you've got 400V systems.Also factor in precision. These machines guarantee repeatability at close to micron level precision. Every 0 you add to precision ads one or two zeros to price as you get down to the smaller than a hair level.My day job is programming 6 axis CNC machines that we manufacture and they start at about $500k, but they will run for decades and make the same part perfectly every time to about 3 microns of precision.We have to factor in temperature, metal, cutting fluid, speed and feed rates. The arm is much simpler in comparison, but it's not trivial by any means and we have some arms in our systems for auto loading and unloading of parts.That said because these are not high volume the engineers doing the work are a pretty hefty piece of the cost.The engineering. As raw materials, it's 'melt' value is a few tens of dollars at most. A lot of engineering goes into the part selections made by the arm's manufacturer, and into the actual assembly and fitment of those parts. It's not easy to cram all those pieces into a compact form factor. A lot engineering also goes into the creation of each of those major parts (servos, gearboxes, bearings, and electronics).Markup is often 100% to 200% for the maker of the entire robot, which is on top of the 100% to 200% (or more) markup for the maker of each of the parts. That may sound like a lot - and it is a lot - but if you try building one of these from scratch, you'll quickly find that it is a bargain.If you are an electromechanical engineer or a robotics engineer, you can probably build a 6-axis arm for $6,000 when a similar one would normally cost to about $30,000 from a major supplier - but it will take you months to do it, it will have much more backlash than a purchased robot, and you need the metalworking tools and skills.Probably the software development that makes it easy to be programmed by then end user.It's kinda like graphics cards and phones. In a couple years they drop in price by 50%. Can probably find a renewed one for 30% less. The actual cost of parts is probably $5k and the software is probably a copy of open source software. If you get a cheap chinese knockoff on alibaba it will have crappy documentation and backdoors for stealing your code. What really determines the asking price is how much you save by replacing a human. In my case, I spend $30k on labor harvesting my crop, which happens 2x/yr. So a machine that does what 7 people do would be a bargain at less than $60k and pay for itself in a year.Don't forget tech support. They have to help customers integrate them into custom setups all the time. Hardware service plans can be extra, but at that price point most customers would also expect them to have a service technician ready to hop on a plane with spare parts to fix it.I don't know much about robotics, but have given the subject some thought.Duty cycles and maintenance.One has to be high, the other relatively easy for field work.Primary cost drivers on the BOM I believe are motors, gearboxes and assembly, followed by electronics and testing, then castings. The margins are fairly slim (internal transfer price discounts are not ridiculously high). Some companies on huge orders will discount the robots below cost because they make up for it on service and maintenance contractsPrecision. Precision. Precision.In my case, my company does not manufacture the cobot. We buy it without a motion controller, rebrand it, then attach our motion controller to it and allow it to be used/programmed with our in-house GUI.We are able to sell it at a higher price than we bought it for because our motion controller is much more powerful than that of the manufacturer‚Äôs and our GUI is extremely more intuitive than that of our manufacturer‚Äôs.So, software, engineering time, and support.Hi! I‚Äôve been making arms for a while now.Industrial quality components are wow expensive. Just last week I saw 40:1 six arc second backlash planetary gearbox for $600 each. Then your encoders are easily 18 bit, which start at $200. 800x6=4800 cost of goods before the other parts and costs. Multiply that by four to get your MSRP, ~$12k to start. Then the price rises exponentially with reach and strength.Industrial components are expensive, your paying for a higher degree of engineering and quality than is common in consumer electronics and the end volumes are often much lower. When you start safety rating components they get even more expensive due doubling up on components for redundancy, then there is the testing and certification process which also comes at a pretty high cost.This kind of question about details of industrial robot operation doesn't seem to get a lot of answers on Reddit. You might want to try:Robotforum - Support and discussion community for industrial robots and cobotsHi there, usually when this happens I get an apprentice to sit there and clear the faults as they come up. Hope this helps!Silver flakes = metal shavingsYep.Some places routinely sample this grease and send it out to a lab. This helps estimate how much longer the gearbox will last and determine if the robot is properly configured based on the amount of shavings present in the sampleThis place doesn't seem to do that lolgood luck washing that off your fingerBoth my hands are sparkly now lolFortunately the shavings prefer the grease over my skin, so a little gasoline warm water did the trickTaumoebaPerfect for speading on toastWhat kind of a robot would this be used for?This came out of a smaller fanuc LRmateIs it the Rv reducer???That Idler is looking a bit roughProduce picking - especially for high value items like mushrooms, herbs etc that are grown in indoor facilities would be a good bet. Maybe machine tending for things like small laser/ 3D printers. Non-contact finishing or inspecting operations could be a possibility if you have it paired to some external motion system.All interesting applications. I had ruled out the non-contact finishing because I thought the small reach of the robot wouldn‚Äôt be nearly enough, but your suggestion that an external motion system might help seems reasonable. Can you point me to some examples of such external motions systems so I can get a clearer picture of what it could look like?Ufactory Xarm6 is another 6-dof robot arm in the similar price range (~50% more expensive than ViperX 300S). They showcase their arm in their Youtube channel: https://www.youtube.com/@ufactory8326/videos - I would not say that any of the proposed use cases are super compelling.The only one that kind of catches up is a "robotic barista". Essentially, a glorified vending machine but with more appeal to customers, "because robots".What might become possible with the new-wave robotics, is a robot shef. Like, flipping burgers is now a no-brainer. What's more interesting, is that the same pair of robotic arms could potentially make multiple dishes, including non-trivial ones. I hope that someone executes on that. It may not make too much sense at home (because of cleanup), but would be a good fit for a commercial kitchen, since kitchen crew is always short on cooks, as not that many people want the job.To be more specific, this is how it could be done in a teleoperated manner with mobile ALOHA: https://www.youtube.com/watch?v=mnLVbwxSdNM - the hypothesis is that given a few tens of thousands of hours of diverse training data, it would work without a human in the loop.And here is an approach that promises to make the data collection much cheaper, as instead of having a $30k robotic workcell for each operator, it's just an operator and a pair of $400 grippers: https://umi-gripper.github.io/The idea is that the training data is collected with people, but since the in-gripper cameras don't see what's behind the gripper, it means that once placed on a real robot arm, the trained policy runs well on any reasonably capable robot arm. The website (https://umi-gripper.github.io/) shows a few clips of autonomous policies on UR5 and Franka.Thanks for the comment. Food prep does sound like a potential use case. It actually reminded me of https://www.dexai.com . They do salad prep, although salad prep station is much more structured than most other food prep tasks (and they use more traditional motion planning stuff).It's used in Mobile Aloha Robot for bimanual manipulationYou're probably looking between $30K and $40K. I buy a lot more FANUC's so I don't have recent Kuka pricing, but that is where a robot with that type of payload typically falls.Have you check out the used market?Hit Craigslist. Believe it or not you can get 'em for pretty reasonable money on the used market.For instance: https://detroit.craigslist.org/okl/hvo/6015815740.htmlI know you're not looking for integration costs, but I hope that doesn't mean you think they're trivial. Integration can easily cost more than the bot. Tooling for the arm, tooling to feed and receive parts for the arm, safety enclosure, controls to coordinate with whatever else is there. Just keep that in mind.In the video there is what looks to be a desktop arm with an odrive sticker on the side. Does anyone know what kind of arm that is? Are they really driving it with an Odrive?It‚Äôs a Fanuc LR mate 100i. And yes, Odrives are running the motors, an Odrive is also running the big linear actuators in the claw, there‚Äôs nothing stopping you running an entire robot off of them, it‚Äôll just be slower.I'd look into buying a refurbished robot from a reputable company. You should be able to get, for example, an ABB IRB 2600 (has a capacity of 12kg/25 pounds) for a price that is within even the budget you have for a self built one.Thank you for the info and will definitely look into it, also going to liquidation auctions see if anything would be worth picking up.Industrial robotic FuSa engineer here,First not matter what you do, you need to certify for ISO10218-2 and ISO13849-1 either on the IMS or the robotic cell. If you don't, you are liable for injuries, maim or death...You have 2 type of Robots:Industrial non - collaborative : Your run-out-of -the-mill-robot you see on car production line. Those are hard to program and requires a good deal of knowledge to use them. They can only operate inside a robotic cell and need to be certified (see ISO 10218-2)Cobots : UR5, UR10, Doosan, Omron TM5, ABB GoFa. Are designed to work alongside human with no barriers, but with protective stops system (light barriers, safety lidar, etc) they can detect collision. They are including a PLC and a Safety PLC. It is designed to be "easy " to use and certify.I hope it help in your decision. Talking to an integrator or a company like PLIZ might give you more insight.Really need more information about application, workspace, payload etc for the industrial robot. The brands you list are all reputable though.Depending on application, I might be tempted to look at cobots, as they're probably a little easier to make safe if you have less experience. Please don't underestimate how dangerous robots can be.As for the hobby machine, have a look at the Haddington Dynamics Dexter.pick and place mostly, and i only need one for a payload of 20-80 pounds, placing it on the side of a machine to place it on a belt which heat seals our products, as it just need to extract ice cream from a mold which isn't even 50 pounds. I don't need to go extremely fast but faster then a person would be great and appreciate the hobbyist one boss, is it one you've built?Haddington Dynamics don't understand the first thing about mechanical design of robotic arms. Don't buy that crap... In terms of kits I would say the AR3 is a much better design.I don't know why, but I'm seeing a lot of universal robotics arms nowadays.Usually someone just tells me: " you will use this", so I don't have any experience choosing. But if I were to, I'd probably go with something popular (like a kuka or an ur)Go with an UR, they are easier to program and integrate inside a production. Easier to certify the robot cell, and they can act as a safety rated PLC...You will bite your nails off with the kuka. Just the programming is a nightmare to learn.Is the industry moving to rust or cpp is still the norm?My coworker uses c++ for his programming. But Fanuc has their own programming language . Also we use ladder logic for the hmi and plc to interact with the robot. Usually it‚Äôs like Allen Bradley or Siemens hmi. And for plc I think we mainly use logix.Do they use a robotics simulator at any point?Yes sir! Before we upload our programming into the robot we use roboguide for Fanuc robots and program on the software before using it in real life applications.Edit: look on YouTube for tutorials on the programming side of Fanuc. There is a lot of free material out there. Same with ladder logic for hmi and plc use.What is generally the most difficult part of implementing a robot by into the workplace?are these courses provided by ABB? if so, just go unprepared. they usually start from the very beginning.only thing i can recommend is to continue using the robot after the course. if you don't program for a couple weeks afterwards, you'll forget pretty much everything they told you.(same goes for any other industrial robot arm brand).Yes its from ABB, and yes its very important to continue the learning afterwards to not forget.The ABB course is very fast paced and if you don‚Äôt have any prior robot programming experience the instructor will leave you behind. So don‚Äôt do what the other guy said just watch basic YouTube videos of people using roboguide and be sure to write everything down. ABB has a lot of little stuff about it that you have to remember but the robots are pretty easy and basicIt's robotstudio for ABB. Roboguide is for Fanuc robots.I agree to a certain extent but also think there's a political/hype/PR aspect to getting funding for certain dynamic robotics projects that's pretty important.We're not going to get to human-like control abilities for general-purpose robotics (humanoid or not) by being completely utilitarian.There's also something to be said for a bipedal legged form in terms of being tall and agile and fitting into horizontally narrow human spaces as necessary.A Cassie or Digit feels more like the right path to me than something like Atlas that's shaped a bit like a barrel-chested comic-book hero, but I think a lot of the research overlaps."for the time being our efforts should be better spent on more meaningful robots that have a direct impact on us"I think we do, though. Kuka is like $3bn in annual revenue. Looks like Fanuc is $7bn.Major industrial robot manufacturers are the other extreme from research bipeds: they sell lots of aggressively utilitarian machines that do all kinds of things humans can't do.There's a whole world in between that absolutely is more ripe for short and medium-term private investment than humanoids.Humanoids get a lot of hype and media attention because they're exactly the sci-fi vision of a robot.But they're hardly the main thing going on in robotics.Your idea that "we need robots to do something humans can't" is something I disagree with, and your next line about sorting a bunch of cupcakes proves my point. We absolutely need robots that can do things humans can do. But, they need to do them faster, cheaper, and in harsher environments. Humans can sort cupcakes, but robots can do it faster and cheaper.Also, you have a pretty fundamental misunderstanding. When we design robots to handle harsh terrain, the best designs tend to look like high-dof "legs" that are adaptable and applicable to any number of different environmental factors. It just so happens that humans evolved with similar methods of walking so that we too could traverse lots of varieties of terrain. Bipedal robots aren't designed to look like humans, they're designed to go anywhere a human can and more.It depends, if the challenge was solved or not. Suppose we are in the early 1990s and it is not clear how to program a robot so that it will climb stairs. Then it makes sense to give the project a high priority to either solve the challenge or proof that it is not possible to build such a walking machine. In the year 2020 the situation looks very different. It was shown many times, that walking robots can be realized, and starting a project which is repeating the same ideas again won't improve the situation.An interesting sub problem is if commercial available biped robots are useful or not. On the first look they are because such a robot can clean up the room or deliver the post. On the other hand, the demand for such technology is low. Even normal automation for example a fully automated supermarket checkout is not requested by the economy. Such a product was realized some years ago, but it was never adapted to the reality. the chance is high, that bipedal robots sold by a robotics company won't find customers too.Everyone is entitled to their own opinion and I respect the statement as such - opinion. In my opinion there is a clear usefulness for non humanoid robots for use in manufacturing and distribution and such at this time. This in no way makes the desire to have humanoid robots "a waste of time", humanoid robots in fact would have distinct advantages over their purpose built industrial counterparts. Lets look at an existing manufacturing environment for one, a custom bot who is designed to do a certain task can replace a human operated machine but a humanoid bot can simply run the existing machine. And naturally that humanoid bot created in the human form factor can also operate any other machine made to be operated by humans. So now lets look at the big picture based on humanoid operations of machines made to accommodate humans for a second..... .... a non humanoid bot can be installed in a plant to perform a specific task, but a single humanoid bot can walk casually into that plant and do all of the manufacturing, office related paperwork and billing, all of the packaging and even hop into the drivers seat of the truck in the loading dock and drive the product to it's destination. This is just one facet on the jewel of the humanoid robot dream when we think that our entire world is engineered to accommodate the form factor. Naturally mankind isn't technologically advanced enough to realize a true humanoid bot, but that in no way means working toward the endeavor is a "waste of time".It is nice to have a controversial discussion on this topic - indeed we have the same discussion in our institute from time to time.I mostly agree with u/hingler36You have to differentiate two points:are we talking of short term or long term commercial application?are we talking of commercial application or basic research?For short term commercial use, bipeds are a niche and probably not worth to invest money.For long term, biped locomotion offerstraversability of rough teraingeneral purpose adaptation to human environmentsresearch suggests that copying this spring loaded walking mechanism from nature can allow an EXTREMLY efficient way of locomotion (in terms of energy consumption)Means this is defenitely worth a shot, even thouh the every day life applications are 20 something years awaySilly boy, the whole goal of bipedal robots is to make sexbots. Everyone knows that but you can't just go ask your boss for money to make a sexbotYa, why u trying to make it exactly like a human? Especially for manufacturing it makes no sense. Bottle capping machine doesn‚Äôt need to look like a person(?) it does 100 per second. Are u trying to manipulate my emotions? Maybe they could be some monkey see monkey do part of the programming later, so it would be beneficial for it to be my exact same body form, but otherwise it makes no sense. Robots should be specialized to the task at hand. A humanoid robot is a master of noneMuch of varying groups out there would push for the development of certain robotics-android-bipedial-like research, and it already exists. This obviously includes Boston Dynamics bipedal robots, along with DARPA, but turns out that it takes actually robotics that are just built without these types of bipedals are actually not as agile. So to the OP here, you are actually not correct. Apparently it takes a considerable amount of agility for robots to be able to move on all terrain type that is not granted without this.However there are many groups that would push for such with robotics to be human-like. Certain groups like the military (DARPA is known for it) and other consumer groups would like such.Hopefully you get that dream of the bipedal future, and others. For instance that sort of promise is something that's been promised to robotics, just like the dream of AGI has been the dream of the AI communities.I make robots that swim inside the human body. It's extremely fun, and I believe that it's the beginning of a new market category.Incredible usernameI make robots that swim inside the human body. It's extremely funI was sure it would be a video with sperms... but this guy builds actual robots which swim in human body.What I think will be the most in-demand will be AI/ML research engineers.Being able to collect accurate demonstrations and data for your environment/robot and how to exploit sub-optimal demonstrations for training/fine-tuningBridging the gap between VLMs and robotic control (currently we have VLMs output sentence-actions to robotic control policies), one big challenge is open vocabulary control (even the best language-visual-action models are limited to the action-verbs found in their demonstrations)Two branches will appear: robots that have a stable access to supercomputers and will be able to run MoE VLMs for their control at 10+Hz, and robots that have autonomy and run super-optimized models on edge on super-efficient hardwareWill still need a lot of hand wiring for all the software so R&D engineers will be in demand.There seems to be so much to be gained with existing tech. Good old industrial robots can do a lot.Robotic Surgery will be big in the near future. The DaVinci Robot is the king of the hill right now. But, several companies are working on versions that are less expensive to operate.Hype bubble collapse. Again.Putting the robots to work. This should be the goal, the next big thing in Robotics.Still majority of e-commerce warehouses are human dependent, so are manufacturing, pharmaceutical, delivery and anything they does not require a dependency on human.Do combat drones count? Because what Ukraine is able to do with them is upending military doctrine.Actually used to ‚Äúknow‚Äù someone in that industry, not as friends or anything but it was the brother from the boss from my gf, yeah pretty far away but I thought that was pretty cool.Basically makes drones for the militaryRobotics enabled remote work force. Operators can interact with equipment from home or even be offshore but still produce products in high cost of labor regions of the world.I think the thing we're in right now and the next big thing are the same and that's warehouse/workforce automation. Robots that can fulfill Amazon orders or operate the deep fryer like those that assemble cars. Robotic surgery is also a big thing.What I foresee is, like another commenter said, two classes of robots. Those hardwired and running off massive super computer banks and those mobile ones running edge inference. The big thing that I'm interested in for the edge inference robots is battery and power technologies because that's a big limiting factor right nowNeural Net and VLM all the things.Real solutions. Robots that produce an objective benefit for the owner. The Sandwich Artist Robot is an affordable option.Teledildonics already existIt‚Äôs very possible but also extremely difficult. It definitely helps to have prior internship experience and I would consider a project portfolio with robotics specific projects a must as well. Make sure you‚Äôve developed a desirable skill set and design your resume to reflect that.Source: Have done 3 robotics internships as undergrad (1 at a F500 med robotics company, 1 at a federal research center, and 1 at a defense unicorn). Also got many offers from other smaller robotics companies over the past 2 years.Granted in the case of the unicorn I wasn‚Äôt able to get in as a planning or perception intern, those were pretty much all masters or phd but did a systems software type role and got valuable experience.Best recommendation is to not limit yourself. Build up a portfolio of things that interest you and if you can get through to interviews, let your passion show and build a connection with the interviewers.Thank you for this reply! It definitely gives me a bit more hope and until I gain more experience, I'll definitely look into doing some projects to put on my portfolio.I do have a couple of questions though, and I was wondering if I could DM you about them?What did or do you study?My company takes undergrad interns, but like the other commenter said, they tend to be pretty advanced.This is usually their second or third internship, they've got real software development chops, and they have some cool projects to show off. It might be a little discouraging, but I haven't met anyone who's main qualifications are that they took a bunch of classes in robotics. What was the research you've worked on?Gotcha. That's what I assumed for most candidates. I'm also pursuing internships in mechanical engineering / cs as well but I was really hoping to get something directly in robotics because I thought it'd be more enjoyable.I'd say my experience is mostly split between meche & cs through academics but anything noteworthy is in robotics because I don't have much notable experience other than the research (the research is currently related to simulations using ROS2 & Gazebo).Also, I agree. I don't think I see many people directly taking robotics classes. I've only started taking some this year to learn more and I was also hoping that it'd help me stand out just a tiny bit more (also its more enjoyable!). But I think most people just stick to their sub-discipline of meche/ee/cs and go from there.Im personally not sure whether I should keep taking robotics classes at my uni in hopes of landing a robotics internship or if I should just continue to. focus on my meche / cs classes until I gain more experience. If you don't mind could I get your thoughts on this?I currently have an undergrad intern working for me in robotics. I'm in the R&D space now, but it would've been great to have an intern when I was doing industrial automation and robotics. Learn ladder and function block diagram programming, even if you don't use it you'll stand out from your peers.I'll look into this. Thank you!I am hopeful about getting an undergrad robotics internship. I've actually got an interview next week for one. I contacted the company directly about an internship back in October and have been persistent about keeping in contact. I don't have a ton of other internships or other projects under my belt, I'm just a regular mechE undergrad. The things I have going for me are my CSWP (working on CSWPA certs got DT done), and I started a personal design project of a robot arm in solidworks to add to my portfolio. I was told by another company to do a personal project and try to get a simulation going in ROS so that's what I'm doing, and I'd suggest the same to anyone else. Something I've heard from some others is to try to set yourself apart by doing literally anything in ROS as many companies use it and most universities don't teach it.I am heavily involved in recruiting Co-Ops for my company and I can share a few things:I would point out here, that with my company at the very least, hardware engineers have master degrees, software engineers have PhDs. This will change as we get bigger (we are a startup), but the level of work that we do is reflected by this.Hardware interns are easier to hire from undergrad as it is easier to help the hardware engineers from an entry level standpoint. Our hardware kiddos help with drawings, manufacturing, and eventually improving the designs of systems they have been around. This is a core reason why my company chooses to hire only Co-Ops over interns as they can experience a product lifecycle before making changes.Software interns are harder if not impossible to hire from undergrad. Software is fast paced and if not overlooked well, detrimental. The one undergrad we hired actually negatively impacted the system they worked on, requiring reworks after the fact. Much of our current software needs are on perception and communication which is rather advanced as most applicants we get only have experience with small amounts of Python and Arduino (which is a great stepping stone!).In terms of who we have hired, hardware Co-Ops always have some sort of technical org experience, preferably ones that demonstrate leadership or iterative design. They either need a portfolio or be capable of demonstrating knowledge of manufacturing techniques, e.g. worked at a maker space. We hire sophomores and juniors.Software Co-Ops are students with experience in lower level programming or rewriting ROS code. We have not had as much of a software pipeline developed for these students so they tend to come from labs which we have contacts in. We've had success with high level motion planning and perception since ML is rather in right now.Other tips to get a job here is to have a good network. It gets a resume straight to my desk. I have a list of contacts in student orgs that I will call up and ask "is this kid good?". Generally speaking you should try your best to network and realize that this could include being a great partner in a group project.Literally intern anywhere you can. Don't hold out for a robotics internship, an electrical or computer science or mechanical internship will do you fine. Those are a lot more prevalent than robotics internships and will give you a healthy dose of company-side experience that your actual robotics employer will love when you graduate.Don't be afraid to apply to places as a technician either, just get something.W. Grey Walter has been credited with creating the first electronic autonomous robots. Here‚Äôs a clip of him with his robot tortoises.http://people.csail.mit.edu/brooks/idocs/grey-walterBBC.movI would throw in davinci robot for surgeries in thereohhh great tip, thanks!Nikola Tesla's "teleautomatics" research possibly.1976 ASEA (now called ABB) releases the first all electric industrial robot. The ASEA IRB-6 .Previously they were hydraulic.The Golem reference makes no sense. You could talk about automatons of the XVI century as precursors of automation, notably those from Vaucanson and Jaquet-Droz.First of all keep applying for roles. Connect with local networking groups, startup space might be interesting?Start your own projects, contribute to ROS and other open source projects.I say apply for those 5+ exp jobs. Maybe you're the only one that knocks on their door, right? "you can hire me now or you can hire me later when I'm more expensive. your choice."I understand your pain. It might be the Houston market, not you. Go where you're wanted and needed most. That might mean relocating to somewhere like Missouri, Arkansas, Michigan, Illinois, Ohio, etc - where they have tons of jobs for people with your level of experience and training. Sometimes its as simple as you being willing to migrate to where you are in higher demand. As someone currently working in the industry, you'll get hired quickly by applying to jobs in those states mentioned above. Especially if you can pass a drug test. Much success to you. And keep us posted.An update I guess lol, I actually got a job at Amazon Prime Air in College Station as a Support Engineer and Trainer for flight crew there. I was there for a little less than a year but then earlier this year my whole department got laid off pretty much. I'm in talks with a technical training distribution company and could be a traveling trainer for their tools and equipment if all goes well.I think you'd have to know some software as part of the troubleshooting. Sensors, motors, switches are all connected with the operating system so your going to need to probably have a good handle on at least what system variables are doing what. Error codes are great, but from my experience can be misleading.Edit: find a machine tool distributor and tell them you want a job in maintenance and repair. You'll get a good look at what the customer is and what the work is. I can tell you that manufacturing equipment maintenance and repair will never go away, and pays well.As mentioned by other poster, repair and maintenance is a great choice for the sheer demand it would have. But, even maintenance engineering would transform - think of it like this - automobile maintenance some 30 years back was far different from today - cars are flooded with sensors nowadays. So, even if you start with pure mechanical focus, you have to improve on electrical, electronics and software parts eventually. As suggested by others, mechatronics makes some decent combination of all above as foundationMechanical engineering and Electro mechanical engineering technician come to mind but you will need to know some cad and probably some programming.If you don't mind things like GCODE then CNC operator or machinist may also be up your alleyMechatronics might be the best compromise.You sound alot like me! I just graduated from community college for robotics and Automation. I'm on my last stage of interviews for a job as a field service/installation technician for a small robotics company.I made sure to post all my personal projects and class work on my GitHub profile and linked it on my resume as well as listed all my skills I gained from school and personal. I'm also coming from food service like you are too.Mechanical engineering potentiallyThere are lots of jobs in this field! Look for ‚Äúrobotic assembler‚Äù positions when you search for jobs in Indeed.TechnicianIndustrial electrician for a machine builder/integrator baaabbbyyyyyy üí∞üí∞üí∞üí∞üí∞There is a program at the community college in Alexandria MN that feeds Douglas LGC. They are high end vendors of laboratory automation. Their service techs make decent money and travel all over the world.Field technician, testing technician, qualitySemiconductor industry as an electronics technician. ASML is one of the best companies for practical robotics usage today. It‚Äôs definitely all about practical automation but there will always be a need for humans to do preventative and corrective maintenance on robots!At the robotics company I work at hires a lot of technicians who do most of the hands on work (wiring, diagrams, assembling). So going to trade school may be a good option. Definitely wouldn't hurt to have coding experience though.Not sure if you are looking at industrial robotics or more general, or more specific like mobile... I can give you some insight into the industrial side though. The companies that install robots in factories are typically called ‚ÄúSystem Integrators‚Äù. They will take an off-the-shelf Fanuc (or Kuka,ABB,Reis,motoman, etc) and do the plans/wiring/installation into the rest of the assembly line(large variety of projects, so might help you narrow down what you like).That said, every factory I‚Äôve worked at has done their own maintenance, very rarely did we ever call in a tech once it was installed. So if you are looking to go deep in a specific system (know it inside and out), that might be a route for you.I‚Äôve done both. I prefer the integrator route. You are in and out. You don‚Äôt have to deal as much with company the politics of a global manufacturing company, and you get to see a variety of projects and processes (machining,welding,metal stamping, plastic molding, paint sprayers etc.)In terms of education, I started as a full 4-year mechanical engineer, and I was mostly involved in design. My wife (also considered a robotics engineer) went 2-year associates and worked mostly with the ‚Äúturning wrenches‚Äù and ‚Äúrunning wires‚Äù side, and much later turned to design. (Like any trade, it can take a toll on the body).If I were to give some advice, the higher an education you can get, it opens more opportunities, but also costs way more if you find out you hate it. I might suggest then a two year associates directed towards system integration specifically. Something (similar to) the ‚ÄúRobotics/automated systems AAS‚Äù degree out of Central Lakes College, Staples, MN. Or the ‚ÄúAutomation systems tech (Robotics)‚Äù out of Waukesha County technical College in Wi.They give you a wide variety of disciplines which is hard to match in any other program. Typically you will get some experience machining, some electrical, some programming, and typically you will have to complete several integration projects, which look great on a resume.These are the two I have personal experience with, but there are a ton of similar programs out there. And if you do well, these schools are constantly getting hired from by integrators. (At least we always were)Good luck!! It‚Äôs a helluva field, and definitely growing. And growing FAST!!Thank you, this is an absolutely amazing comment and just the information I was looking for. I knew the field was growing with the rise of factory robotics all I wanted to be the one that works on them. My mindset is to definitely try to specialize or know one system in an out, as I am aware that will be the best path for a higher wage later down the line.I will most likely be able to transition to a more specialized degree after my 2 years if i find a discipline I like more than others. Thanks!I started with a similar passion, I got into building drones in the early days right out of high school (2011ish). Taught myself skills like microcontroller programming, soldering, laser cutting, and PIDs. This hobby/passion led to a couple failed startup companies, personal and as an employee. Along the way learned CNC programming (GCODE), and built a few cnc routers and 3d printers. Got a more legitimate job at a well recognized small engineer company doing basically robotic parachutes. I got married ~4 years ago, and my SO talked me into going back to school. I chose the electrical path since I had already learned a lot about the mechanical side, 3D design and CAM. Just finished a degree in black magic this month, and about to start my first day at a aerospace firm today.I would try and obtain as much experience as you can along the way, and it will expose you to more broad topics and might run into what you enjoy more, and focus on those subjects when in school.Sorry for the rant, big day!What rant?If you don't mind a bit of math mechanical/mechatronics engineering is great and it opens you up to designing and building new robotsIf your working in fast food now and want to switch to somthing that is more applicable, try get a job as a vending machine service/stocking or cash ATM machines.I have to assume their names are Pick and Place.I wish every robot had googly eyes. Seriously.I get that this is at some kind of expo and looks impressive to "buyers", but that's gotta be a couple million quid way to overengineer some pretty simple conveyor guide rails and grouping stopsAs far as I know this system is on display at fanuc in Rochester hills, mi.u/savethisvideoPair a suitably sized BLDC with an encoder and a FOC controller like the ODriveIsn't a brushless DC with an encoder just a glorified servo? I'd love to know how what you suggested would be better than buying a high-torque servoWhat you are looking for at this scale is sometimes called a 'joint module'. They integrate a motor, driver, gearbox, bearings, and housing into one unit. They are often used on things like robot dogs or cobot arms, and are readily available in torques from 1-100 nm. Expect to control them over some kind of serial bus (CAN, modbus, rs485, etc) and supply them with high current DC in the range of 24-72 volts.'tonifishi' is an OK balance of cost and quality, but expect to pay $300 for 6nm rated torque (continuous duty cycle, at rated speed. Not stall torque). 'good' robot arms for a 1kg payload made in moderate volumes in a Chinese factory cost several thousand dollars, and it is unlikely you can match the quality while beating the price because the configuration is so standard.If this is an educational thing and budget is limited then I recommend scaling down the scope of the project (reach and payload) until you can use 'bus servos' (like dynamixel knockoffs) to achieve your educational goals (kinematics etc). The waveshare bus servos are under $100 and allow you to set not just velocity, but also acceleration parameters and control loop parameters (gains) as you see fit.I hope this helps!I geared down a nema17 1:20 and got about 5nm of torqueI suggest starting with stepper motorsWe're opposed to using steppers because of the high current usage. And like I added we have a higher torque servo, we just want something higher quality and better to replace it.Arm specs are: 60 cm at full extension, and 1kg load which would give around 6Nm required at the base.That's assuming a weightless arm, so I'd presume you need at least double what you're specifying.Top-down and bottom-up design strategies are specific to your requirements. Since it appears that you know the exact items you intend on manipulating, and their mass, center of mass, etc, then top-down is probably the best approach.As far as motors go, there are tons of options out there. The ClearPath line of integrated servos are a great value. Pair with a gearbox to reach the desired max torque.Oriental Motors has servos with gearboxes. They are not too expensive for industrial quality.Multiturn ‚Äî no problem.  For your goal i would recommend hollowshaft frameless DDR coupled a reducer. This will give a decent torque feedback.   Try Chieftec, Kohlmorgen, or Thingap.  Then go and cherry pick your bearings and encoders. Moog is too expensiveSounds like you need a motor that can handle the torque like a gym rat on leg day! üí™If your hitting stuff then go slower. Also make sure collision detection is enabled and you might need to adjust the sensitivity.Safety first, always be aware of where you are in relation to the robot. You should never be in a position where the robot can hit you unless you are in teach mode and have control of the robot.Edit: For upside down robots make sure you have it configured as a ceiling mount robot. This may be your the reason your having trouble due to the coordinate system being upside down.The robot should be sturdy enough and have enough safety measures to not damage itself.In my field its rather the worry what the robot will destroy.Machine door at round about 1000‚Ç¨, machine head starting at 10.000‚Ç¨, products at the high end at 100k‚Ç¨, machines from 100k‚Ç¨ to half a million.And above that human damage, which should be impossible because of safety walls/cages/zones. That is also the case for you, right?So the question is:Why are you running a freely moving robot at high speeds?Would preprogrammed waypoints help you/be enough?Do you need additional safety features, like i could imagine a light barrier along the segments of the arm? Capacity sensing? Cutof as soon as the motors strain?You can also set parameters to were it won‚Äôt be able to hit the solid objectsThe top most priority when working with robots is to not endanger yourself.With that out of the way, a robot that crashes almost always has to be recalibrated, and might perform less accurately in the future. In any case, a robot that collides with something runs the risk of you losing both time and money.I work at a university, and if a student crashes a robot (which many do), it costs a lot to fix, and all the planned experiments are halted. This is why we have simulation software and security systems in place to minimize the risks.So, solutions: If the objects you're colliding with are static, you can add boundaries to your robot's workspace, making it impossible to collide with them. You can also run simulations beforehand to make sure that it does not collide. If the objects are located at different positions every time you run, you should run the program in very slow speeds, so you can stop the program if you see that it will collide, or at least if it collides, it causes minimum amount of damage. You can also add proximity sensors which stop or slow the robot when it comes near an object, or a break sensor at the wrist, so that if the end-effector collides with something, the wrist breaks off, which absorbs the impact and stops the robot. If the objects are moving, then your in deep waters. You would then have to find a way to track all the objects and adjust the robot's movement accordingly. Depending on their movement and many other factors, you might need vision systems, optical trackers or something similar.Maybe program the robot in a simulation environment first if that is possible.Some robot controllers come with a really useful program called Cubic-s. Something to look into if you‚Äôre having issues with users crashing the robots a lot.You could use code and algorythims to make sure your robot doesn't crash!Hi! A Robot hitting a person or object could be an extremely dangerous situation. You should definitely make sure you are using collision detection or dual check safety software. In edition, slowing down your speed could really help.If you are in a position that makes you feel uncomfortable asking coworkers how they keep this problem from happening. We offer a free support line that you can call for help.740-251-4312 ext 122 and one of our technicians can help you figure out the problem!I've bumped a few robots into other robots or fixtures. Usually their collision detection is pretty solid and nothing bad has happened to the robots.Having work and safe areas set in helps prevent loads of collisions, always manually run your boys patching many times increasing speeds. If you are running them on auto you can turn down their speed so you have time to stop them too.Often my biggest concern is damaging the end effector, custom fingers / pneumatic cylinders are quite expensive to replace.Run at slow speeds and execute line by line when you're testing your positions.Why the fuck are you dry-running at high speed with such imprecise coordinates?It is not that i dont test my programs before running in auto mode, moreover it happens in teaching mode or when tactile searching adds an offset in z and I‚Äôm just touching the hood with the tip of axis 2.Jog slowly with short pulses.Test your coordinate system in free space, and literally write down what buttons cause what motions.Make sure the robot you didn't mention the brand of, has it's collision detect setup.Are you crashing into things like walls or the work surface? Because you should be able to define those as boundaries in most robot systems. If you're crashing into workpiece or fixtures, maybe just go slower. A few little bumps won't hurt anything though.I usually work with turning manipulators. Different workpiece means various elongations of the wp extents that get closer and closer to the robot itself. There is no simulation and therefore some risk that they touch the robot.No! I don't worry.Shit happens, Insurance exists for a reason, and it's my job to Try not to crash them in the first place.Robot crashes & Damage are Expected, accepted, we just fix the equipment and move on.Crashing was never my main worry for damaging the robot. The ones I worked on were usually shared platforms that different teams did different things on. But if one team misplaced a + sign in their control loop, bye bye pan tilt motor assembly for example. And damage usually pushed all schedules off, since fixing a custom built platform usually takes time.In the end robots are dumb and blind and only great at repetitive tasks.As previously said in the comments robotics is a combination of many disciplines: perception, cognitive, dynamics, control and human robot interaction.Currently everyone uses ROS which is a very usefull tool but still need a lot of development in order to make the developments of robot more efficient.If you could standardise the tools needed for robotics and create an easy to use GUI it drastically increase the development in robotics as people could focus on creative development.I don't think GUIs is the big missing piece. GUIs are very easy to write and there is basically no research effort in that direction. If it were important researchers would be paying more attention to it.To me, the big things missing are three, in order of relevance: a) adaptive AI, b) cheaper safe actuators, and c) soft sensors to ensure safe interaction in the environment.a) Robot AI is restricted to very simple environments (e.g., RL type of approaches) or/and very brittle (traditional task planning-based control). This limits the applicability of robotic solutions.b) Cheaper safe actuators are needed to ensure robots' and people's safety, especially in learning-based approaches.c) Cheaper soft sensors would allow robots to gracefully fail, as humans do (humans are way less precise than we realise).Education and awareness.I sell robots, and machine vision, and see a lot of low hanging fruit. Stacking boards, pallet moving, doobie rolling, soldering, paint spraying, dipping, screwdriving, etc for robots. Lid detection, visual inspection, detecting absence of paint, calculating bend angles, detecting black grease on fresh metal, etc for cameras.For every cutting edge application that gets attention there are 10 unsexy applications that a 55 year old manager oversees that can be done economically with robots or machine vision. Problem is that the 55 year old manager is wicked smart at keeping his factory going, but doesn't have time to investigate new ways of doing things. They just keep doing what they are comfortable doing, which is exactly what humans do.Once I show them what the technology can do their heads explode and they come up with all sorts of uses. Almost none of them would be considered boundary pushing. The basic knowledge that I give them in an hour long meeting is what's missing. Technology is not the problem.You're basically asking, why don't we automate all the jobs away. Becase wage slaves are cheaper than robots. When that changes, you'll see industrial robots everywhere.But for that to work the society can't stick to capitalistic measures. There will be more people and less jobs for people, so how will that work out if we replace people with automation?A social framework is needed before complete automation of our lives.Social acceptance.The automatic elevator was invented around 1910 but took decades to catch on. Why? Because people didn't trust them. Similar thing with robotics. We think they will take our jobs, grey goo apocalypse, skynet, ethics, etc.Algorithm wise, perception is the biggest problem. I‚Äôve read Russ Tendrake‚Äôs under-actuated robotics and I‚Äôm aware that controls is hard, but perception and particularly the perception -> state estimation pipeline is still basically an ill posed problem. Research groups at big companies are still competing for government contracts on really basic perception problems like change detection in satellite imagery. Deep learning segmentation has plateaued. Every company has their own suite of data labeling, storage, and image processing algorithms. This part needs to be solved firstSoftware (AI) is the limiting factor. This is how I am working on that: https://github.com/rand3289/distributArhttps://github.com/rand3289/PerceptionTimeThis is how I am working on making sensors cheap:https://hackaday.io/project/167317-fibergridThis is how I am working on making actuators cheap: https://hackaday.io/project/171924-braker-one-robotRobots are already cheaper than the human they replace. The big issue with robot arms at least is the terrible UI and lack of software tools, which makes basic programming far more difficult and time consuming than it has any reason to be. AI is not needed or desired for the vast majority of production automation, and instead simple reprogrammability is what is needed for low volume, high mix applicationsIn part because of investors expectationsRobotics = mechanics + electronics + programmation + industrialisation + ... the economic bet of the return on investment is not as interesting as other trendy fields focusing on software only.Robotics requires mastery of multiple fields of technology. Industrial and university applications already have a lot of successful robots though, so I think we're on the brink of an explosion in personal robotsI will add that machine vision would help a lot of material handling and fabrication operations for ease of programming, better adjustability, and better crash prevention, but AI is not required for thisI'd say that manipulation of objects is definitely a really key sticking point that I havent really seen mentioned here. We don't have a good method for grasping and manipulating objects at all and the methods we do have are so data hungry that it's almost impossible to actually use them effectivelyPhilosophically? Universal basic income. If we take care of our humans, they won't be afraid that the robots will take away their income, and will be much more willing to automate.From an engineering standpoint, I think the comments here are pretty enlightening. I really liked the comment about soft sensors letting robots "fail gracefully"I'm working on a project to map what is missing. First version should be live in few weeks.Although the cost of robotic systems have decreased they are still high for SMEs which can really benefit from robotics. In high-mix low-volume production you need robots that are agile, meaning they can adapt to unforseen situations, think by themselves, and be easily reprogrammed for new tasks. The software aspect of agility is not here yet even with great progress made in academia.Also, some aspects of robotics such as grasping and manipulation are still being researched. A 3 yo can grasp a glass but a lot has to be developed to achieve this with a robotic arm.I do not know enough about ROS (yet) to understand the depth of the question and the complications that are found in dealing with random vendors control boards.Open Source should not be a business idea. It should be a basic foundational expectation.The current vendors have to see the value in not having to build the interface languages and know that the open source product will be better than anything they could build alone.They have to be encouraged that the security of having the code base in the open environment is worth losing customer lockin to their aging platforms.Thanks for the input!It is a lovely idea and I think the main problems groups run in to when they try to do this is they lack an understanding of incentive alignment. Open source is fine, but if you want cross compatibility with companies like Fanuc and ABB, you need to understand what would incentivise them to enable rather than block this compatibility.One of the big issues with open source stuff is liability. When something goes terribly wrong, who is responsible for making whom whole? If ABB sells a customer a robot and the customer uses an open source controller and the robot crashes because a load within the loading range of the robot but outside the controller tolerance weighs it down, is ABB responsible for selling a robot incapable of holding the rated weight? If the controller is responsible who pays for the damages?Also with open source what incentivises companies to keep innovating that product line? First, most open source licenses have a viral trigger so anything novel developed code wise has to be publishes and any advantage gained by their development is immediately accessible to competitors, in addition, they have tons of active development for free.I'm not saying open source is bad, I'm saying applying it to an industrial environment requires and innovative breakthrough I have not yet seen.What do you think about a generic controller that could operate seamlessly two different industrial robot manipulators?I think it's a good idea. The company I am working at is using increasingly more Fanuc than ABB for solutions due to some business deals, so the software guys had a project that would allow Fanuc to be programmed using some existing ABB code (since abandoned). So I know there is a use case here for a generalized solution.I'd also like to work on a project like this.Looks good. What software is this? Will you be posting your work to github?It‚Äôs my self written one for my robot project. I did it in processing - and yes I plan to publish itWhy not just use ROS?Cuz I wanted to learn how it‚Äôs done. And I like figuring stuff out.. But I ll do that too soonThat‚Äôs a pretty big velocity excursion on joint 4 toward the end of the trajectory. It would be interesting to see if the robot could actually execute that in real life.Ever do anything with a fanuc robot?Nope why u askingWhich article/book are you following? I am doing something similar from 0 with a delta robot. Also, does the use of the 3d files in processing takes a lot of cpu power?Please post when you publish on GitHub! Would like to see the code.Looks like a fanuc rj2 s420!!Now THIS is the kinda top quality content I signed up for.Worth the watch to see the work put in.This had me in suspense!!!I call shenanigans! The pieces of chocolate switch position while the arm is grabbing the top piece of the cracker.Best use of heavy machinery ever.First you take the mallowwhat exactly is a smore? we dont have them here in the UK?is it just an ice cream sandwitch. is this a good example of a smore?Doesn't seem a lot for $6k, I mean it's 5 motors and control circuitry and some cut aluminium sheets, depends what the motors cost though,It's with the mobile platform and all aluminium. I would say it's kind of the expected price.I wonder about the precision though as it was bouncing quite a lot in this video.I mean‚Ä¶it‚Äôs only 6k. I‚Äôve seen replacement components on a fanuc cost more than that.source: https://www.youtube.com/watch?v=YGMr6m95MDkI can't see his helmetOh my! I want one! (or two)Time to boost those in between weld trajectory speedWhere are you still using those older kuka models btw? Old machines reused?nice, where are you located?Who's the manufacturer of the laser(s) and how many kW?I highly recommend contacting Fanuc for help directly. They have some good applications engineers that can answer just about any question you may have.That doesn't look dangerous at all!I've decided that it is a combination of programmed movements initiated by an operator. I've seen some very close timing performed by Penn and Teller, but I just don't think the whole thing is running a script. Plus, they definitely had a special chair :)Thanks for the cross post :)Good thing it wasn't a Fanuc arm, they would have had a fit.What Miranda is this? I can‚Äôt read the writing on the side. It looks similar to the ABBs we have at work, but they are the newer models that are off white. But I know the older ones were a color like this.finally.a real game chair for playing call of duty modern warefareHas potential to be a very expensive VR gaming chair.It would be good for any game that has the premise of operating a vehicle while sitting.Not ignoring how much work would have to go into making it safe.just waiting for them to turn the wrong axis and all that oil spills out.Fanuc m10?This makes me so excited for future surgery.Both my wife and I have had robotic surgeries. Mine was a 3 arm and hers had 7 arms. Much different surgeries with a robotic bond.Cool! We use Fanuc robots at our place...they're about 6 years past end of life....still going, but a maintenance nightmare with tons of downtime.Fanuc arms and Leoni harnesses? Good combo. What guns are they?Indeed, both are excellent companies. At that time, mostly older air over oil. We were changing out to servo weld guns when this was taken.PMA tube for cable management? I don‚Äôt know who thinks putting a solid tube on a robot that is twisting is a great idea.I have Star wars ep II Attack of the clones flah backs rnAm I the only one imagining all the interlocks between robots and plcs.!Essentially more of a switchboard function with zone clear/not-clear dominating the traffic.Man our kuka robots make those look like something from an early 90's movie.Robotics sw engineer for a defense r&d firm in north east us I make 110k 4 years experience with bs in eceCan I ask how you get there? I'm studying for a BS in ECE right now and am wondering what I can do to get somewhere like that.What kind of controls work are you doing? That seems low, but I have noticed there is a big pay difference between factory automation work and robotics / hardcore control theory work.I bailed from my PhD with an ms in mech e with a specialty in control theory w/ a starting salary of 80k in the midwest. Moved to the west coast working at a robotics startup for 4 years and then back to the midwest as a research scientist making 115k at an aerospace research lab (w/ ~4 years experience). I know a decent number of people in California around the 200k mark working as robotics specialists. The principal engineers at the research lab I was at in the midwest were making just shy of 200k.I'm pretty interested in your path, I'm currently in a BSME in the Midwest doing a few robotics team clubs in my free time. How did you get the contacts for the research position, if I may ask? As well as the startup, and what did you like about 1 over the other?Sorry if this is a lot, not many of the engineers around me do much "fun" r&d.Ceo is probably both the highest and lowest. Start ups often don't take profit so the CEO gets nothing.That's the truth. Software engineer with a graduate degree. I'd be getting paid a lot, except I'm the CEO.But I'm worth millions on paper! Not on paper money though.The person who owns the means of production.easy.the highest paying job in the field of automation and robotics belongs to jeff bezos of amazonApply to Tesla and Lucid MotorsTbh tesla pay is pretty terrible for what you do, they can get away with it though because people deal with it in order to put Tesla on their resumes after they burn out from pulling 80 hour weeks for 2 years.Well, generally speaking software controls engineers make more than those in bespoke engineering roles. If you can code, emphasize it in your application and interview process.Raw salaries are pretty useless unless you‚Äôre talking about a specific region. The cost of living in the Midwest is vastly lower than the cost of living in urban California, for instance.All that said, nationwide the average annual salary for ‚ÄúControls Engjneer‚Äù is around $75,000. So if you‚Äôre living in Anytown USA, and you‚Äôre early career, your current compensation is commensurate with that level of experience. But there is definitely room to grow as you gain more expertise and seniority.My best advice is if you are interested in changing jobs, find an industry that you like (e.g. automotive, manufacturing, logistics) and look for the positions that speak to you there. You‚Äôve got a lot of options in this field, there is still a good amount of demand for automation and controls engineering even in these crazy times. Good luck!It looks like robotics is getting flooded by scammers... Other than people that sell you what can cost them a few dollars in 60$ kits, now also professional robotics scams us? But tbh it looks like a lot of fun, I hope you'll be able to reverse engineer a very cool software. Don't forget to show us what you come up with!If you mean neura-robotics.com -- looks like they have 65 job openings at least, so...maybe they need some help? :) (What model is it?)"that my company bought and assigned me to" always makes me suspect it's a "someone got a great deal!" and is covering their butt too after buying some scrap..."that my company bought and assigned me to" always makes me suspect it's a "someone got a great deal!" and is covering their butt too after buying some scrap...Gotta use up the rest of the budget!When you mentioned alibaba, I did a quick search. This one looks very similar to the one you're talking about:https://www.alibaba.com/product-detail/Hans-Robot-ROS-support-6-Axis_60769367967.html?spm=a2700.shop_pl.41413.53.13477121zKOsiqXD at least we got not that heavily overcharged I guess :s. Maybe I have better luck with alibaba customer support.Your post made me curious, and I poked around the neural robotics website and I did find a user manual and a software manual for the LARA 10.. it was in the media hubhttps://media-neurarobotics.px.media/collections/6/mediaHere is the link for the software manualhttps://media-neurarobotics.px.media/collections/6/media/1199611933The manual appears to contain some URLs to download APIs and whatnotIt still looks a bit dodgy but it's looks like it might be enough info in there to get you up and runningHope this helpsHey thanks yes I did found that later after posting this rant. funnily enough to get python page u need a password? Maybe software is too pristine for us mortals to even see without permission? Anyways I seemed to have stir something cuz someone got in contact with me so maybe I get the password without looking the raw JavaScript this time. Anyways it shouldn‚Äôt be this bad to get something running.Kawasakis original cobot, Duaro, was pretty bad.Poor software and dual arm cobots just were t popular.I‚Äôm curious how neuras arms will be. The thing about cobots is that there‚Äôs really only ONE cobot company and it‚Äôs Universal robots. All the other robot companies have cobots but none of their staff are really equipped to support them nor do they want to support them.Fanuc's CRX is actually pretty decent along with ABBs GoFa programming and testing both those.UR wins in many cases not because of their arm but the really good ecosystem they built up through other solutions like vision, EoAT, conveyors and communication protocols.Neura Robotics is a heavily funded German company that is really putting its eggs in the basket with AI enabled solutions. However, all we have really seen deployed from them is basically machine tending and pick-place.Read contract and sue them if possible.Dear u/Celestine_Ssorry to hear that you are facing some issue when starting using Neura products. There would be some issues in terms of communication between delivery channel and supporting.Long in short: We are a serious company located in Metzingen, south of Stuttgart where we do R&D and manufacture our products; we mostly focus on B2B sector, hence there is always channel that you can access to have documentation, support and so on.Would you mind suggesting me how to get in touch with you to resolve your issue? It can be:- provide with me your product serial numbers; or- provide with me your working place; or- provide with me your contact info.We will get in touch with you.Sorry for any inconveniences.CheersThis is a German company, just write them an e-mail or give them a call. There is certainly also information on the website.If someone else finds in my same shoes I ended up finding a repo from a third party that seems correct. neurapy I got no idea if this is even up to date with the unit but being 2 weeks I guess we will find out.Hi u/Celestine_Sthis is not our official resource. We have been planning for open-sourcing some of our materials but this is not from us. Please use with care!Please again contact us so that we can support you for the case!CheersNeura was to most hyped robot company in the recent years. On the trade fairs they had the biggest booths. They claimed to have attracted the best talent (e.g with all that Chinese money). It's really interesting to read this post since they do a lot to be perceived the opposite. Me and some colleagues have been skeptical from the beginning because of the incredible pace of development Neura presents to the public. While other companies need decades, Neura claimed to have reliable solutions within 3 years or less.Still I'm excited for their humanoid :-)Start simple and have fun! An arduino is a good idea to understand code logic and there are plenty of ressources online to learn. You don‚Äôt need a shitload of code to move servos.My first little idea was to make a little robot camera, that just moves 180 degrees back and forth and films. To give me an idea of how to work with servos and stuff. Loljust a thought.youtube has several tutorials for hooking mechanical to electrical to software.the same can be said for your preferred internet search engine.but use the same technique that neanderthals used to eat a mammoth.one bite at atimeStart simple and small and I prefer you first do some programming only without hardware stuff. I can‚Äôt explain my happiness when I first discovered the processing language. It‚Äôs based on Java and also integrates very well with Arduinos. Besides you can make cool animations or drawings. Just practice as much as you can by making all distractions off. You gonna really love it. Then interface your Arduino directly with processing and make cool GUI for your projects with direct input / output to Arduino.I mean I've done a little python scripting here and there before, that's it thoThats kinda a big question. Are you looking to start a whole assembly line or is this more of a "in the garage" type project?I may be wrong, but usually welding is done in an assembly line type process or in cells, where you have designated welding bots, and the parts come down the line, sometimes put in place by other robots. Overall a pretty extensive project. Are you looking for tips to start from scratch? Or looking for robot suggestions? Or just looking for welding end tools?we have a business that builds cattle panels everything is hand welded right now I'm looking into some alternatives to just having man power.If you're starting from scratch, you can't do this. Well, you can, but you'll have to go to school to study welding and robotics. We can't help you here.don't give up on me that easy I believe in the power of the reddit user y'all can help me get pointed in the right direction.Depending on how ‚Äúofficial‚Äù this is, and how skilled you are at setting up robotics systems, you could probably get started at around $10-20k if you‚Äôre really on a budget. Or have an integrator come in and do it for way more. You need 3 basic things, the fixture, which holds all the separate pieces in place. the welder, which would be a MIG welder with an external start/stop input. And the robot, most commonly used welding robots are Fanuc Arcmate ones. Depending on the condition they can range from $2-20k for used ones. Then you have to program it all so it works correctly and set up light curtains and or a cage around the entire thing for safety.could a setup where its hand loaded on a jig welded up, flipped and welded hand pulled off just to get it started?I'm interested in seeing how others answer this. Fanuc is a great opportunity but it would pigeon hole you into a very specific system but vision is becoming more and more important. I work in the metrology field in tech support and vision based acceptance of parts is becoming larger especially with batteries. I feel the python / C# programming would really help you long term ad it would keep you open to future changes. But idk again I am interested in seeing how others answer.Fanuc software is for fanuc and similar industry systems. I doubt they will use other open source tools (ros, move-it, orocos?). If you want to be in that line of work that's a good place to be. The software probably won't translate to other industries. My guess is you will be using the software, not designing/programming it. If you want to be an industrial robot arm person I'd choose that.C# and python I'm guessing you're doing Unity integration? This is what some of the more r and d type work is moving towards. There are lots of other opportunities if you have these skills, and it will open other doors not necessarily limited to industrial robotic arms. I would love an ME who can program...I basically program all the MEs stuff for them after they set up the kinematics / dynamics.looks like it's some joke.3d printed hands to grab a Buttplug.Why?- Grasp a wider variety of objects;- Conform to the shape of the object and reduce the risk of dropping or damaging the item;- Increase the contact surface, distribute the gripping force more evenly and reduce the risk of crushing fragile items;- Aesthetic Appeal;By Haas Automation, Inc.. Video: Jason PiechowiakBecause why not!But why make it in the shape of a hand? Also notice how the part moves after is is grabbed by the robot? It shouldn't do that. When a robot grabbs a part it should be secure and not able to randomly move.Also, if you need to grab a wide variety of parts you should use custom gripper sets on an ATI EOAT tool changer or equivalent.Source: 10+ years of factory robotics experience.we sometimes allow parts to move as well because on some it doesnt really matter but that was rarely the case as most parts where then placed in other machinesthe fact the gripper has this shape makes it seem not serious and like a joke so dont overthink itWhat kind of biblically accurate robot is this?I‚Äôm getting some ideas üòàNoThis is some kind of meme this is a sculpture not roboticsOh those are so cuteIm sure this was just for a laugh, but in general making robots and robot parts human shaped always makes them worse than just specializing them to the task at "hand".Like theres a reason the arm isnt modelled after a human. Making the gripper hand shaped would be like reducing the number of joints on the arm, and then limiting the travel of the remaining joints, in order to more closely model a human arm, it just makes it worse not better, same goes for the gripper.I will never understand the fascination with humanoid robots, it seems like its just ego over function to me. You know what a great dishwashing robot is? A dishwasher. You know what a horrible dishwashing robot is? Anything humanoid.and it still almost fumbled itNot nearly as cool as the Fanuc LR Mate 200id it's connected to.http://www.rethinkrobotics.com/baxter/tech-specs/5 lb / 2.2 kgIt specifies maximum payload on the tech specs. Did you really spend $25K without reading the f#$%ing tech specs?I'll give you $5 for itBro Baxter, do you even lift?How much are you selling it for?Also how much do you guys think a used one is worth?Can't you just add a cheaper machine to pick, place or move your > 5lb object?But if you're selling it, I can double u/Unacceptable's original bid.How much can it lift?Call the manufacturer; they may buy it back from you (perhaps at a discount.)Research or Manufacturing?OP, can we get some backstory first?Did you purchase it privately or was it a company purchase?Why did you buy it originally?What purpose were you trying to use it for?This seems dubious. You can't return it? You didn't check how much it could lift before buying it? Also I don't think that reddit is the best place to sell your shit.I'll give u twenty bucksHahaha this is amazing. Yea the payload isn't huge. Intense buyers remorse.Did you plan on using it for only one task? Seems like an excessive solution to one task. Sometimes with Baxter trying to do a task in a different way can result in much better outcomes. That has been my experience at least. If you are still planning on selling it, I'd be willing to pay 500 for it.In this situation, you being a Nigerian prince might be a reasonable explanation.How much do you want for it?Seriously, I wouldn't pay $500 for a new one of those.They're a joke. I'm sorry you were duped into buying one.id need to know a price.I am willing to pay for shipping. Having a robot that is almost capable of serving me my morning coffee is almost worth the expense.You'll have to be competent enough in the task to teach it how to make your coffee.How much?A bit of a serious inquiry.That is very interesting, I‚Äôve been working on getting a Fanuc r2000ia-200f running with a retrofitted controller. I used LinuxCNC to hand all the gcode/kinematics/encoders, and Odrives to run the motors(full power amps were way to expensive), the project is like 90% complete, there‚Äôs still some encoder bugs to work out and safety stuff to setup.What did the encoder protocol end up being? Fanuc has their own as well and it‚Äôs 2.7Mbit/s rs485, it took quite a while to figure out.I've had my eyes out for a 6 axis, but haven't come across one in the sub $1000 range that was in OK shape to justify picking one up. Maybe one day!I'd love to see your project if you have any links!The motors are Yaskawa SGM series AC servos. Specifically they are the SGM-xxx3xxxx series which came with an optical incremental encoder with digitally multiplexed index and commutation signals. Essentially they found a totally unique way of combining the 3 hall effect tracks and the index mark onto a single wire using pulse patterns relative to the incremental tracks. This reduced the number of wires going to the encoder somewhat substantially, but I personally think it was a move to lock you into needing Yaskawa drives to pair with the encoder. The signals were all present inside the encoder, but were combined into the composite signal by a Yaskawa JL-041A ASIC chip and sent out over the wire. I assume there was another ASIC inside the drive to covert these signals back to standard incremental signals, but I could not find it, nor any information whatsoever on the protocol. I decrypted the whole protocol by hand with an oscilloscope, then essentially created the decoding circuitry out of CMOS logic gates.While I've never personally messed with Fanuc encoders, I do know they are notoriously difficult to interface with. Nice work!super cool. I have a scara with the 310 controller but have problems getting to work.What do you mean anti-fraud reasons for Robot Studio? It‚Äôs free for students.anti fraud for the assignment, other groups of students are using RS, so we can'tThe program currently supports writing on a flat surface or a cylinder.IRB Drawing Interface on github: link.I'm currently at work, running 2 big ABB robots!Why doesn't mine look like that https://photos.app.goo.gl/MjZmEPLoNyDs42oB9That's uh... that's just an overly complicated plotterHow much does that robot arm cost?https://www.youtube.com/watch?v=A4dQIuD6xbAIs there anything like this for Fanuc?Very tight tolerance and factory calibration. Each axis has an encoder that is accurate up to 3,4, of 5 decimal places (1000th of a degree or better!)Before a robot is shipped from the factory, it is mastered using specifically designed jig, and the encoder values are saved to a master file, usually paired to the arms serial number.If you look, most robots, especially large industrial ones only claim repeatability up to .03 to 0.5mm. (remember each joint is measure to the 1000th or better.)This is important! Repeatability vs Accuracy!Most robots are taught using dead reckoning, which replies on REPEATABILITY.You move a robot to a position, and TEACH that position. The robot will then return to that position within the given Repeatability tolerance.Accuracy is more like, Here are specific measurements, go exactly there. Accuracy is not typically used in robot systems. Even in most vision guided system, there is a frame of reference taught (dead reckoning) that reduces the area in which the robot needs to be "accurate".Belt driven axis usually use a very VERY stiff timing belt, specially designed for this purpose. reinforced to prevent stretching. I have seen robots that are 20yrs old or older with original belts! (never recommend this officially, but it is not uncommon!)Almost 20y in industrial robotics and I still have to explain accuracy vs repeatability at least a couple times a year when a machine spec rolls through. They almost always mean repeatability.SLIGHT price difference in a machine that needs to be accurate..... /sBefore a robot is shipped from the factory, it is mastered using specifically designed jig, and the encoder values are saved to a master file, usually paired to the arms serial number.Can't say about anyone else, but Fanuc vision masters their arms nowadays before being shipped.Source: ex FRNA employee.Tight tolerances on critical dimensions of critical components during machining is very important. Initially, these parts are 100% CMM inspected. Once the tooling and processes are proven on first articles CMM inspection on 100% of parts is no longer necessary. Finally, every arm is factory calibrated such that all the minor imperfections unique to each one are characterized and stored locally. This allows the kinematics to compensate for the variations and achieve the desired repeatability and accuracy.Most brands don't actually calibrate each robot's kinematic model further than the nominal model , which is good enough for most applications. The repeatability isn't affected by this, but accuracy is. Usually you can pay to have a custom kinematic model for the specifics of an arm, but usually not needed. For example, KUKA calls these HA (high accuracy) where the specific arm is measured for a higher accuracy kinematic model.Edit: Each robot will be specifically mastered, which makes it reputable to itself, but won't account for inaccuracies on dimensions.FANUC integrator here.The robots come from the factory with some default mastering either by a jig or vision (as another person stated above). When we get them in, we‚Äôll usually run through our own calibration with their iRVision package to ‚Äúfine-tune‚Äù the calibration to improve repeatability. It really comes down to what the application calls for. For example, welding typically requires more repeatability than say palletizing boxes. The calibration we do uses a camera and essentially moves the robot around and takes pictures of a grid. We then run through several iterations of this program to zero in on better repeatability.I also wonder this, especially when so many of them also use belt drives. I would've thought that was asking for trouble.Modern timing belts are pretty strong and stiff, especially when they have fiber (glass, carbon, aramid, etc) reinforcement. And if you have an encoder/resolver on the output side you can remove the uncertainty from the spring constant (which again is already high).Just my guess though.Modern timing belts are pretty strong and stiff, especially when they have fiber (glass, carbon, aramid, etc) reinforcement. And if you have an encoder/resolver on the output side you can remove the uncertainty from the spring constant (which again is already high).Just my guess though.In the application at my work, it's calibrated after assembly. The resolution of the encoder is all that matters.Electroimpact uses a patented accurate feedback system, this is used with an enhanced kinematic model. Google: Robotic Manufacturing System with Accurate Control After the sponsored google results there is a good description of this system.not sure what you mean by "calibrate" but...- you set vertical alignment and the piece is not aligned? check the robot base, it might be lifting- you teach a particular pose and the robot does not return back to the same pose? contact the manufacturer, this shouldn't happen.Have you setup the end effector weight and ran the tuning program? Has your tool centre point been setup? If by calibrate you mean you are mastering, it‚Äôs rarely exactly correct afterwards as the scribe marks/master indicator stickers are fairly crude, programs will generally need a touch up afterwardsOlder industrial robots don't need new software, they need mechanical overhauls, specifically gearboxes/grease and internal wire harnesses and the parts alone can add up to half the cost of replacing the controller and mechanical unit.In the scheme of things and value they can provide, the cost of a brand new arm/controller is pretty fucking reasonable.I want to learn programing industrial robotic arms like FANUC arm, etc. Where or How can I do that ?Hey buddy. I‚Äôm a robotics technician, and I have a pretty varied day. I can only speak for my operation but my duties can include:1). Troubleshooting uncommon robot errors 2). Program adjustments based on feedback from the floor, usually just alter a couple points. 3). Creation of programs for new products that are incoming. 4). Fair amount of meetings about quality and production efficiency.I feel like I have a fun balance of on floor and office work and I really enjoy it.Thanks for the detailed answer! How did you train to get the job you have now?It entirely depends on which company you end up working for. you could end up in a design job or in a maintenance job and the tasks are totally different.since you don't want to program go for a maintenance style job where you will fix damaged robots, touch up positions after they've collided with stuff and just generally troubleshoot.The design side is in a cushy office, the maintenance side is in a dirty factory.Whether the factory is dirty or not entirely depends on what it makes. if you're making solar panels it might be clean if you're making truck bumpers it's not going to be.I spent 10 years as an IT guy five years as a robot programmer and then moved into building research robots for University.my job has let me travel the world installing robots and meet a lot of interesting people.There definitely will not be less robots in the future.I went through Conestoga colleges automation and robotics 3 year program, I can take a one year upgrade and become an engineer!Save your money and dont go to school for it. That was such a huge waste of time and money for me. None of my jobs ever asked nor do they care if you have ever gone. What they care about if you know how to build things. Learn servos really well. Learn logic. Learn controllers. Learn how to create things from PLCs. Networking helps too.How would you recommend learning about servos, logic, controllers? Can I take a coursera type class? Are there any resources you recommend? Also, how to get hands on experience? Thanks a ton!I wish I had been given this advice all those years agoI respect your opinion but I wholeheartedly disagree. For technician level positions especially, a two year tech school degree has an amazing ROI. I spent around 15k for my two year degree and five years out of school I'm in the top 5% for annual incomes in my area. It would have taken easily double that to try and move into a similar position from a maintenance job or being self taught. The degree gets you the base knowledge you need to be successful and puts you at the front of the resume stack when it's time to change things up.Can you provide a link for the apprenticeship program? I just want to better understand what you mean.I recently started my graduate role as a controls engineer for an automation company. I can't speak to what typical duties would be but the majority of my training is based around PLC programming, panel wiring, SCARA and Articulated Robot simulation and programming, and a operation of various sensors and actuators (mostly Pneumatics).I did go to university and completed an undergraduate Mechanical Engineering degree, followed by a postgraduate Mechatronics masters but I would firmly agree with texwitheffects, my employer was more concerned with my practical know how than my theoretical understanding and seemed to value my side projects portfolio more than my academic achievements.I went to school for computer science and was working at a local injection molder with a ton of robots - ABB & Fanuc. Pretty much same story where I decided I didn‚Äôt want to be at a desk every day. I learned as much there as I could. When the workload became too much (I was doing robotics programming in addition to my regular job role), and they wouldn‚Äôt change what I was doing, I jumped ship and got hired at a robotic integrator.My days consist of:performing simulationscreating configuration of robots in the quoting processprogramming/testing the robot systems on our floor, and assist in rebuild at customers siteservice calls for our previous projects and other integrators projects where the customer is frustratedsome mechanical unit rebuildsI also am in charge of the company‚Äôs IT.NICE postüòéüëçThats a beauty! I noticed your a michigan resident, do you work for a company in automation alley?I do! Robotic integrator in St. Clair County.What are you palletizing??Cases of cups, lots of and lots of cups.Is there a pad under that monster? How thick is that slab?Our shop floors are 8", which is the minimum for this robot. Engineering added a few extra anchor points to make sure she stays upright.Is it going to be used for stacking & packing pancakes?You should have put a banana on the ladder.The breakroom was poorly stocked...i should fix that.I'm analyzing this pic and I have two requests, can I see a pic of the other side (looking for the other servos) and can you apologize to the facilities guy for anchoring this right over the drainage channel? tiaThe answer depends a lot on the method you're using. For example, and standard color printer could be considered a "painting robot". Are you spraying paint onto a canvas? Or are you trying to replicate human brush strokes? The latter is incredibly difficult, and the problem is an area of active research. Even reliably mixing pigments is sometimes difficult for automated systems.Try searching google scholar for papers on this topic, it looks like there is some work on programming a robot to write chinese character calligraphy.Wow, I haven't heard about replicating human brush strokes. That sounds really hard. I am spraying paint on small car parts in an automotive industry. I would like to learn a bit more about the process, common errors and how to fix them.I know of the following examples:Elephant Robotics My CobotUFactory XArmFruitcore Robotics HorstBut I do not have experience with any of them.It‚Äôs a Fanuc arm. They built a few peripherals, developed end of arm tooling, integrated a vision system and called this entire system as ‚ÄòAmazon sparrow‚Äô.To borrow from an art mentor, you need a product, not a project.You have prototypes? So you need to either hire an industrial designer or learn design yourself so you can make a finished, professional looking product. Just a single one.You need to think of manufacturing, marketing and funding. Who's this product for? Do you have the ability to manufacture these by yourself? At what capacity? How much will your product cost? Do you need additional funding to start manufacturing?I'll echo the other user and say, what exactly is it you want to do? Sell an actual mass-produced product? That is an enormous undertaking that usually involves having parts made by some Asian manufacturer, having your product certified to comply with regulations etc etc.What might be a lot easier is to sell kits for a robot. I could imagine being able to entirely circumvent all those regulations since you'd effectively be reselling already certified parts.Rather than trying to make 'a roomba' have you considered doing bespoke projects for a client?This takes the pressure of you to figure out a market- the client does that, you just get to focus on what you presumably enjoy, designing and building robots to help with whatever problem the client comes to you with.There are lots of companies around who will design some bespoke robotic system to perform a specific task for a client- often in more of a R&D capacity, where they'll provide a working prototype, for the client to then go and take to market on a larger scale.Most of these companies work with industrial production lines, as that's where robots are used- but more are appearing who do stuff in the mobile robots market.But before all this you need an problem to solve(idea).I tend to use sticky tape and zip ties.Maybe you should contact someone on on fiverr, to get the idea of how people do things professionally. you can spend a few bucks to:design pcb, which you can order online (extremely inexpensive)pay a few artists to sketch a product idea. Just to get their design concept. Pay 2-3 people at once, it's cheapget 3d cad designsany software or GUI or some random tool.Communicating with these guys and explaining them your needs, you'll learn faster and more relevant stuff. I don't think you can use fiverr to launch a final product but it can be faster for prototyping (you get what you pay for). Use it for simple stuff.IMO you should not design your own pcb if you don't do it professionally; Pay someone $10-20. It's not practical to spend time learning PCB design for a software guy. But if you have time, sure ! same goes for many other things.If you have a bigger budget go to Upwork.Since you already have the design file and prototype made, the next step would be to find a manufacturer and to get proper funding for your project.1. Funding would probably come first because you can't do anything without money. The book methods would be to showcase the prototype to potential investors, but crowdfunding has become a very popular choice. There are Kickstarter/crowdfunding marketing companies that will help you market your product and they just charge a percentage of the money your campaign makes (odds are that they'll get you a lot more backers than you would get if you do it yourself)2. Finding the right manufacturer is extremely important. Just because you have the funds from investors doesn't mean you should blow it on any manufacturer. Things to look out for are:- Quality - How much do they care about details? Are they sourcing the best components? Are they able to deliver your product even better than how you want it?- Speed/efficiency - Can they produce your quantity how you want it and as fast as you want it? If not, you'll just be back-ordered watching your potential clients move on.- Cost - If the manufacturer is able to fulfill your quality and efficiency needs AND offer you a low cost, that will be KEY.3. Create your platform and start dishing our your cool products!Product design and manufacturing is actually our company's specialty. We design and make high-quality electronic devices and offer super competitive prices. We not only work with you to create your product, but our engineers and project managers chime in their 2 cents to try to elevate your product even further. We have over a decade of experience working with high-profile clients to develop their winning products. Feel free to reach out to EsinoUSA if you have any questions or if you are interested in seeing how we can help! It would be a piece of cake since you already nailed the design (=Maybe i dont get it. But which robot brands do you mean? Like KUKA/Fanuc/ABB ? If so you can take a look at dramatHave a look in to RoboDK - to get accurate simulation results in your application you might need to calibrate your robot. Have a look on their website they have a lot of detail about their options and a blogAll robots at that price are fast compared to a human, there are also blazing fast robots. Call Kuka, Fanuc, Yaskawa in your area and tell them what you need. In my country it will cost about 50kAppreciate the source boss. Will look into them.Hmmm I don't know if you could do it or not but i would look into doing the FIRST lego league Jr. and FIRST lego league competition. I can't really tell if you can do those competition as you dont have access to aloy of budget. FIRST is the organization that does those competitionsOne thought, if you follow the FLL program, even if timelines don't match up or you don't compete, you can use the same robotics challenge independently. The Kit of Parts will cost money, but you'll know exactly how much, and a phone call or two to local companies asking them to fund it can take care of that rather easily.Go here: https://www.firstinspires.org/find-local-supportSee if there‚Äôs a local robotics team that can help you. The Teams should be doing outreach in the community, and can provide advise, guidance, trainings, demonstrations and potentially supplies. Our team arranged for all lego robotics kits for every middle school in the district.Knock off Arduinos are cheapFor 5 ear olds, I don‚Äôt think the Arduino is suitable. Maybe for the 10-12 age group though. I taught FLL for a while. 5-7 year olds are‚Ä¶. Special lolYeah something like elegooTry some free robotic simulator for PC too... something like this https://www.youtube.com/watch?v=ZveCcS0PN-M a visual based approach could be interesting for kids, too, rather than pure programmingThere‚Äôs some old lego robotics kits that are decently affordable if you can find them, they connect via Bluetooth to a laptop and you can build little cars and race with them.I did this at a teaching position I had and it kept the kids busy for hours.You can make a hydraulic actuated arms with some wood, some syringes and some tubes. Quite easy to do. Can also add a simple electromagnet using a battery and can use the arms to pick up paperclips.I've taught this age range (plus older high schoolers, college age, teachers, and professional development for FANUC robots). Hit me up via DM if you'd like, I'd be happy to share any and all of my knowledge regarding this.Scibblebots can be created for about $4 per child, and are a great activity for that age (take home a working robot). I've done it yearly as a preschool party (with parent help) and just did it as a 3rd grade girl scout project and two adults could help 10 children be successful. https://www.makerspaces.com/how-to-make-an-art-bot/There I've also seen and wanted to do this simple hydrolic robot arm project (probably $5 per robot and you could work in teams) but I've never actually run it. It works really well, when ive seen the finished product.https://youtu.be/P2r9U4wkjccMy daughter started a FIRST LEGO League ‚ÄúChallenge‚Äù robot team this year for local 9-14 year olds. There is an ‚ÄúExplore‚Äù team program for 6-9 year olds. We have been involved in many of these teams for years. There are many companies and schools who could help sponsor the costs. It is such a nice program that involves community and gives you all the tools necessary. It takes some effort for organizing, especially the start-up phase. But I also encourage you to look into it.If you are in New Jersey, Brain Bytes Academy, can help. Our FIRST Robotics teams would love to continue helping as an outreach effort.Mount it on a car trailer, give it a hedge clipper, and start a mobile topiary business. 3-phase mil surplus generator needed too.Ice sculpture and custom snowmen during the winter.FELLOW HUMAN, CONGRATULATIONS ON ACHIEVING YOUR NEW YEARS RESOLUTION OF STRENGTH BUILDING. THIS ARM UPGRADE IS A GREAT IMPROVEMENT.I would program it to split wood, maybe even into kindling and then stack it on pallets. Would be easy money if you could feed it wood. Or make candles. How are you currently programming it? Ive never worked with one of these old girls but Im assuming it can still be programmed in Karel? Super Cool though! I cant wait to get an old decommissioned S430 or something of the sort for my home shopCNC plotter/painter? subtractive 3d printing (teach it to carve a log into a bear, sell the bear and repeat)?https://youtu.be/CoA-m5iHG9sIt‚Äôs a FANUC 420iW if you want to look up the specsPic?Please get it to roll me a cigarette.Spindle motor, then machine polyurethane foam for composite molds.Have it make tea.That will depend what type of arm, if it's KUKA, visual component, if it's ABB use robot studio, fanuc probably has something too. Or you could try looking for a ROS model and simming in Ros. But with as little information as you've given no one can really help you.This is the best thing related to robotics simulation. Found recently and really loving it.https://www.bottango.com/Robodk has pretty good support for different manufacturers.What software does the manufacturer suggest? ...did you buy an arm without software? Uh oh...kawasaki's astorino line may be an option: https://kawasakirobotics.com/eu-africa/astorino/these are marketed as educational robots, but from what i've seen, their motion is very smooth. they're quite elegant machines. where i live (CH), i can have one for around 7-10 k (depending on accessories). i'm not sure about how open their controllers are, though. the design seems to be reasonably open - the controller runs on a raspberry pi, AFAIK and most of the robot is 3d printed.there's also IGUS' low cost automation line: https://www.igus.com/info/low-cost-automation i think a complete six axis kinematic will retail for around 6 k. but from what i've seen, the motion is rather ugly.fanuc's CRX series may be interesting, but i have no idea what they cost. my guess is that they're more in the 20-30 k range, like UR or mecademic.small robots are really hard to get for a good price. IMO, the issue are the joints - you'll pay 1-1.5 k per joint and for larger machines, prices scale rather logarithmically. a robot with 3 kg payload will set you back ca. 20 k, while 120 kg payload will cost less than 100 k probably.also, the second hand market for small robots is really dry. you pay almost the money for used as compared to new.good luck with your start-up!Thanks! I'll look into these!Fruitcore Robotics (from Germany) might be an option, or you can check peoples videos from visiting Automatica in munich. There should all robot arms be displayedIgus has some low-cost options too but not sure about the specsFind a used UR3. Around that price range, small enough to travel with (still cumbersome with arm and control box), tons of users and support in the world, lots of companies who develop parts/software/upgrades for it, can be programmed via pure scripting or their nice UI.Epson Robots -T3 scara robot is an industrial robot, 3kg max payload, runs on 110 or 220V, controller is built into the base and is under $9k. The software is included with the robot arm purchase, or can be controlled by a PLC or there is an API.NET option to run from pc commands. Would fit in a case on a plane. Run in Low speed, low power with an estop for demonstration purposes.https://epson.com/For-Work/Robots/SCARA/Epson-T3-B-All-in-One-SCARA-Robot/p/RT3B-401SSBest option is ufactory xarm, 7 dof for $15k, I have one, works great, fits into a box you can take on a plane as a suitcaseA Kuka YouBot would probably do what you want: https://www.youtube.com/watch?v=DHVPd3MUEisI have two (just the arm, not the base). How long would you need it?Do you care about reach?Look up the mycobot 320 by elephant roboticsYou've got done great options here, probably I would go with ufactory.Another piece of advice: Do NOT ignore your packaging. I would get pelican cases, and cut out all the foam nicely. I've done a LOT of demos and conferences, and I have learned this lesson the hard way: if it doesn't get there healthy you have to fix it when you get there.Hey, sorry, just saw your replyI've been working with robots for over ten years and this has been the complete opposite of my experience. I have worked and interviewed at different kinds of robotics companies: industrial manufacturers who wanted robots on their factory floors, industrial robotics companies who built these robots, research labs who worked on cutting edge robots, national labs who are using robots to automate their data collection, and startups who want to release home service robots. Across all of them I never felt like I was disrespected because my degrees were in robotics. Some loved it and others didn't care about it either way. Most were interested in my projects or work experience and only asked questions about that. And unlike what you have stated here, most of them did not even have a programming interview. The few that did were fairly straightforward. Of course, I'm not trying to invalidate your experience, but only stating my experience.For what roles in what geographical area?You‚Äôre not wrong, but you‚Äôre also not right.Robotics per se doesn‚Äôt really exist at industrial scale right now, at least in the way you‚Äôre going about it. It‚Äôs all research and startup right now, so obviously they‚Äôre looking for people with either research chops (PhD) or elite skills.But controls? Embedded systems? Sensors and signal processing? Hell, even ‚Äúautomation‚Äù? Yeah, that‚Äôs popping off right now.Your problem is that there‚Äôs just no such thing as ‚Äúrobotics engineering‚Äù in industry right now. Robotics is inherently multidisciplinary, and you‚Äôre always gonna focus on a few specific aspects on it, again unless you‚Äôre at a startup. That‚Äôs why you get beat out by people who‚Äôve committed to a narrow area of expertise (mechanics, electronics, software).Also: how the hell did you spend 8 years in college and not get a PhD?Homie said they had three unpaid internships. How in the hell do you even find one unpaid internship in a tech field and why in the world would anyone even accept one? IF you're providing value to the company you must be compensated for it. All of my interns make significant money for a college student.Get a job on industrial automation. We can't find enough people willing to learn robot programming and system design.Look for "robotics system integrator", "robotics technician" or "robotics and automation" jobs. Most of the people we hire have a AS or BS, no Phd required.Is it because of pay? I looked into it and pay suckedBill Gates founded Microsoft in 1975. In 1980, Microsoft signed their agreement with IBM, they only had about 40 employees at the time. In 1985, the first version of Windows was released, they had about 900 employees at that time. When windows ‚Äò95 launched, they had over 17,000 employees.Imagine picking one of the hundreds of other ‚Äúsoftware‚Äù companies between 1975 & 1985, feeling frustrated and saying‚Ä¶I don‚Äôt think ‚Äúsoftware‚Äù is a good career.The good news is you‚Äôre looking at it the right way. Many startups are not good businesses, robotics or otherwise. Trust your gut. A good product doesn‚Äôt always make a successful business, but a good business will always do the best with many products, services and situations.Robots are not going anywhere. Keep looking, and work for good companies in the mean time.Imagine picking one of the hundreds of other ‚Äúsoftware‚Äù companies between 1975 & 1985, feeling frustrated and saying‚Ä¶I don‚Äôt think ‚Äúsoftware‚Äù is a good career.And it wouldn't have been wrong. It wasn't the programmers who went out and signed agreements with giant pre-existing corporations, or who decided which existing software niches/paradigms the company was going to copy. Likewise, it'll be very few robotics engineers making the decisions that take a currently existing robot company into future success.Really, you'd be better off being part of a robotics team which hires out to design/produce/maintain specific products, services, and tools for other companies. Build cranes and material handlers for FastBrick, warehousing robots for Amazon clones, pick-and-place systems for industrial/commercial/delivery companies, custom automation systems for companies who specialize in ultra-luxury fitouts for the wealthy, car-moving systems for repo and parking-violation trucks, lightweight manipulator add-ons and recharging points for commercial drones, automatic refueling connectors for electric car owners so they don't have to manually plug in at home. Don't pour millions into trying to build the Next Big Thing unless an actual client is paying you to pour their millions into it.It's not dying, it's just never been all that large. People take robotics in education because robots are cool, and then find out that the actual career options are fairly limited, and are mostly designing the next generation of Roombas and automatic seat adjusters in BMWs. People who build interesting and cool stuff and are paid well for it are vanishingly rare. I spent 8 years studying robotics in total.Are you not in the US? You should have a PhD or close to it at this point.Have your looked at controls and automation jobs? The jobs are not helping Boston Robotics make their robot do backflips, they are in designing a package sorter that works with 99% reliability.You are entirely right, but at least be happy you didn't get into bioengineering with congruent constraints but even more abysmal pay and results. No one cares about advancing healthcare for example, where it's much more preferable for companies to create a snakeoil which would supposedly battle a certain kind of cancer and all your job is as a bioengineer is faking test results for why it supposedly would do anything.Bioengineers I know are getting into their second phd out of sheer desperation of not finding even a career path out there.And I was so enticed by stem cell development and robotic protheses among others. Skill issueBe patient young padawan. Same situation with AI just half a decade ago. Also US government has a lot of robotics jobs.I did less school than that, studied mechanical engineering and focused on controls, then did a minor in CS and work as a robotics software engineer and I started at 130k$. Also I have never even heard of an engineering internship that wasn‚Äôt paid.Unfortunately, you are probably too early. Sometimes in the next 50 years (which people have been saying this since 1950, but this time it's real) ,robotics will absolutely explode as an industry, but as of right now this is probably what most people going into robotics will face.I'm studying Mechatronics at EIT engineering institute of technology and the course is complete and utter rubbish. I'm a fitter and turner that works with mechatronic machines every day, I wanted to progress, I'm halfway through the course and virtually none of it is applicable to the real world or has helped me in my every day job. I'm just hanging in there so I can get the certificate, other than that don't bother with it. Just get an Arduino and a 3d printer and fusion 360, make a few robot projects and you will have already learned far more than this course teachesRobotics is a pretty broad term I guess. I'm in industrial robotics and automation and I get calls multiple times a week for places wanting to talk to me. I make over 150k and expect that to continue climbing. I'm always learning new hardware and software to stay up on me technology in the industry. And getting paid to learn it. So what your talking about doesn't apply to industrial robotics at all. I think that automation and robotics is an excellent choice for a career. It had been for me so far.I'm going to put my three cents in on this topic. But I want to share a little bit about myself so that everyone can better understand the dillema we face:I started my career in 2007, just before the recent Deep Learning renasaince. Life at that time was full of angst: high-tech wasn't looking viable for everyone (very high-risk, low chance of success, but very high reward). 2008-09 hit, the market experienced it's turmoil, and suddenly the world in our field changed overnight. LeCun's 2008 paper was finally making rounds, so a ton of folks gravitated towards anything dealing with deep learning and other ML technologies. It incentivized businesses like Nvidia and Google to develop specialized hardware to handle the technical needs of those algorithms. Around the same time, DARPA conducted the Grand & Urban Challenges for autonomous driving. Things were hard, but if you were at the right place or had the right connections, you were on the road to becoming a leader in the field.I left academia in 2010 for industry with nothing but a BSE under my belt and a few publications. Scrambling to find work in robotics (or robotics adjacent) in the Pittsburgh area was next to impossible. I was outcompeted by the precense of folks with graduate degrees and even folks stepping backwards in their careers (i.e., they couldn't get a job paying at their seniority level, so they were forced to take a lower-rate job as an overqualified expert). It sucks, but I wasn't mad at them -- They were also trying to find a way to survive the market turmoil without exiting the field.I got picked up by a DoD subcontractor that summer; hoenstly, it was a stroke of luck. I did research on multi-agent autonomous systems and their problem was coordinated torpedo defense. So they got an expert at the price of a new-grad engineer. It wasn't robotics, but I used literally everything I know about robotics on that project: Localizing targets is Perception + SLAM; Mission Planning, Motion Planning, and Countermeasure Deployment hinged on the latest advances in planning & control from robotics itself. The infrastructure was both distributed and real-time, which is a problem when you're bilding BIG robots (latency will kill you! Look no further than the brachisaurus)!Two years ago, I set up an C-Corp to launch my startup. After 16yrs in the field, climbing up, down, and across the org-chart, going in and out of early-stage startups, unicorns, and post-IPO businesses, I came to the conclusion that I can do this and lead it. We're still pre-investment and do not have a means to raise a Friends & Family round. So that means I still need a day-job to take care of my wife and our three fur-babies. Oh, and let's not ignore the fact that I have >$50k in student-loan debt that'll probably get paid off by time I retire. And all the other necessecities, like a means for transportation, paying for where we live and the utilities, groceries, Rx's, etc... It is A LOT, and admittedly I pine for the day when I can start paying myself and focus 100% on my venture.But alas, I am job-hunting AGAIN. This is my 4th time in two years. Contracting sucks: at the end of the day, you're just another resource to be managed and then discarded at the whim of the client. Seriously, you could do a remarkable job, but if you finish before the rest of the team is ready to integrate, they'll say, "Well, your job is done, we'll take it from here." It's not the contract agency's fault; in fact, it makes their lives harder when shit like this (frequently) happens. And I hope with the recent Executive Orders that this will be improved soon.But I do want to highlight a few other things. Places like Amazon, Tesla, etc. are pusing 996 with different words. They like the phrases "Keep 'em hungry." and "Keep them paniced because they'll find 'minimal viable' solutions faster." We know this is all bullshit. The gauntlet to get into a FANGX is extraordinary and quite subjective (I learned a lesson interviewing with Amazon Robotics, do not indicate that you do not respect people who say 'that's not my job' because most non-technical managers live and breath delegation & buck-passing.I'm not denying it, It is very hard right now in our field. But it is not impossible! Find a way to weather the storm. When the "titans" of industry fall, folks like us find our opportunities. And I'm hoping once as I can dedicate more time to my venture, I'l be one of them able to provide great opportunities to my team!You're too early, that's all. Right now all of the AI money is in non-robotics AI software. The next step is integrating that into hardware, once scale is achieved. You're probably looking at about 3-5 years before things start picking up dramatically, and never look back. So if you want to set yourself up for the future, getting into robotics now is a great decision, you just need to be patient. You have a great opportunity here to get a leg up on those who will enter the industry in 3-5 years.i wish robotics would boom like everyone says it will.hardware + software + mechatronics + kinematics + build quality and reliability at low prices = unfeasible.Nvidia and apple both hire more software engineers than hardware.I really don't think robotics arm is all that rocket science.The devil is in the details. invest in costly R&D that might not pan our, or buy a well tested machine under warranty and spend your R&D time on something else.True, but I also think that with so many open-source robo arms designs coming up, who knows. There was a time when making softwares were hard, but now, not so much. Most of the backbone is so readily available and much better editors, version management, testing tools etc.It'll depend on the business and on what they're trying to build. I speak from the experience of working at companies that both out-source code and develop in-house. I think it'll be very similar depending on budget and task.Sure the manufacturing of robots themselves is dominated by a select group of companies, but the application of those robots is still a wide open game and what most industrial automation groups work on.To echo what i-make-robots said, the devil is in the details. The "last 10%" of development effort costs 90% of the time and money. Industrial robots are even worse because they are expected to be VERY robust machines with many 9's of reliability AND they must be safety rated. Modern collaborative robots just make this problem worse.There will always be a market for specialized needs: very large, very small, very precise, very stiff, etc. In some of these cases in-house robots are used. Even in those cases, it often doesn't make sense to start from absolute scratch. Some integrators have been known to buy large Kuka robots, throw away the motors and controllers, and replace them with custom hardware or hardware built on CNC controllers like the Siemens 840D.A lot of this has to do with the fact that industrial robot arms are still really hard to apply outside of a few well-understand domains. These are typically material handling (moving stuff) and welding. Other stuff like automated painting, grinding, cutting etc. The vendors have ready-made solutions for these so it makes sense to just buy them.Anyway, I think the mobile robot space is way more open.Eh, even integration is going the the way of consolidated mega corps. New integrators seem to pop up as new technology pops up, but eventually they get swallowed by the bigger players. We'll all be working for Honeywell one day.Also, precision and size is definitely not a driver of in house robotics development. If anything, the trickier a process is, the *more* likely a company is to look for outside help automating it. This has been Tesla's folly btw - Musk thought he could reinvent the wheel when it comes to vehicle manufacturing when cars are probably the most mature manufactured non-commodity on the planet (who invented the assembly line?). This is why integrator exist - I wouldn't really call them in house engineering teams.Nope!I've just had an interview at a company trying to custom-build industrial robots cheap enough to rent them out, rather than just sell. I don't know that will work out right now, but at some point the cost of building these robots will be reduced enough that it becomes a problem of whether it's worth hiring contractors to provide you a custom-design, or to do it yourself. Or so I think.It didn't go very well. The guys interviewing me basically saw me as what I was. Fresh out of university having not done time during it. They basically told me that they were disappointed not to see a list of projects I did at home. Everything I told them I'd done, they basically said "Yeah, everyone says that".Man, forget about them. I'm getting a real "we want you to build our non-existent business for us" vibe just from your description of how that went.It's not heading in this direction. Manufacturing and logistics corporations are looking for **turnkey solutions** as they focus on their manufacturing process and distribution challenges. Larger companies already have in house engineering teams, however what I am observing is that with modern air travel and the internet, companies are trying to consolidate and spread their engineering talent over larger areas. We probably won't see each plant or warehouse having their own team of engineers any time soon. Even the places that are large enough for it are starting to contract out their facilities staff to agencies like JLL who gain much better leverage in contract negotiation since they are massive staffing agencies (It's disgusting, somethings going to have give eventually I'd wager).Instead, growth is going to be driven by application fragmentation. As automation technology becomes more common and widespread, new and distinct applications will emerge. One company that owns a turnkey market segment always runs into challenges keeping up with pace of technology, and this will open up new business opportunities for smaller companies with a superior approach to a problem. You see it everywhere, big companies get really good at something, drive up demand, and then as they grow start taking on less risk, leaving the riskier applications to newer, smaller more flexible companies that can develop new technology to address the new business opportunity. The jury is out on whether this is sustainable, but its what you get when you combine automation engineering with business.That has been my experience in the automation industry anyway. This probably came off as vague and rambly, but whatever it's late.Also, robot arms are pretty complicated. Even if you consider 6 DOF a solved problem, industrial grade arms will still run you tens of thousands of dollars. Human arms are 7 DOF by comparison. And the math behind them is insane - you end up with some pretty massive matrices. Last time I checked, researchers are were still having trouble finding ways to simplify the kinematics so that you don't have to model each individual linkage, and it might even be mathematically impossible. My alma mater is the birthplace of rocket science, and they currently do quite a bit of serial manipulation research there.The control pad looks like it was modelled after the space shuttle program. I love it.It‚Äôs a beauty! Very clickity buttons. Is such a beauty of a robot. Kind of exactly what I want from a bot.Can you please provide an explication or what this is and what it was used for. Then maybe what your plans are for it?Yes! So this is a HeathKit Hero 1.https://en.m.wikipedia.org/wiki/HERO_(robot)Arguably one of the ‚Äúoriginal‚Äù consumer robots. The Hero 1 project was started in 1979 and made it to sale in 1982!!!It came as a kit or assembled, it‚Äôs head swivels, it can talk, has a very R2D2 style arm and gripper, has sonar sensors, can keep track of where it goes, and has a Motorola 6808 processor, the same as the original Apple!It‚Äôs beautiful and was my life long dream. They stopped selling when I was still a kid. It‚Äôs older than me, but not by much. It‚Äôs exciting to live in a time when antique ‚Äòdroids still exist.As for my plans: I am torn. The tech is 40 years old, so obviously nowhere near as capable as today‚Äôs smaller microcontroller. The parts are all ancient.I want to rebuild him with modern technology, but at the same time he seems very complete with internals in great shape. From a collectors point of view, it would also be a shame to ‚Äúdestroy‚Äù the original.I am thinking that maybe I can gradually scan his body and 3D print a replica, so I don‚Äôt have to damage this original.Thoughts?Oh man. I wanted this so bad. I think they sold it through sears even. The Christmas wish book was legendary.What was that?Wow! It's in great condition.Childhood dream indeed! So freaking jealous!I remember seeing this on MR.Wizard and wanting it so bad as a kidCongrats! It seems like the Hero series from Heathkit gets less and less available to seek as the years go by. I remember first learning about Hero and Hero Jr. when I was a kid. Now as an adult, it took me close to 10 years to finally pick up both. Repairing them is quite the journey, but I learned a lot from tinkering with their circuitry and manuals, and that added to my inspiration for wanting to go into engineering. Looks like you're going to be giving your new Hero a good home, haha.Been years since I've seen a Hero robot. Good luck upgrading to modern standards. Very coolDam I'm old. Antique robots... Thank goodness for telomerase activators.That's really interesting! I agree that you should make a replica with modern components and keep that one original.I would really like to see some videos of this working as is and it's history. Like what LGR does for old software and computers. https://www.youtube.com/user/phreakindeeOh man I wanted one of those SO BAD. I‚Äôve never seen one irl.See above!This is the think Baymax comes out of when you say "ouch.", right?I wanted one as a kid so bad. I learned as much as I could about them at the time. That's so cool you have one!That's really cool. It reminds me of my childhood I wanted one so much. I remember RadioShack had one and Tandy made one too I think. I can't remember their names thoughWow, I can still remember when Mr. Wizard used one of those to show off some basic programming on his show....There are two main parts of "everything else": Mechanical, and Electronic.For most hobby-level robotics, the mechanical side of things is pretty simple. Learn about torque and power, and how to change them around (gears, pulleys, levers, etc.) and you're most of the way there. As long as your robot is small and moves reasonably slowly, it doesn't get much harder than that. I can't really offer a good book that covers this because my major is Mechanical Engineering and so my knowledge comes from a wide variety of textbooks and lectures.The electronic side is much more involved. The best thing that you can do is learn how to solve systems of equations. Learn Ohm's law. Learn Kirchhoff's current and voltage laws. Learn how to do loop current analysis.... The most important thing for a beginner in electronics is to realize that circuit schematics are not flow charts. Current does not flow down one wire and then another. Everything is moving all the time. I strongly recommend Practical Electronics Handbook by Sinclair and Dunton.Once you get into the more advanced robots, when you have a real budget and you're doing more complex things, believe it or not, the electronic side gets to be the easy part. The faster your robot moves and the more complicated moves it can make, the more advanced your mechanical analysis needs to be. College-level textbooks on kinematics, statics, and dynamics are your best bet. And just like the mechanics, the programming gets complicated much faster than the electronics. If you want to make a robot that can drive or fly around quickly, you get pretty deep into nonlinear control theory. Same for robot arms and motion planning.Oh, as far as recommendations for actual robot products go, check out sparkfun and adafruit and see if any kits really catch your attention. Otherwise, Mindstorms products make the mechanical and electronic assembly of the robot much easier - you don't have to worry about the electronics at all, and the mechanics are just lego technic. That said, you won't learn any electronic theory from playing with Mindstorms, so it's a bit of a compromise.To add to this "A Mathematical Introduction to Robotic Manipulation" by Richard M. Murray et al. is considered one of the go-to sources for learning about kinematics. Well worth the read to learn about kinematics both for use with robots or otherwise!thanks! You've practically given me a sort of outline of what to do. I guess from your recommendations ill check out sparkfun and adafruit since I'll be able to take the electronic side of things head on which seems like the best approach for meI'm the same way as you. The programming side is super easy, but still struggling with the hardware side. I bought an arduino starter kit and built everything in the book that came with it. That was cool, but I didn't feel like I learned much. So next I spotted a book at Radio Shack, Getting Started in Electronics by Forrest M. Mims III. That book has been really helpful, but at times I feel like it's glossing over things. That may just be because I've been skipping around in it.The last few weeks I've been working on some simple projects to try and design circuits from scratch. I've burned out a few components, but I'm learning as I go. Last night I was working out the math to take 27V (3 9V in series) and drop the voltage/current down to 3.3V @ 500 ¬µA. I'm trying to have a PIR sensor that will run at that level activate a buzzer that's capable of running at 28VDC @ 3A. It's simple (or should be), but I figure small steps one after another will lead me to bigger things.[edit] forgot a wordI'll try to get back to this but I have found one of the easiest things to wrap your head around and start understanding electronics with is the h-bridge. It's simple and easy to explain on the surface ...I'm in the same boat. Most of the Arduino tutorials I see are aimed at hardware people. They tediously explain what an if () statement is but assume you know how to hook up a MOSFET.I bought this book. I've not read it yet, but from what I've skimmed of it so far it seems pretty great -- just what I need. After that I think it's all about practical experience. Be ready to waste some money either damaging parts or buying the wrong parts. Luckily it's all pretty cheap.What kind of robot do you want to make?I can vouch for Practical Electronics for Inventors. It has virtually all you need for EELearning electronics doesn't have to be hard - and I think that is probably the first step you should take. Once you get a handle on currents, voltages, and circuits, once you become comfortable around transistors, diodes, transformers, and relays - look into motor control. I'm talking pulse width modulation and maybe power electronics. At some point, sensors are probably going to become interesting to you, in which case you would want to brush up on analog-to-digital/digital-2-analog techniques and/or digital signal processing techniques. This would be where you programming background would become really useful. Probably the toughest and most abstract topic that would be of use to you would be control theory, where most of the topics I mentioned (in addition to other topics such as stability and linear systems) are drawn together and integrated into a nice theoretical framework. I'm sorry if this isn't necessarily the answer you are looking for, as it feels you're trying to learn on your own and I'm mostly describing the course work from my time as an electrical engineering student. But perhaps it can serve as a starting point for you and you can pick/choose what the most relevant things are for your particular case.EDIT: Forget my brain vomit. Listen to u/scorinth.When you say you are interested in robotics, what do you mean? Some people love learning the minuscule differences between thousands of electronic components and building their own electronics boards. Other people love working equations of force, mass, leverage etc and get a kick out of physically making wheels and gears and chasis. Others are interested in robotics because they want to see the robot do something.If you care about getting to see a robot do anything more than an incredibly trivial task I suggest you not get into building robots yourself. Buy a good kit, put it together, and do what you're good at. The world needs much better robot software, it does not need another dozen half-finished amateur robot bodies that can sorta-kinda do line following.Hi!I run marginallyclever.com. You are me, ~ five years ago.At that time, I made the decision to avoid electronics as much as possible. If I could find it in a pcb, buy it. If not, do something else. That freed me up to focus on learning mechanics.I started by picking some robots I liked and studying how and why they worked. I built YouTube playlists for each type, I read the assembly documents, I practiced drafting by drawing my own versions of the parts. I made digital models of each part for my robot and built it in OpenGL, then taught the computer model to move. Cheaper than frying real motors!At the time if never touched a microcontroller or a servo. It took about 6 weeks to build bought an 18 servo crab that walks. I was so dumb i didn't know I couldn't do it.These days, I still don't do electronics. I get smart young men who've learned to design my circuits for me, and focus on the part I'm good at. I highly recommend building a team with a few people. The collaboration will make things faster, better, and more pleasant.I hope that helps.Might I recommend learning PLC programming? A lot of it is done in ladder-loggic. Having that under your belt might make you appetizing to an integrator who will then send you to classes, often on their dime, to teach your more of the robot hard-ware side.Our company is based in Michigan and is an authorized FANUC integrator. We do a lot of work integrating FANUC robots into stamping plants and automotive suppliers of all tiers; however, getting a certificate from FANUC saying that you are trained on how to operate their robots is challenging and expensive. I'm not aware of many who go out and do it on their own.It's such a growing field, someone with your knowledge should be able to get their foot in the door somewhere!Plc looks pretty interesting. The logic it uses is...different which is really...curious. I'll definitely be trying this thanksABB is starting to put out service robotics and looking at expanding their robotics portfolio in a lot of interesting ways. It appears they are building out autonomous vehicles capabilities at their Connecticut R&D center. Could be interesting!!What does ABB normally do? Managing power grid stuff?From their About sectionABB (ABBN: SIX Swiss Ex) is a pioneering technology leader in power grids, electrification products, industrial automation and robotics and motion, serving customers in utilities, industry and transport & infrastructure globallyIs that the only R&D center working on these AV capabilities?Also probably does not mean autonomous cars but rather mobile robots in specialized environments (factories, ...) Still interesting though!Damm i worked security for them, dont they do mostly electrical grid stuff?They are also the second largest supplier of robotics behind kukaAutonomous Construction Vehicles and Industrial Vehicles are going to be a big segment coming soon. There are over 1M forklift drivers in the united states alone in controlled warehouse environments.Do u know where can i find this data?A few reasons. They are high speed precision robots. They are co-robots meaning that they use a variety of internal sensors to be safe around people while operating and they can do things like near instant programming by manually moving it to position, pressing a button then moving it to the next position. The support team is more than just a phone call. They will send engineers to you. The end of the arm has a connection that can transfer power and data back and forth to whatever you want to put there. So you can stick a laser scanner, a camera, and force sensitive gripper on it with no external wires to run up the side of the arm. Etc. just some good engineering in general.Let's not forget that in addition to all of that, all of this is expected to work for tens of thousands cycles before starting to lose precision and requiring maintenance.Agree on all points. I'd like to expand on one specific area about being collaborative and safe around humans. I like to use the extreme example of a samurai sword sharpening cobot to make the point that a proper risk assessment is so critical to a collaborative application.I've never used the ufactory arm but am very famiar with Universal Robots, particularly the ur5 and ur3. The software is fantastic. It is incredibly easy to use and takes barely any time to get comfortable with it. This ease of use and quality of equipment easily justifies their asking priceSoftware and built quality of the UR robots is amazing, could also be labour costs, don‚Äôt know how much production they source outside of Denmark.Universal robots are real industrial tools with support, backend, customer service, reliability, and robustness, and ufactory are toys for universities and small shops to play with.There really is no comparison, a UR5 will run for 24 hours a day for years, a ufactory would break down in a month of the software could even keep it running that long.It's like comparing a $10 RC car at the toy store to a $600 Traxxas. They LOOK roughly the same, but there is really no comparison.Source: I worked in corporate research for ABB robotics for 6 years, and helped design YuMi and several other things like it.The UR will also very likely break down running 24/7 for years especially if you need to push cycle time at all. It‚Äôs mind boggling how much we have spent on replacement joints for those things over the years.They have an approachable interface. The ease of use, integrated force torque sensor, and ability to do advanced interfacing from industrial protocols to the RTDE Interface make them a very well rounded system for specific use cases. Compared to industrial robots such as a Fanuc in similar reach and payload I think you'll find they are both in the same price neighborhood once the Fanuc is optioned out. Where the two types of arms begin to part ways is the use case. If you are doing light machine tending without exposure to oil based fluids the UR is pretty good. The IP rating is not that great on a UR. The older CB3 series UR joints were more robust in my experience over the newer E-series when using them for CNC machine tending. UR has a new redesigned joint coming out which time will tell of it's more robust. They've redesigned the joints to make it easier to produce with less parts.35k is just the beginning. When we were getting quotes that price nearly tripled when you throw in support, programming, installation etc. We were looking for CNC machine tending on a high mix low volume shopGood software + dominant market position.It takes a lot of effort to change one robot for another, mainly because of different interfaces.Because UR has been first in the cobot space, it's very popular. For the groups already using UR, it's cheaper to buy a new UR for 30k than it is to buy a cheaper equivalent.Does it need to be a collaborative robot? You can get an epson VT6L which has similar motion capabilities for ~14k. The reliability is similar to UR (not great) but that is probably fine for a research environment.I would caution on using an Epson unless you take all the joint travel limits under consideration. All UR joints have ¬±360¬∞ whereas most others do not.Often the cost of the arm is cheap compared to the initial integration, maintenance and changes to the process down the road. I work for an industrial integrator and we make a lot of extra money making someone's cheap solution run. It doesn't take much time to blow $20-30k of extra labor in an integration because it's a product or software that no one is familiar with or isn't as capable as everyone thought and now we have to come up with a fix. It's the worst when you try to contact the manufacturer about holes in the documentation and it takes two weeks of emails to find out that no one really knows that much about your topics.Also, cheap solutions often don't have great life cycle management so you may use their product today and they will discontinue it next year and don't make parts for it. Then you are stuck doing a whole new integration, training, etc..When it comes to Automation, 'custom' is always going to be more expensive than 'standard' or existing.I'm a full-time custom automation guy, and there's nothing new or even challenging about this system, with the exception of the front end software and/or User interface.Depending on how polished you want that to be, that alone could eat a good chunk of your $200k-$300k. If you want something you can drag and drop an AutoCAD drawing into, or some other slick time-saving way of programming, expect to pay for it.A six axis robot on a 7th axis is going to be in the $150k range from most of the big name robot manufacturers, and that's before you program it, or design and build any tools for it. Controls hardware is another big cost, and then all the programming...it adds up really fast.I'm sure you have rules of thumb for estimating costs as a GC, but a fair one for custom machines and automation in the states is 2.5X 'purchasing' cost for the total cost of the job.Feel free to shoot me a message on here if you want to connect offline and drill down on this to get a more accurate realistic cost, and if you're willing to share your labor numbers, we could figure out a rough ROI pretty quickly. Fair warning, my experience tells me it won't be a great ROI. But if you're fighting labor shortages or a lack of reliable semi-skilled labor, well, that's about half of what I do these days.Thank you so much for your reply. You sound like just the kind of guy I am looking for. I will def reach out via DM to explore this further.There are several off the shelf software CAD / CAM solutions that convert an AutoCAD blueprint into the individual panels that have the different lengths of studs and openings etc...How those CAD panel drawings then translate into the robotic production is where I believe the custom programming will come into play.Does the 7th axis part add a lot of cost to the robot? My idea was actually to have 4 stationary robots rather than the two 7 axis bots. Not for cost savings but in order to decrease the time each panel is being processed.Also, my budget is pretty flexible. We build a lot of homes every year so the work is kinda built-in to my roi calculations.The robot itself is 200kGood thing, the industrial robot companies have been ripping everyone off for far too long. Hope foxconn starts selling their bots soon.How have they managed that? There's plenty of competition in the field.that's not a robot it's a small Asian boy in a metal case.Just $20k!?! They're going to destroy everything in the manufacturing market with costs that low!When they keep the robot operator deaths low.Will they make more robots using those robots?I for one welcome the beginning of the end of compulsory human labor.thats pretty interesting - any thoughts about the unemployment effect it may/will have?Unless I'm not correct, that robot looks very similar to a Fanuc, I mean I'm on an iPhone so the picture may have not loaded and I'm looking at the wrong one... Oh btw guys... Hi! I'm new here!I've been in this field (palletizing and depal) for more than a decade. There have been many solutions in the market. the big players sell the solutions as software add-ons. For example, Yaskawa's PalletSolver.It's a very competitive market for homoegenous palletizing (a relatively easier problem) because it's easy and the vision side is pretty much solved. Random box depal/pal is where the sauce is.These lab-demoed solutions come apart in a warehouse-like situation.Why use a cobot here? A normal robot would do the same but in a cage.Or is it just research for students?The main reason to get a proper industrial robot would be if you need to move the robot a lot faster.In this case where the factory has moderate output there simple isnt a need to get a more expensive robot with the associated cage.UR5 is not a great choice for palletizing. Limited reach and payload, slow compared to industrial arms, and not as reliable long term. Then again, Fanuc etc are a steeper learning curve so a small shop might have to spend more on integration.That robot is not in collaborative mode or safe mode. UR and others can move fairly fast only behind fencing. The other factors to consider.The life of the robot. Collaborative robots need joints replaced regularly.Payload, less than 30 lbs boxes (approx)Reach is super limited to the pallet heights need to be half or less.I must confess I don't find this impressive in any way. It's slow in a super controlled environment.Oh great, 3 skilled people in a tightly controlled env can do 1 persons job... slow.I'm guessing this isn't running at full speed? Because, in all honesty, the guy could've palettized the boxes himself in the time it took for it to roll down the conveyor, and get p-&-p'd by the robot.I bet it's running at the desired speed. People are standing around because it's a product demo.Its hard to sell something with a demo if no one is watching.This is kind of a useless application for a robot like this, it's just to demonstrate some capabilities. This is around the speed I work with these robots at. They aren't always faster than a person, but they can run 24/7 for weeks on end. They're also are a lot cheaper to use than paying someone to move parts/boxes.You are right though, you can crank up the speed on these, but you'll eventually wear them out so it's probably good to stay in the recommended zones unless you're on a time crunch.What is the vision system on it?On that static boom at the infeed of the conveyor.No that is definetly a cobotA project I made for fun to experiment with some of the latest AI models on my robotic arm. You can find the code and architecture diagram here: https://github.com/ycheng517/tabletop-handybotI'd like to make a similar project could I know What software tools you used?I provide a full description in the GitHub repo: https://github.com/ycheng517/tabletop-handybotThis is really cool. Thanks for the codeThank you for your feedback!"what is my purpose?""to pick up markers"I just love the AR3 and 4sWow, I love that you open sourced it, I was thinking how something like that could work! Thanks!Dropping those markers with attitude.HRI intensifies üôèReally cool! What's happening after the segmentation masks are generated?The point cloud corresponding to the segmentation mask of the object to pick is obtained, and a grasp point is calculated based on it.So can I place the markers in any spot in range and it will pick them up? Or is this code precise for the markers positionIt can pick up any object (as long as it fits the gripper) into any container as long they're anywhere reachable, and you can also arbitrarily specify which object (all of them, just green ones, just brown ones, green one and then brown one, etc).I am sure nothing bad will come of this once it is equipped with legs.The LRmate looks like it could be a little overkill considering how many axes it has. I‚Äôm not sure how these parts may be oriented, but is there a reason you‚Äôre not looking into a SCARA format robot here? I think that would help with your rigidity concerns, and they tend to be a bit cheaper than something like a 6 axis bot.Great point. I should have clarified I will need to clamp at weird angles so a 6-axis is needed.Used to. Depends on where you want to go.can speak to conventional research robotics, most industry application uses PLC programming w/ ladder logic as the standard. You would use a touch pad controller to set the coordinates. For scripting some variant of c is expected.comp sci yes it you stick to the controls side, can't understand the importance of understanding both electrical and mechanics (especially mech) as it matters with your program. For example a high accerl vector can seriously damage hardware as can a terrible PID loop.industrial automation, that industry cannot get people fast enough, controls programming is hella lucrativeyes, in the high tech industrial sector, Canada has some of the best talent for thisif you're in controls, the hours 60 is the norm, minimumDumb Q and prolly a waste of time for you but I‚Äôd really appreciate if you could tell me of some Canadian companies that are hiring in controls programming especially new grads.For those who work in robotics positions on the software/scripting side and use middleware like ROS, what is it really like on a day to day?Day to day? Mostly like any other software job. You have your standup in the morning, write code, compile, run unit tests, gather stats, and spend a ton of time debugging. What's different to other software jobs is that you sometimes upload your new code to the robot and watch it do its thing. That's pretty cool I have to say.2. Are there a lot of job opportunities for someone with just a computer science bachelor's?Not gonna lie, I'm pretty sure most of my colleagues are Master's or PhDs. I'm a Master's myself.4. Is there room for growth?Absolutely. I personally switched from the speech recognition industry to robotics because it struck me as an industry that was bound to grow.5. What is the worst part of the field/robotics jobs?Hmm, maybe how slowly things progress because not only do you have to worry about the software working correctly, the hardware has just as many issues.Regarding 2), keep in mind that you don't have "just as computer science bachelors": You have a degree in psychology. Don't brush that off: it makes you valuable in the field of human-robot interaction, human-computer interaction, or human factors engineering, among others.ROS is an "I stand on the shoulders of giants" thing. You can get an awful lot done quickly by leveraging the vast number of ROS packages. Even if your specific problem isn't solved, it's likely that a large portion of it is. I work for a company that has robots in the field running ROS. Down side is that debugging other peoples code is often harder than debugging your own. At least with ROS 1, distributed systems, can be a bit fragile: if you lose the ROS_MASTER, things stop working, and even when the master comes back, you probably need to resubscribe to get things working. I'd grab the ROS/Gazebo experience if I were in your position.There are lots of opportunities for someone with a CS bachelors, market is pretty damn great. Sure there are fewer opportunities for robotics, but that sector is still hot. If you're asking if someone with no robotics experience can get an entry level robotics position, well, that's tough. I'm hiring entry level, but I work for a startup and I'm definitely looking for someone with at least some embedded experience: how to write software for hardware, even Arduino experience would help with that.US East (MA/NH/NY) and West Coast (CA) mainly (I can't speak for Canada). Although there are still plenty of jobs in the middle: I know from personal experience that there are hungry robotics companies in Albuquerque, that grew up around UNM's robotics program. Also, some interesting companies in Colorado.Hell yeah. This field is exploding in my view. Also, be flexible in your definition of "robot" . There's a ton of IoT systems that look just like robots that don't move.Hard to say. As a senior leader, hiring, ironically, but part of that is the specific geography we're in. Building a commercial connected robot entails a lot more than just embedded software controlling hardware. If that's what excites you, then building a scalable cloud, collecting data, building online dashboards and data analytics systems may not be as exciting, but it needs to be done in order to deliver useful system to customers.Never used ROS. I/we use Linux on everything. Or bare metal in many cases for high frequency operations.Yes tons. Software is critical to robotics.Probably Silicon Valley (the greater San Francisco Bay Area) or some other large tech hub. Being able and willing to move somewhere will give you tons of flexibility. If you lose a job, you can relatively easily find another job, although not in robotics.??? Yes? Vague question.It's really expensive to bring a robot to market and the payoff isn't as large. So the pay may not be as good. Startups and companies can also become unstable and die off. Except if you are able to join a publicly traded company that offers a good salary, annual bonus, and restricted stock units.I was recently offered a co-op position that will teach me more about ROS and GazeboThis experience will help you get a job, regardless of what they require. Internships/co-op help get your resume past the screeners for entry level positions.Canadian here. If you are talking about real world industrial robots (Fanuc, Kuka, abb etc) getting deployed in manufacturing (thousands of them every year in Canada), nobody uses ROS. I don't know anything about the research/startup robotics world.There are tons of jobs, it's a growth industry. A BSc would be sufficient for an entry level position.There is basically an unlimited amount of systems that need to get built. My company has confirmed orders for the next year and a half, and could get more if we wanted.Worst part would probably be on-site commissioning, which can be a long process. But, if things are tested well in the shop, the site deployment can be pretty smooth. Overall it's pretty great in my opinion. Today I was testing a custom servo dispenser attached to an R2000 mounted 8 feet above my head with Dual of Fates blasting on the shop speakers.The research world depends heavily on ROS (just to answer your question there). Not every lab, of course. But every robot our lab has purchased (with the exception of one) has prioritized writing a ROS interface. Startups are more 'it depends': I know of a bunch that do, but I don't know percentage-wise. In most cases they don't advertise it, they're just using it under the hood. I would consider all the startups as producing real-world robots, but (as you said) the industrial robotics space isn't really using it.Hello.I don't use ROS. I'm not hiring atm. Wouldn't know. Definitely.Today? Wiring harnesses. Lately? Sourcing components. Overall? Version control & logistics are tied.https://marginallyclever.comYou typed your link wrongMost robotics jobs are in the bay area, pittsburgh, and boston. In Canada, KW.Montreal has a ton of robotics companiesAnd extra bous points if they speak JapaneseReach out to KindredAI (Toronto) or SanctuaryAI (Vancouver) and talk to some of the engineers there. If you‚Äôre great at what you do and have proof for it, I‚Äôm sure you could find a job there. In general, if you like high growth environments startups are great.If you haven‚Äôt studied Reinforcement Learning, that may be an area of interest where you‚Äôll get to work on robotics and apply your CS degree. For US companies: OpenAI, CovariantAI, Deep MindI love the way it casually flicks the cans across the room.too slow, too bulky. this instead: https://www.youtube.com/watch?v=Bur5g2rvXogx post from r/fanucSeems self defeatingThis is amazing!But did you notice the difference between lab trash and real life trash? I wonder how this system fares.....You can certainly apply reinforcement learning to robot teaching, but for commercial practices, people generally avoid it. Particularly through techniques such as deep learning, any policies a robot learns are very brittle, and cannot maintain a high enough accuracy to consider them viable methods. If you consider a "picking" operation for example, anything less then ~99.9% accuracy just won't work. I think this will definitely change in the future, but right now it's just not worth it.That said however, there are definitely some applications of supervised learning that can help (i.e. identify parts or grasp affordances). But these are generally far from the control strategy you're talking aboutLook up "Learning from Demonstration"For a company that attempted to use this principle for industrial robots, check out the recently deceased Rethink RoboticsWhat's a "teach pendant"?Yes. It's just deep learning that has it's output adjusted by "rewards"That‚Äôs kind‚Äôve the entire field of robotics right now? Boston Dynamics, Tesla, Google, OpenAI are all using reinforcement learning for their robotics? I assumed this was general knowledge? Every robotics article I‚Äôve read in the past 2-3 years talks about machine learning and how it‚Äôs revolutionizing robotics. So yes, you can use machine learning methods to improve robotic training.Edit: Am noob and smarter people have commented more accurate information. BUT I believe this comment will hold weight a few years from now.Can you alter the placement angle slightly, or is the angle dependent upon the orientation of the box? If so, see if the box tends to warp in one direction when compressed. Perhaps caused by the design of the boxes/contents of the box. Any defects in the gripper surface? Any inconsistency in the top surface of the box that might affect its interaction with the gripper? Any slop in the joints of the arm? Is the end effector still moving when the box is placed? Does any one corner of the box touch down before the others? Is there clear misalignment in the end effector (perhaps errors in the code). Is the pallet misaligned? You can do some preliminary testing by getting the arm to its home position, then jogging it until the end effector is pointing forward straight down, check alignment, check that the box drops straight. If you can rule out hardware you know it must be software or tuning. That's all I can think of for now.Whenever I see consistent errors in angle, I always check my transforms first. Because it's so consistent it's most likely a static transform, regarding one of your sensors and their pose relative to your manipulator.Transform? I don't know what you mean. The robot doesn't really accept being programmed by joint movement, but rather by taught points, so i can't have screwed up the math because the robot did it for me.Both your pick and place should have separate, taught frames.If you're picking the boxes square and using world for the placement, I'd say the base of the robot isn't square to your pallet.And if all the boxes are placed square to each other and the pallet is simply being built at an angle, definitely an issue with your user frame for the build station.But even if the base of the robot wasn't square to the pallet, wouldn't the boxes be placed correctly albeit crooked to the pallet, rather than crooked to eachother?May we please see a video of the problem? It's not clear to me from the description what is going on. I think in pictures.Have you tried a bump sensor?It's hard to detect collision from current readings unless you already have an expected current reading and can identify deviation...that's how the big name robots do it. There's so much variation in motor load as the robot moves. If you set your payload incorrectly on a Fanuc controller, for example, you may trip the collision detection just because the motion controller is incorrectly estimating what the current draw of the motors should be.A momentum based disturbance observer is the standard that walking robots use to detect if a leg is in contact with a ground or not. I'm unsure if it would work in your situation since you don't seem to have good force sensing with the stepper motors you are using.Here is a paper describing the technique: https://www.researchgate.net/profile/Gerardo_Bledt/publication/325466467_Contact_Model_Fusion_for_Event-Based_Locomotion_in_Unstructured_Terrains/links/5b0fbfc80f7e9b1ed703c776/Contact-Model-Fusion-for-Event-Based-Locomotion-in-Unstructured-Terrains.pdfHow about an accelerometer at the tip (or whatever part of the robot you may expect a collision at) and look for sharp spikes that would be indicative of a quick deceleration. Would be a fairly cheap and easy retrofit too..I've seen a couple of people use them for actual work (machine tending) versus just hobby type stuff.As an industrial robot guy, I probably wouldn't, but with the right attitude, some intelligent workholding and part handling, and maybe some tolerance for less than ideal performance, you could have some production done for 5-10% of the cost of a Fanuc, etc.Experience and enthusiasm is great, but what kind of formal education do you have? Mechanicalish engineering isn't exactly what you write on your CV.Do you have experience with C/C++? Any particular microcontrollers? Control theory? Interfacing with hardware?Hi there,you can check for offers in diverse mailing lists robotics-worldwide or eu-robotics, though most advertised jobs are for academia. Good luck!Hey friend! I just got a job in San Francisco as an embedded software engineer at a culinary robotics company. This is my first position out of university where I studied mechanical engineering. In order to get a software position in robotics as a mechanical engineering graduate it's hard to convince people that you can write professional level code and contribute to their project without hard experience and code samples (GitHub). I would say the most valuable skills that helped me land my job was C/C++ experience, building and design of robotics systems that involved microcontrollers and microprocessors and development of firmware. Overall you will be competing with Software engineers, computer engineers, CSC students who all "look" like a safer bet in terms of being a proficient developer. It will be your aim to convince them that your passion for robotics and your experience is worth taking a chance on you. A lot of people will turn you away, but once you land the first job it will snowball from there. I searched for jobs in the following areas which are dense for tech/robotics: SF /bay area, Boston, waterloo Ontario, Ann Arbor Michigan, Seattle. I used search platforms like LinkedIn and indeed. You may find a lot of "robotics software engineer" jobs where a lot will focus on perception or planning for robotics which are master's/PhD level material - consider avoiding these job postings. I applied to about 30 jobs in sf bay area, 20 in boston, 5 in waterloo and 10 everywhere else. I had interviews from 6 different companies and job offers from 3 (1 in SF, 1 in Cupertino, 1 in Waterloo). Feel free to ask other questions! Hope this helpsAre you trying to make robots(harder) or get to use and program industrial robots(easier)? If you‚Äôre interested in programming and working with industrial robots, look for jobs as a manufacturing or controls engineer that lists some specific robot brands in the posting ( Fanuc, Kuka, ABB, etc).Find some startups and apply. There are a lot of them out there, more in some locations than others, but probably a few in almost every major city. Put together a portfolio of your past work, as much media showing operating final products as possible, put it on youtube and flickr, and put links to it in your r√©sum√©. List your employment of course, but focus on your robotics work and the skills you've collected. If you've built multiple systems at home, then you have more hands-on experience than most of the PhD students I've worked with and in a startup environment you need generalists who can cover many areas at once. Highlight that.Example of what I'm working with todayFANUC robots https://imgur.com/gallery/tc69AThose are really cool! I operate two ABB robots and have often thought about diving in more with the mechanical side of things. Right now we have techs from ABB come in to do our annual PM's and I only do light lubrication and work on the Robot tools. Are there any resources available if I would like to learn more about the PMs? I understand you don't specialize in ABB but any advice to get me started would be awesome!If I'm making high cost stuff and my margins and reputation depend on how quickly my floor can move product within a world of statistically demonstrated repeatability and reproducibility in placement, how do your tests help me sleep at night?Sorry to be late to the party, and I apologize if my question comes off confrontational - even at all.I'm just a maintenance apprentice who cleans the robots off and replaces weld consumables mate :(However, depending on the work your robots would be doing, you would want to vary your PMs. Assuming you have a lot of material handling, checking your grippers, clamps, and locator pins on your end of arm tool (EOAT) would be high priority. Proper PMs of an EOAT can eliminate production downtime caused by broken bolts, and prevent damage to your product due to loose locator pins.If you do more welding, a proper weld robot PM helps cut down on downtime caused by damaged stinger cables (power cable from power supply to wire feeder on robot), and damaged ground cables which will cause weld failures, as well as replacing consumables during a scheduled time instead of during production times after they have become an issue.PMs help prevent a lot of downtime. With the right PMs and the right workers doing them, you can catch a lot of issues that are developing, and eliminate them before they cause downtime.I want to implement a welding arm in our facility for large production repetitive stuff (mostly pipe welding, but structural too). Our guys are journeyman welders, but very lacking in the tech sode. Are there "training" modes for the arm so you can simple trace the weld areas and then it goes back over? How much time is invested in the control programming or is it pretty user friendly?I can only speak for fanuc and Motoman, but teaching a weld is fairly easy. It does take quite a while to program the robot initially from scratch, but after that, you will pretty much be done for good.To teach a robot, you move the robot to the point and press enter basically. For Motoman you move it to the point and press Add then Enter and it adds that point to your program, and fanuc is Shift then add. There is robot training classes that are held by Motoman and fanuc, and I believe when you buy new fanuc robots they provide X amount of classes when you buy a certain amount of robots. I'm not sure if Motoman does as well.I prefer fanuc robots. They are much more informative on their teach pendants, however, Motoman is supposedly easier to learn and more user friendly. I started on FANUC and love them. I learned Motoman a few years later and really don't care for them at all.Cooler than the ones I work with. The ones I see at work are mainly wafer handling robots or FOUP transfer trolleys (semiconductor fab). Thanks for putting this together!I can do some videos and pictures of the robots at work. It's interesting to see the different uses of robots in an industrial setting other than the ones you're in.any KUKA , ABB engineers here?It's so nice to have money.This is AMAZING. I am not from Kuka or ABB or Fanuc, Fanuc is what I‚Äôve worked with mainly. In most industrial motors there are brakes which activate when unpowered. In servo motors, they continue to consume power when not in motion because of their holding force, to save power, many have brakes too.The motors you‚Äôre using look like Allen Bradley, they have inputs just for braking from the Kinetix modules. When power is lost it all depends on your settings how the robot will react but for the most part Fanuc robots operate on DC power. They have a pretty decent buffer between power loss and loss of power to the actual arm. Positional feedback is what keeps them put when braking isn‚Äôt used but when power is lost, braking is how they stay in place. I couldn‚Äôt imagine one of the 40 foot tall robots crashing down on a power loss, it would be catastrophic.I strongly endorse XArm 6: https://www.xarm.cc/. We used them in our lab and also ran hundreds of hours of endurance testing.For $8k, one gets a collaborative 6-axis robot made from carbon fiber and harmonic drive gears. Reach is about 700mm, and it can lift 5kg.Programming is easier than even Universal Robots, let alone any of the traditional kind (Fanuc, Kuka, etc). The primary way is Python, but lower-level controls are also available.Nothing great to share unfortunately‚Äî i think this guy is what you want but it‚Äôs still $15k(!). https://www.mecademic.com/products/Meca500-small-robot-armCheck out https://www.hdrobotic.com/I looked into this a while back and ultimately decided on the AR2. The closest alternative I found was the BCN3D Moveo, which looks like a fairly capable machine, but specifics like repeatability etc. were not listed, and more importantly, there does not appear to be any continuing support. The bill of materials was a long list of parts with no links from three years ago. I don't have time for that!The AR is really a fantastic project. Chris Annin just released a whole new version a few weeks ago (AR3, with backwards compatibility to the previous version) that includes substantial improvements like closed loop stepper control.I've been working in a university lab using the AR2 for a research project for the past year, so I'd be glad to answer any questions you have about it.Depends what your standard of expensive is I guess haha. UARM sells some good ones from my experience, but might be a little priceyCheck out u/centauri24 for his high quality DIY robot arm - the designs are for sale. Iirc the designs are ‚Ç¨100, the bom comes to ‚Ç¨1000 but you could cheap out on some componentsSixi, made by me @ marginallyclever.com. Open source and hardware.You can do Phd on RoboticI'm a computer engineer who's worked as a robotics engineer and my only qualification for getting the position was a robotics course in the final year. (It was pretty hard though). I recommend you take a quick robotics course and just apply.Is there any online course you could recommend? How was your work like?This is simply inverse kinematics, look up how to use frame transformations or dh parameters (I recommend frame transformations), derive the forward kinematics of your system, then invert to get the inverse kinematics. You should wind up with a matrix that when you mulitiply it by your desired output post, it will result in a matrix of the joint angles.Basically, you want the inverse kinematics. To do that, you need the forward kinematics. Nowadays, the forward kinematics of an arm are described in a URDF file. There are libraries out there (KDL,ikrac) which take a URDF file, the names of the base and end effector links, and desired the position and orientation. It then should spit out the appropriate joint angles.There is also the jaocibian method. If your DOF are nice, you can solve the IK symbolically on something like MATLAB as well.With the first R30iB Plus robots shipping out now and a SCARA unit set to be announced this winter, there is a lot to look forward to from them.One interesting area they've really been pushing lately that is sure to pull in a lot of sales is ease if integration; there is a serious effort to be able to set up simpler applications with a simple setup walkthrough instead of "programming".ABB makes a much better product in my experienceA lot of the robotic arm companies are actually behind the times in terms of collaborative robots. UR is emerging as the clear winner in that trend moving forward.Sure, but their install base is super small compared to the big boys. Fanuc: 400k robots, ABB: 300k... UR: 10kI'd be interested to see who sold more robots in just the year 2017 or 2016. And, once UR scales up their production to the scale of ABB or Fanuc or KUKA, who makes more sales going forward.Do they only specialize in small stuff? Biggest payload was like 10kg.What so you mean by collaborative robots?This is the best tl;dr I could make, original reduced by 96%. (I'm a bot)We don't find Fujii, so I leave the campus with little more than a glimpse of the world behind Inaba's forest: a clock above the entrance to the main research facility that ticks at 10 times the usual speed, as if innovation can't happen quickly enough for the world leader in factory automation technology, plus several 40,000-square-foot factories, each of which contains hundreds of bright yellow Fanuc robots working around the clock to build other Fanuc robots, stopping only when no storage space remains.When you have lots of efficient robots making your other robots, you can sell those robots more cheaply-about $25,500 for a new Robodrill.Between the almost 4 million CNC systems and half-million or so industrial robots it has installed around the world, Fanuc has captured about one-quarter of the global market, making it the industry leader over competitors such as Yaskawa Motoman and ABB Robotics in Germany, each of which has about 300,000 industrial robots installed globally.Extended Summary | FAQ | Feedback | Top keywords: robot#1 Fanuc#2 company#3 work#4 more#5Irony...Would highly recommend the Franka. Have used UR, rethink, Epson, kuka. For the type of work you're interested in and the type of tasks the frankas are great. Way better torque control and software interface compared to the UR systems, for comparable costs. Kuka and kinova arms offer higher performance but higher cost (much higher for kuka!)Ignore those saying to not use ROS. If working in manufacturing systems, sure use some production focused system that gives you the automation and payload at a good price. But for learning, rapid prototyping demos, and performing contact interactions in unstructured settings, you won't beat a torque controlled system running ROS imo.Frankas have excellent integration with ros and nice documentation to boot.Haven't used the xArm, but having used the uArm, I'm wary of ufactory, though it does look a lot better.Wouldn't recommend the abb yumi, it has a small reach and payload, primarily position controlled, and anything with force interaction is a bit of a pain. It is mainly focused on small part assembly. Though I guess the tasks you describe might fit with this.. the system control puts me off though.The only other new system that comes to mind that might be worth looking into is an automata Eva, super cheap 6axis arm, though last I spoke with them it seemed very limited on the software interface side, limited to their own SDK. It's been a while though, could have improved since. For teleop I can imagine 6 axes being a bit annoying compared to a 7 axis system if you're trying to do manipulation.Cobots are not inherently safe. They are merely capable of being used in a collaborative application. Safety is application - dependant.Familiarize yourself with the relevant robotics safety standards before buying the cobot.If you give a cobot a sword or a gun it can still kill you.Yeah, I'm aware (which is why I said safER). But still, thanks for the head's up, it never hurts to get a double warning, especially when safety is involved. :)UR robots (UR5e, UR3e, UR10e), Franka. Kuka iiwa or the new issy, Fanuc CRX. I'm about to get an arm from Flexiv to try out.Your budget is hands down going to limit your options with regards to a collaborative robot. Or industrial for that matter.Planar to planar applications? Anything not requiring articulation you could look at a 4-axis cobot from brooks. Will cost around $25k.If you require 6-axes then any UR or ‚Äúme too‚Äù equivalent should get you there. These will still cost you in the high 20s to 30s or more.The comment above mentioning a second-hand robot is probably the best choice.Yes! KRI has a twin scara cobot we were looking at 2 years ago. It ran 45k and ran on their f series controller.Get a 3D printer.They can be used to make all sorts of fingertips and end effectors for the robot. Nothing fancy, for 99% of applications PLA is the best material.The big problem with RnD is hardware transition to something useful and deployable. Each system tries to bake you into their ecosystem and then you have written years of code and stuck with one. So the hardware you pick now plays big with with transition to application.Want something small and stupid for the robot. Get a mecha500 or used.Avoid ROS, no one serious actually deploys this for production. Building your ecosystem on ROS makes you stuck with it.Rather build out on Ethercat. I don‚Äôt see this going away until TSN‚Äôs become a thing.Or Buy an older used ur robot. https://www.ebay.com/itm/325108827101?hash=item4bb1ff03dd:g:2vIAAOSw-G5iNbq6&amdata=enc%3AAQAHAAAAoLFOrCf58LRYT6jm5cHJZwoEEBD7KWM%2BTM%2Fs5C%2F%2B%2B4Njtg%2F53Z2gYw1kBnjI6DizBFuRHiIaT6AW9TJ2cVorsOg4%2B2Z3uWcJ3heyKDTA6F6OwmrTkxMNJHZQ%2B9dIUSTqB4v%2Bhh8FXz3KGJ6LxwEm2ZHkpH2P3IEdEz6CoIo9gBv3XplssXi%2FMH2ZM75RU9Qt0IUnh9N1eVr2MFFo7lVrfWQ%3D%7Ctkp%3ABk9SR4DYl7WVYQAvoid ROS, no one serious actually deploys this for production.I don't know your definition of "serious", but would it surprise you to know that ROS is running in production right now on autonomous vehicles and in deployed military applications?It's not always easy to source this since companies don't like to admit it, but once in a while you'll spot an rviz or gazebo screenshot in someone's external media, or they'll let it slip in papers or github repos.I think ROS gets a bit of a bad rap in industry; if you have few resources, it's often the best way to get to a prototype or MVP. At that point, you're in a much better position to make decisions about the most appropriate tech stack for your application; not to mention that your MVP can get you enough investment to start migrating to a more custom and costly stack if needed.And the realsense is old and also going out of style. Get baslers or mako‚Äôs.And tele-operation == Vnc or Remote Desktop + webcam.We use universal robots UR5e cobots in r&d a lot, love them.We recently launched a Universal Cobot o the floor. Using a robotique wrist camera for bin picking. Pretty easy to get used to if you have even the slightest robotic experience. If youre green, many integrators will offer free training if you ask them.The URe's are probably as flexible as you can get. Big community forum, lots of documentation, LTS software releases. Lots of different communication methods to and from the robot as well. Scripting language is adequate with a few little things that make a python programmer twitch a little. They just rolled out a way to get 2 extra years on top of the 1 year warranty.I‚Äôd get a used UR5 and then look up an SBOT Speed kit from SICK to add plug-n-play area safety to the system.It might sound really strange to non-experts, but using a screwdriver is an unsolved problem in robotics.Industrial robots don't put screws into things.What? There are tonss of robots doing screwdriving tasks in electronics assembly. I've personally implemented several.I‚Äôd disagree - have a look at onrobots screwdriving systemABB Yumi is a pretty safe cobot to work with (as long as you risk asses the task) - due to the low payload it is inherently safe as long as you aren‚Äôt wielding a knife or something like thatHave been using a Franka Emika for research and only have good things to say about it.OP, I'm in the same boat as you on this. Looking for the same things.The isn't a lot of options for cheap, and I've been talking to some welding robot manufacturers in China on alibaba. I'm still not sure whether it's worth building something myself or just hanging over the cash for a known good option, either way it's a lot of money for R&D trials.Best pricing I could find in Australia was around 40k üò≠Honestly just get an internship somewhere. The best way to learn stuff like this is through a 3d offline programming applications(for example Robot studio) but they are extremely expensive. A lot of robotic firms offer internships or courses to earn certifications so do that.Your suggestion is great, but is not really applicable to me. In my country, these things are considered new and novelty. However, I can see that they would be adopted till next decade. So, I wanted advice more toward online available guides and a choice of software which skilled gained from it can be transferable. I am kind of worried to put time into something like Robot studio, but they end up eventually not used here. The other thing is about ROS. Is it needed to be learned? Also, offline simulating software solutions I have seen, say that they need no programming or 3d modeling for common parts from suppliers. Is that true and if yes, to what extend? P.S. the main supplier of industrial products here are Germans. So, it is more likely their standards and suits to be adopted. Can you say what is used there should you know?Thanks for helping me.I'd second that. If you're able to get an employer to pay for it you can get a lot of awesome hands on classes. Universal Robotics offers great classes.Where are you based geographically?Here's an alternative opinion from the answers already given: ROS is not required, classes are not required. Free simulators will teach you 50% of what you need, and you can learn the other 50% on the fly if you pay attention.Perhaps I am an idiot because I am self-taught, but I am also the "robot guy" at my company, and I am able to converse about the minutia of motion control with support engineers of robot manufacturers.Here's my rules for learning robot programming, coming from traditional software development:Real Life Experience > Manufacturer PDFs > Robot Theory > Google >>> ChatGPTAll robots use real-time OSs. Study the differences from traditional computer OSs (best-effort computing, safety margins, no true single-threaded execution)There are thousands of robot manufacturers, there's lots of copying designs, re-branding, and white labelling. The older brands tend to be the best, as robotics companies die more often than other fields, and it takes many years fix the myriad of small issues robots face.Robot software/program languages are usually not fully-featured when compared to traditional programming languages. You will be shocked at what features some robots lack (string parsing, string literals, function calls, for loops, local variables, ...)Kinematics crash course:A pose is translation (where you are) + rotation (where you are facing)A cartesian pose is measured with X/Y/Z (rectilinear space) + a rotation conventionA rotation convention can be one of: Euler Angles (Roll/Pitch/Yaw), Axis Angle (a vector to turn from/how much to turn), Quaternion (nonsense), Rotation Matrix (a 3x3 matrix describing a rotational transformation of X/Y/Z basis vectors).Quaternion/Rotation Matrix perfectly describe a rotation, only one set of numbers equals one rotation. Euler Angles/Axis Angle can describe a the same rotation with multiple sets of numbers. This means converting from RM -> EA for example can have up to 3 different sets of numbers be outputted.A joint pose for a 6-axis robot describes the angle to turn each robot axis or joint, so 6 numbers. If all joint values are within the limits the robot can turn, the position is reachable.Converting a joint pose to cartesian pose is easy, and is known as Forward Kinematics (FK). Inverse kinematics (IK) converts a cartesian position + extras into a joint position, this is harder.Robots are often able to compute IK quickly on the fly (say every 4ms or less), this allows a 6-axis robot to move in straight lines, even though it's individual joints do not move in straight linesRobots keep track of "extra" info mentioned above to ease IK calculation. This is usually whether the robot wrist is up or down (for singularities), number of 6th joint revolutions (for rotations past +/-360 deg), and other infoA singularity is an "awkwardness" in motion, whether it be position, velocity, or other. Place your arm straight up with your palm facing up. Now move you palm down as low as you can while keeping it facing up always. You will notice your elbow will wiggle around to accommodate this motion. You are approaching the singularity of your arm, you are making large joint motions in your arm which equate to small cartesian motions in your palm.Free simulators:ABB Robotstudio, free for 30 days, still usable afterwards: https://forums.robotstudio.com/discussion/14025/robot-studio-freemium-save-a-stationUR Polyscope, totally free, same as real robot pendant: https://www.universal-robots.com/download/software-ur20ur30/simulator-non-linux/offline-simulator-e-series-and-ur20ur30-ur-sim-for-non-linux-5180/Epson RC+, free for 30 days: https://epson.ca/Support/Robots/Software/Epson-RC%2B-7-0/s/SPT_R12N793031FANUC Roboguide, free for 30 days: https://roboticsbook.com/roboguide-v9-rev-d-download/Doosan, totally free with an account (I think): https://robotlab.doosanrobotics.com/en/board/Resources/Whats_NewRoboDK, free for 30 days: https://robodk.com/pricingThank you for guidance.My recommendation would be to try something in the area of algorithm, one that you can simulate it. The budget is not really enough to cover something higher, but if you hit an industry that's requiring a research like yours, perhaps you could ask them for investment too?I also think that you could perhaps go towards the field of AI, and try to use deep learning to replace an already existing algorithm? My knowledge of AI is not the best right now to help, but i'm sure others know better.I'll try to look into your suggestions, thanks.You can download FANUCs Roboguide and Handling Pro on a trial license (30 days I believe) and simulate something. Optimizing an algorithm or a motion maybe. Or do research into multi robot applications, Smarter Every Day has a great video on pinch forming with robots, maybe you can get some inspiration from thereThanks, I'm currently looking at the uses of the robot, it's pretty great.How about: -surgical robots -delta and scara kinematics -different electrical motor types (stepper, brushless ac, brushed dc) -integrating vision -collision detection -safety around humans (cobots vs. safety disabling techniques)Would love to chat moreSounds great. I would add:dental robots (countries with lack of dentists or expensive dental care would be interested)automation and robotics for agriculture or gardeningIn terms of simulators, you could try coppelia sim which has an education license! It may take some time to learn to use it though. https://www.coppeliarobotics.comIf you want to go with a more system design route and build a robot, something you can do cheaply is design a socially interactive robot. There are a few cheap and open-source ones for research like the blossom robot: https://github.com/interaction-lab/blossom-publicOr you could design your own. I think gestures or gaze for socially interactive robots has a lot of opportunities to explore. You can also choose a societal problem and design a robot that might address that in some way!Try a simple robot arm pick and place , using mujoco simulator it is open source and free. You need a computer and training the best of art robot training using reinforcement learning. You will be excelSwarm robotics ! So badass! Ai integration ! So badass!I don't know about how universities can fill this void without having Professors being more aware of the market needs and adapting their courses to that.Still, there are many online courses on C++ and overall robotics topics that are decent enough for you to try something in your own. Try looking for some repos in GitHub to contribute to as well! It will help build your CV.For PLCs though, I think that is more expensive to learn by yourself, because of software licenses and equipment costs. I hope someone proves me wrong though :)You can buy a PLC, hook up some lights and switches and learn by doing for about $200. Automation direct is one vendor which has low cost PLCs and free programming SW.Its too many in github to follow,kind of dont know where to start.!Does you see any roadmaps(solid) for any fields of robotics.?yes PLC is expensive to learn, does it make it a recession-proof job in robotics?Nothing is recession proof. That‚Äôs just the reality of itDo you know about Robot Arms? Do you think the controller for Robot Arm is same at the PLC? This company, Mujin(from Japan) is definitely not the standard, but it seems like they are selling this controller separately? Idk I would have to contact them to know about this. I also don't know about the standards Kuka, ABB, and other Robot Arm companies follow.PLC is not hard(it's deceptive, it can look easy, but it's not), please look at Codesys. The real pain in the ass is the debugging whatever janky code or logic you'll write. I'm in Germany in Master, and I've got PLC programming in Uni, but honestly it's very hard to learn everything in 1 semester, but I saw this course and I thought it's a good place to begin https://learn.realpars.com/collections/PLC-programmingSLAM is not an easy algorithm either, you can learn an entire semester and only learn the basics, again deceptively looks easy, but it's not.Perception is a very new field, don't be surprised if it's bleeding edge, many don't know what they are doing. Even the top AI experts burn out trying to solve it, c.f. Andrej Karpathy leaving Tesla and the entire AI codebase hit rock bottom as he was the only one coding the perception/AI stack according to Musk.C++, I think it's more to do with how good of a code you produce rather than if you know syntax, I don't think it takes much to know syntax but to produce good code needs knowing algorithms, and extensive experience in the industry.My suggestion as someone who is struggling to graduate the Robotics program. Take 1 path and stick to it, don't give a fuck about recession, you are gonna get fired anyway, if you are mediocre in all, you will be the 1st to be fired, if you are expert in 1, you might get fired but at least you will be the 1st to be hired by the competitor if you apply for jobs again.I do actually have an episode with Mujin which I will share soon and they touch on this pointIt depends on the niche/ industry. My company has a Greenfield / new construction side, and an after sales / modifications side.Greenfield constructions will definitely slow during a recession. Upgrades and optimizations will skyrocket during a recession.I‚Äôd bet that projects with new robots will slow, but retooling older robots will be more common.One of my companies, Reasonable Robot Repair, basically has this issue with new hires and we end up training them on this exact stuff for a few months. Most of their problems can be fixed with a phone call or two, but when it comes to programming plcs and c++, you just gotta take the time to learn it. It isn‚Äôt that difficult, just daunting.I think you‚Äôre relatively correctly in terms of industry vs academia, though good universities do teach C++, SLAM/localization, and learning for perception. I‚Äôd also add computer vision in that category. You may have to seek out these classes, and the description doesn‚Äôt always match. These are super hot topics in robotics that have been around for a while.But honestly, students ought to be looking at job descriptions and ensuring they have the necessary skills and qualifications to get a job when they graduate. It will take years and years to get deep knowledge in these areas, sure, but you just need to know enough to get your foot in the door. I bet your college offers classes in:cppmachine learningcomputer vision(possibly) SLAM, touched on in part of a course like optimal control & estimation, motion planning, etc.SpaceX, Blueorigin and NASA are hiring robotics majors. May I suggest you also learn ROS. Also you might look in the drone industry as it is booming. Largest is in Silicon Valley. Space and Drones are recession proof. DOD is also investing in USV and UGV so lots of opportunity in defense.Have you considered starting a RaaS company?Starting a RaaS company..! that's too far I guess.I think it's important to keep in mind that the term "robotics" gets used for a lot of different things. Industrial automation, where PLC would be useful, is a relatively mature field. Your undergrad education would be plenty for you to get trained for many automation jobs. You'd have a lot to learn, but that's expected. There's a lot of jobs and relative stability in the field. Most of the work is implementing solutions with a well understood set of components. Buy an off the shelf gripper for an off the shelf arm, do the custom programming of trajectories, set up a vision system to check for defects. It's certainly not trivial (it's interesting work that I'd love to do), but it's not research.Other robotics, where you'd be working on perception and autonomy and stuff, is more emerging technology. You'd be expected to learn a lot of that stuff in a graduate program, not necessarily undergrad. The undergrad programming (in any language), control theory, etc. give you what you'll need to specialize later, either in a job or in a graduate program. And the research end of that stuff is really a lot of sub-fields, not something that any one person masters.I'm wondering after every automation job we do on robots,it's causing the roboticists to lose his job isn't it?All these mobile robots products in warehouse developed by roboticists in last year's come(may) to saturation in Amazon Robotics, IAM Robotics companies which recently layoff people affected tech people in it mostly. The companies that work on arms see less/ near zero layoffs.I believe if only a recurring need for companies with roboticists,he/she can sustain in the field of robotics. What do you guys say!We "retask" robots from time to time; mostly Fanuc models bought used from assembly lines. Time to get the setup vs. a new robot is the same plus probably a week to get the software relicensed to the current owner, mechanically check the unit out, and give it a through cleaning.Thank you for your reply. How long does it take to get the setup in your case? Also, in what kind of manufacturing industry are your robots use? Thanks againI work for a major producer of automotive robotics (one of the "big four") and in my experience the average cost of a cell is around $100k-$250k and the average cost of the robot and controller system is $30k-$50k. The moral of that story is a much larger portion of the cost of a robotics cell is the integration and task development, so the cost benefit of reusing the robot after it has been beat to hell in another application is low.Thank you for your reply. How long would a robot operate for it to be beaten to hell? 3 to 5 years?Hi, I have worked as an apprentice programming ABB arms for an automotive manufacturer. In my case it was a bit of a niche application of the arms (sanding of wood panels), and retaking of just one part could take from 4 days to 2 weeks depending on their complexity. A new car will typically have around 12-15 new wooden panels, so in total we are looking at ~15 weeks on average just to set up a robot for a new model.Sometimes we also need to reorganise the cells and the units within them to maximise production time (very important).If you want to know a bit more don't hesitate to pm meReally cool and great job. I didn't read everything but there is a lot of usefull information. Maybe some things can be added.Arduino programming is bases on C++.Electrical drawing program like easyEDA is nice to start with.CAD program like Fusion360 is used a lot in the DIY field.Programming environment like platformio in vscode is very usefull for Arduino projects and more.Maybe add something about 3D printing in the future?Thanks for providing this information :)Thanks, u/goustang. RISC IITBbs will keep improvising the roadmap.Meanwhile, if you want to contribute to the information, you are welcome to do so. Consider it as your own : )Elixir is a bizarre addition and has no relevance to robotics, no more than at least a dozen more languages.Also too much emphasis on AI, have never even seen it used in production or R&D robotics.If you think there can be corrections/additions in the material, please do point out :)Start with safety!Everyone skips that. Do not EVER skip safety. I worked with a guy who had to drive a fanuc off a dead person. The poor guy was in T2 mode and impaled himself and died, robotics is most dangerous during developement, which is where most students/hobbyists start.Skip control theory, AI, and most programming languages except C and Python, most of that stuff is being done by a person with a Master's or higher. Focus hard on microcontrollers, basic circuits, sensors, and motor type/control (not PID theory or root locus calculations). Maybe recommend something like assembly or Karel once the basics are understood.I work in production robotics, I see them as a giant, angry Ardiuno that wants to kill you and break things.That's neat, thank you!Thank you!Are you from IIT Bhubaneshwar by any chance?Thank you for this!Great job on this! This is going to help me with SO many _half_ done projects.Please keep up the great work. Many will find this valuable.Thank youRobotics Software Engineer Roadmap 2025! (Get Started in Robotics Today!) https://youtu.be/fOvvz72rWJoOh neat, I can kind of actually apply help to this one. What sensors do you have for inputs? Camera or photoeyes?That I'm not sure on?Background in programming ABB robots. The language they‚Äôre programmed in is a variation of C++, and is honestly reminiscent of gcode. It just takes location information and pumps it into the controller to do the heavy mathematic lifting and create the proper axis motion.On the hobbyist level, I‚Äôm honestly not certain what‚Äôs really out there.None of the programming is done on a keyboard though, in most instances we do it all with a CAD style virtual environment and go back and maybe do a bit of text editing. If not virtually, it‚Äôs done on the fly with a HMI directly connected to the robot. If you can somehow get your hands on a seat of robot studio, that would be an awesome primer for getting your feet wet in an virtual programming environment. I know my university had seats, you just had to pester the proper people to get access to it. But that‚Äôs only an ABB platform and I can‚Äôt really speak to any others.Like working with PLCs or research stufd?I'm not sure about hobbyist robots, but you could use a simulated environment to practice programming industrial robots.many operations delegate control at different levels. If you want to work the hardware its going to be C/C++ and ladder logic.If you want to work in control then you may be writing C/C++ or even Java or .NET. This started in the automation industry back in the 90s mainly because the hardware folks often need some EE, some ME and some CS to be successful. Thus abstraction is used to you can employ developers with less alphabet soup in their resume and still be effective.There are sims you should be able to run, its also not uncommon to just write your own sim.Have a look Into my history. The ik is Programmed on industry standard. (But no dynamics)Pm me if u are interested